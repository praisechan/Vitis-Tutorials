// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2DKernel_PixelStream2AXIBursts (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        dst_pixels_dout,
        dst_pixels_num_data_valid,
        dst_pixels_fifo_cap,
        dst_pixels_empty_n,
        dst_pixels_read,
        width_dout,
        width_num_data_valid,
        width_fifo_cap,
        width_empty_n,
        width_read,
        height_dout,
        height_num_data_valid,
        height_fifo_cap,
        height_empty_n,
        height_read,
        stride_dout,
        stride_num_data_valid,
        stride_fifo_cap,
        stride_empty_n,
        stride_read,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        dst_dout,
        dst_num_data_valid,
        dst_fifo_cap,
        dst_empty_n,
        dst_read,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 75'd1;
parameter    ap_ST_fsm_state2 = 75'd2;
parameter    ap_ST_fsm_state3 = 75'd4;
parameter    ap_ST_fsm_state4 = 75'd8;
parameter    ap_ST_fsm_state5 = 75'd16;
parameter    ap_ST_fsm_state6 = 75'd32;
parameter    ap_ST_fsm_state7 = 75'd64;
parameter    ap_ST_fsm_state8 = 75'd128;
parameter    ap_ST_fsm_state9 = 75'd256;
parameter    ap_ST_fsm_state10 = 75'd512;
parameter    ap_ST_fsm_state11 = 75'd1024;
parameter    ap_ST_fsm_state12 = 75'd2048;
parameter    ap_ST_fsm_state13 = 75'd4096;
parameter    ap_ST_fsm_state14 = 75'd8192;
parameter    ap_ST_fsm_state15 = 75'd16384;
parameter    ap_ST_fsm_state16 = 75'd32768;
parameter    ap_ST_fsm_state17 = 75'd65536;
parameter    ap_ST_fsm_state18 = 75'd131072;
parameter    ap_ST_fsm_state19 = 75'd262144;
parameter    ap_ST_fsm_state20 = 75'd524288;
parameter    ap_ST_fsm_state21 = 75'd1048576;
parameter    ap_ST_fsm_state22 = 75'd2097152;
parameter    ap_ST_fsm_state23 = 75'd4194304;
parameter    ap_ST_fsm_state24 = 75'd8388608;
parameter    ap_ST_fsm_state25 = 75'd16777216;
parameter    ap_ST_fsm_state26 = 75'd33554432;
parameter    ap_ST_fsm_state27 = 75'd67108864;
parameter    ap_ST_fsm_state28 = 75'd134217728;
parameter    ap_ST_fsm_state29 = 75'd268435456;
parameter    ap_ST_fsm_state30 = 75'd536870912;
parameter    ap_ST_fsm_state31 = 75'd1073741824;
parameter    ap_ST_fsm_state32 = 75'd2147483648;
parameter    ap_ST_fsm_state33 = 75'd4294967296;
parameter    ap_ST_fsm_state34 = 75'd8589934592;
parameter    ap_ST_fsm_state35 = 75'd17179869184;
parameter    ap_ST_fsm_state36 = 75'd34359738368;
parameter    ap_ST_fsm_state37 = 75'd68719476736;
parameter    ap_ST_fsm_state38 = 75'd137438953472;
parameter    ap_ST_fsm_state39 = 75'd274877906944;
parameter    ap_ST_fsm_state40 = 75'd549755813888;
parameter    ap_ST_fsm_state41 = 75'd1099511627776;
parameter    ap_ST_fsm_state42 = 75'd2199023255552;
parameter    ap_ST_fsm_state43 = 75'd4398046511104;
parameter    ap_ST_fsm_state44 = 75'd8796093022208;
parameter    ap_ST_fsm_state45 = 75'd17592186044416;
parameter    ap_ST_fsm_state46 = 75'd35184372088832;
parameter    ap_ST_fsm_state47 = 75'd70368744177664;
parameter    ap_ST_fsm_state48 = 75'd140737488355328;
parameter    ap_ST_fsm_state49 = 75'd281474976710656;
parameter    ap_ST_fsm_state50 = 75'd562949953421312;
parameter    ap_ST_fsm_state51 = 75'd1125899906842624;
parameter    ap_ST_fsm_state52 = 75'd2251799813685248;
parameter    ap_ST_fsm_state53 = 75'd4503599627370496;
parameter    ap_ST_fsm_state54 = 75'd9007199254740992;
parameter    ap_ST_fsm_state55 = 75'd18014398509481984;
parameter    ap_ST_fsm_state56 = 75'd36028797018963968;
parameter    ap_ST_fsm_state57 = 75'd72057594037927936;
parameter    ap_ST_fsm_state58 = 75'd144115188075855872;
parameter    ap_ST_fsm_state59 = 75'd288230376151711744;
parameter    ap_ST_fsm_state60 = 75'd576460752303423488;
parameter    ap_ST_fsm_state61 = 75'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 75'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 75'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 75'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 75'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 75'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 75'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 75'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 75'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 75'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 75'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 75'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 75'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 75'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 75'd18889465931478580854784;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] dst_pixels_dout;
input  [6:0] dst_pixels_num_data_valid;
input  [6:0] dst_pixels_fifo_cap;
input   dst_pixels_empty_n;
output   dst_pixels_read;
input  [31:0] width_dout;
input  [1:0] width_num_data_valid;
input  [1:0] width_fifo_cap;
input   width_empty_n;
output   width_read;
input  [31:0] height_dout;
input  [1:0] height_num_data_valid;
input  [1:0] height_fifo_cap;
input   height_empty_n;
output   height_read;
input  [31:0] stride_dout;
input  [2:0] stride_num_data_valid;
input  [2:0] stride_fifo_cap;
input   stride_empty_n;
output   stride_read;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [63:0] m_axi_gmem1_AWADDR;
output  [0:0] m_axi_gmem1_AWID;
output  [31:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [0:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [255:0] m_axi_gmem1_WDATA;
output  [31:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [0:0] m_axi_gmem1_WID;
output  [0:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [63:0] m_axi_gmem1_ARADDR;
output  [0:0] m_axi_gmem1_ARID;
output  [31:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [0:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [255:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [0:0] m_axi_gmem1_RID;
input  [8:0] m_axi_gmem1_RFIFONUM;
input  [0:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [0:0] m_axi_gmem1_BID;
input  [0:0] m_axi_gmem1_BUSER;
input  [63:0] dst_dout;
input  [2:0] dst_num_data_valid;
input  [2:0] dst_fifo_cap;
input   dst_empty_n;
output   dst_read;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dst_pixels_read;
reg width_read;
reg height_read;
reg stride_read;
reg m_axi_gmem1_AWVALID;
reg[63:0] m_axi_gmem1_AWADDR;
reg[0:0] m_axi_gmem1_AWID;
reg[31:0] m_axi_gmem1_AWLEN;
reg[2:0] m_axi_gmem1_AWSIZE;
reg[1:0] m_axi_gmem1_AWBURST;
reg[1:0] m_axi_gmem1_AWLOCK;
reg[3:0] m_axi_gmem1_AWCACHE;
reg[2:0] m_axi_gmem1_AWPROT;
reg[3:0] m_axi_gmem1_AWQOS;
reg[3:0] m_axi_gmem1_AWREGION;
reg[0:0] m_axi_gmem1_AWUSER;
reg m_axi_gmem1_WVALID;
reg m_axi_gmem1_BREADY;
reg dst_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [74:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    width_blk_n;
reg    height_blk_n;
reg    stride_blk_n;
reg    gmem1_blk_n_AW;
wire    ap_CS_fsm_state5;
reg    gmem1_blk_n_B;
wire    ap_CS_fsm_state75;
reg    dst_blk_n;
reg   [63:0] dst_read_reg_674;
wire   [15:0] trunc_ln90_1_fu_275_p1;
reg   [15:0] trunc_ln90_1_reg_679;
wire   [4:0] remainPix_fu_279_p1;
reg   [4:0] remainPix_reg_684;
reg   [11:0] loopWidth_reg_690;
reg   [10:0] div38_i_reg_698;
wire   [31:0] zext_ln77_1_fu_328_p1;
reg   [31:0] zext_ln77_1_reg_703;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln80_fu_334_p2;
reg   [0:0] icmp_ln80_reg_708;
wire   [11:0] sub15_i_fu_347_p2;
reg   [11:0] sub15_i_reg_713;
wire   [0:0] cmp17_i_fu_352_p2;
reg   [0:0] cmp17_i_reg_718;
wire   [0:0] icmp_fu_368_p2;
reg   [0:0] icmp_reg_723;
wire   [0:0] cmp17_2_i_fu_374_p2;
reg   [0:0] cmp17_2_i_reg_728;
wire   [0:0] icmp15_fu_390_p2;
reg   [0:0] icmp15_reg_733;
wire   [0:0] cmp17_4_i_fu_396_p2;
reg   [0:0] cmp17_4_i_reg_738;
wire   [0:0] cmp17_5_i_fu_402_p2;
reg   [0:0] cmp17_5_i_reg_743;
wire   [0:0] cmp17_6_i_fu_408_p2;
reg   [0:0] cmp17_6_i_reg_748;
wire   [0:0] icmp18_fu_424_p2;
reg   [0:0] icmp18_reg_753;
wire   [0:0] cmp17_8_i_fu_430_p2;
reg   [0:0] cmp17_8_i_reg_758;
wire   [0:0] cmp17_9_i_fu_436_p2;
reg   [0:0] cmp17_9_i_reg_763;
wire   [0:0] cmp17_10_i_fu_442_p2;
reg   [0:0] cmp17_10_i_reg_768;
wire   [0:0] cmp17_11_i_fu_448_p2;
reg   [0:0] cmp17_11_i_reg_773;
wire   [0:0] cmp17_12_i_fu_454_p2;
reg   [0:0] cmp17_12_i_reg_778;
wire   [0:0] cmp17_13_i_fu_460_p2;
reg   [0:0] cmp17_13_i_reg_783;
wire   [0:0] cmp17_14_i_fu_466_p2;
reg   [0:0] cmp17_14_i_reg_788;
wire   [0:0] icmp21_fu_482_p2;
reg   [0:0] icmp21_reg_793;
wire   [0:0] cmp17_16_i_fu_488_p2;
reg   [0:0] cmp17_16_i_reg_798;
wire   [0:0] cmp17_17_i_fu_494_p2;
reg   [0:0] cmp17_17_i_reg_803;
wire   [0:0] cmp17_18_i_fu_500_p2;
reg   [0:0] cmp17_18_i_reg_808;
wire   [0:0] cmp17_19_i_fu_506_p2;
reg   [0:0] cmp17_19_i_reg_813;
wire   [0:0] cmp17_20_i_fu_512_p2;
reg   [0:0] cmp17_20_i_reg_818;
wire   [0:0] cmp17_21_i_fu_518_p2;
reg   [0:0] cmp17_21_i_reg_823;
wire   [0:0] cmp17_22_i_fu_524_p2;
reg   [0:0] cmp17_22_i_reg_828;
wire   [0:0] cmp17_23_i_fu_530_p2;
reg   [0:0] cmp17_23_i_reg_833;
wire   [0:0] cmp17_24_i_fu_536_p2;
reg   [0:0] cmp17_24_i_reg_838;
wire   [0:0] cmp17_25_i_fu_542_p2;
reg   [0:0] cmp17_25_i_reg_843;
wire   [0:0] cmp17_26_i_fu_548_p2;
reg   [0:0] cmp17_26_i_reg_848;
wire   [0:0] cmp17_27_i_fu_554_p2;
reg   [0:0] cmp17_27_i_reg_853;
wire   [0:0] cmp17_28_i_fu_560_p2;
reg   [0:0] cmp17_28_i_reg_858;
wire   [0:0] cmp17_29_i_fu_566_p2;
reg   [0:0] cmp17_29_i_reg_863;
wire   [0:0] cmp17_30_i_fu_572_p2;
reg   [0:0] cmp17_30_i_reg_868;
wire   [26:0] div38_cast_i_fu_578_p1;
reg   [26:0] div38_cast_i_reg_873;
reg   [7:0] pixel_load_reg_881;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln86_fu_584_p2;
reg   [58:0] trunc_ln1_reg_886;
reg   [5:0] buff_V_address0;
reg    buff_V_ce0;
reg    buff_V_we0;
wire   [255:0] buff_V_q0;
wire    grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_start;
wire    grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_done;
wire    grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_idle;
wire    grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_ready;
wire    grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_dst_pixels_read;
wire   [5:0] grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_buff_V_address0;
wire    grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_buff_V_ce0;
wire    grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_buff_V_we0;
wire   [255:0] grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_buff_V_d0;
wire   [7:0] grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_pixel_1_out;
wire    grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_pixel_1_out_ap_vld;
wire    grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_ext_blocking_n;
wire    grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_str_blocking_n;
wire    grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_int_blocking_n;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_start;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_done;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_idle;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_ready;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWVALID;
wire   [63:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWADDR;
wire   [0:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWID;
wire   [31:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWLEN;
wire   [2:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWSIZE;
wire   [1:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWBURST;
wire   [1:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWLOCK;
wire   [3:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWCACHE;
wire   [2:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWPROT;
wire   [3:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWQOS;
wire   [3:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWREGION;
wire   [0:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWUSER;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WVALID;
wire   [255:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WDATA;
wire   [31:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WSTRB;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WLAST;
wire   [0:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WID;
wire   [0:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WUSER;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARVALID;
wire   [63:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARADDR;
wire   [0:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARID;
wire   [31:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARLEN;
wire   [2:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARSIZE;
wire   [1:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARBURST;
wire   [1:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARLOCK;
wire   [3:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARCACHE;
wire   [2:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARPROT;
wire   [3:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARQOS;
wire   [3:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARREGION;
wire   [0:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARUSER;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_RREADY;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_BREADY;
wire   [5:0] grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_buff_V_address0;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_buff_V_ce0;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_ext_blocking_n;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_str_blocking_n;
wire    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_int_blocking_n;
reg    grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_start_reg;
wire    ap_CS_fsm_state4;
reg   [7:0] pixel_fu_172;
reg    grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire  signed [63:0] sext_ln102_fu_643_p1;
reg    ap_block_state1;
reg   [15:0] y_fu_176;
wire   [15:0] y_2_fu_589_p2;
reg   [26:0] yoffset_fu_180;
wire   [26:0] add_ln107_fu_628_p2;
wire   [15:0] trunc_ln90_fu_271_p1;
wire   [16:0] zext_ln77_fu_283_p1;
wire   [16:0] add_ln77_fu_287_p2;
wire   [5:0] zext_ln79_fu_331_p1;
wire   [5:0] remainPix_1_fu_339_p3;
wire   [4:0] tmp_fu_358_p4;
wire   [3:0] tmp_1_fu_380_p4;
wire   [2:0] tmp_2_fu_414_p4;
wire   [1:0] tmp_3_fu_472_p4;
wire   [31:0] shl_ln_fu_601_p3;
wire   [63:0] zext_ln91_fu_609_p1;
wire   [63:0] add_ln91_fu_613_p2;
reg   [74:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
reg    ap_ST_fsm_state75_blk;
wire    ap_ext_blocking_cur_n;
wire    ap_int_blocking_cur_n;
reg    ap_ext_blocking_sub_n;
reg    ap_wait_0;
reg    ap_sub_ext_blocking_0;
reg    ap_wait_1;
reg    ap_sub_ext_blocking_1;
reg    ap_str_blocking_sub_n;
reg    ap_sub_str_blocking_0;
reg    ap_sub_str_blocking_1;
reg    ap_int_blocking_sub_n;
reg    ap_sub_int_blocking_0;
reg    ap_sub_int_blocking_1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 75'd1;
#0 grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_start_reg = 1'b0;
#0 grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_start_reg = 1'b0;
end

Filter2DKernel_PixelStream2AXIBursts_buff_V_RAM_AUTO_1R1W #(
    .DataWidth( 256 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
buff_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buff_V_address0),
    .ce0(buff_V_ce0),
    .we0(buff_V_we0),
    .d0(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_buff_V_d0),
    .q0(buff_V_q0)
);

Filter2DKernel_PixelStream2AXIBursts_Pipeline_pixels2bytes grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_start),
    .ap_done(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_done),
    .ap_idle(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_idle),
    .ap_ready(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_ready),
    .dst_pixels_dout(dst_pixels_dout),
    .dst_pixels_num_data_valid(7'd0),
    .dst_pixels_fifo_cap(7'd0),
    .dst_pixels_empty_n(dst_pixels_empty_n),
    .dst_pixels_read(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_dst_pixels_read),
    .pixel(pixel_load_reg_881),
    .loopWidth(loopWidth_reg_690),
    .buff_V_address0(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_buff_V_address0),
    .buff_V_ce0(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_buff_V_ce0),
    .buff_V_we0(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_buff_V_we0),
    .buff_V_d0(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_buff_V_d0),
    .icmp_ln80(icmp_ln80_reg_708),
    .cmp17_30_i(cmp17_30_i_reg_868),
    .cmp17_29_i(cmp17_29_i_reg_863),
    .cmp17_28_i(cmp17_28_i_reg_858),
    .cmp17_27_i(cmp17_27_i_reg_853),
    .cmp17_26_i(cmp17_26_i_reg_848),
    .cmp17_25_i(cmp17_25_i_reg_843),
    .cmp17_24_i(cmp17_24_i_reg_838),
    .cmp17_23_i(cmp17_23_i_reg_833),
    .cmp17_22_i(cmp17_22_i_reg_828),
    .cmp17_21_i(cmp17_21_i_reg_823),
    .cmp17_20_i(cmp17_20_i_reg_818),
    .cmp17_19_i(cmp17_19_i_reg_813),
    .cmp17_18_i(cmp17_18_i_reg_808),
    .cmp17_17_i(cmp17_17_i_reg_803),
    .cmp17_16_i(cmp17_16_i_reg_798),
    .cmp17_15_i(icmp21_reg_793),
    .cmp17_14_i(cmp17_14_i_reg_788),
    .cmp17_13_i(cmp17_13_i_reg_783),
    .cmp17_12_i(cmp17_12_i_reg_778),
    .cmp17_11_i(cmp17_11_i_reg_773),
    .cmp17_10_i(cmp17_10_i_reg_768),
    .cmp17_9_i(cmp17_9_i_reg_763),
    .cmp17_8_i(cmp17_8_i_reg_758),
    .cmp17_7_i(icmp18_reg_753),
    .cmp17_6_i(cmp17_6_i_reg_748),
    .cmp17_5_i(cmp17_5_i_reg_743),
    .cmp17_4_i(cmp17_4_i_reg_738),
    .cmp17_3_i(icmp15_reg_733),
    .cmp17_2_i(cmp17_2_i_reg_728),
    .cmp17_1_i(icmp_reg_723),
    .sext_ln86(sub15_i_reg_713),
    .cmp17_i(cmp17_i_reg_718),
    .pixel_1_out(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_pixel_1_out),
    .pixel_1_out_ap_vld(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_pixel_1_out_ap_vld),
    .ap_ext_blocking_n(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_str_blocking_n),
    .ap_int_blocking_n(grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_int_blocking_n)
);

Filter2DKernel_PixelStream2AXIBursts_Pipeline_bytes2aximm grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_start),
    .ap_done(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_done),
    .ap_idle(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_idle),
    .ap_ready(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_ready),
    .m_axi_gmem1_AWVALID(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWVALID),
    .m_axi_gmem1_AWREADY(m_axi_gmem1_AWREADY),
    .m_axi_gmem1_AWADDR(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWADDR),
    .m_axi_gmem1_AWID(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWID),
    .m_axi_gmem1_AWLEN(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWLEN),
    .m_axi_gmem1_AWSIZE(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWSIZE),
    .m_axi_gmem1_AWBURST(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWBURST),
    .m_axi_gmem1_AWLOCK(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWLOCK),
    .m_axi_gmem1_AWCACHE(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWCACHE),
    .m_axi_gmem1_AWPROT(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWPROT),
    .m_axi_gmem1_AWQOS(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWQOS),
    .m_axi_gmem1_AWREGION(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWREGION),
    .m_axi_gmem1_AWUSER(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWUSER),
    .m_axi_gmem1_WVALID(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WVALID),
    .m_axi_gmem1_WREADY(m_axi_gmem1_WREADY),
    .m_axi_gmem1_WDATA(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WDATA),
    .m_axi_gmem1_WSTRB(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WSTRB),
    .m_axi_gmem1_WLAST(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WLAST),
    .m_axi_gmem1_WID(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WID),
    .m_axi_gmem1_WUSER(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WUSER),
    .m_axi_gmem1_ARVALID(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARVALID),
    .m_axi_gmem1_ARREADY(1'b0),
    .m_axi_gmem1_ARADDR(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARADDR),
    .m_axi_gmem1_ARID(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARID),
    .m_axi_gmem1_ARLEN(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARLEN),
    .m_axi_gmem1_ARSIZE(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARSIZE),
    .m_axi_gmem1_ARBURST(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARBURST),
    .m_axi_gmem1_ARLOCK(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARLOCK),
    .m_axi_gmem1_ARCACHE(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARCACHE),
    .m_axi_gmem1_ARPROT(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARPROT),
    .m_axi_gmem1_ARQOS(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARQOS),
    .m_axi_gmem1_ARREGION(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARREGION),
    .m_axi_gmem1_ARUSER(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_ARUSER),
    .m_axi_gmem1_RVALID(1'b0),
    .m_axi_gmem1_RREADY(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_RREADY),
    .m_axi_gmem1_RDATA(256'd0),
    .m_axi_gmem1_RLAST(1'b0),
    .m_axi_gmem1_RID(1'd0),
    .m_axi_gmem1_RFIFONUM(9'd0),
    .m_axi_gmem1_RUSER(1'd0),
    .m_axi_gmem1_RRESP(2'd0),
    .m_axi_gmem1_BVALID(m_axi_gmem1_BVALID),
    .m_axi_gmem1_BREADY(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_BREADY),
    .m_axi_gmem1_BRESP(m_axi_gmem1_BRESP),
    .m_axi_gmem1_BID(m_axi_gmem1_BID),
    .m_axi_gmem1_BUSER(m_axi_gmem1_BUSER),
    .sext_ln102(trunc_ln1_reg_886),
    .loopWidth(loopWidth_reg_690),
    .buff_V_address0(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_buff_V_address0),
    .buff_V_ce0(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_buff_V_ce0),
    .buff_V_q0(buff_V_q0),
    .ap_ext_blocking_n(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_str_blocking_n),
    .ap_int_blocking_n(grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_int_blocking_n)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln86_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_start_reg <= 1'b1;
        end else if ((grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_ready == 1'b1)) begin
            grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_start_reg <= 1'b1;
        end else if ((grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_ready == 1'b1)) begin
            grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (dst_empty_n == 1'b0) | (stride_empty_n == 1'b0) | (height_empty_n == 1'b0) | (width_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        pixel_fu_172 <= 8'd0;
    end else if (((grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_pixel_1_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        pixel_fu_172 <= grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_pixel_1_out;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (dst_empty_n == 1'b0) | (stride_empty_n == 1'b0) | (height_empty_n == 1'b0) | (width_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_fu_176 <= 16'd0;
    end else if (((icmp_ln86_fu_584_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        y_fu_176 <= y_2_fu_589_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (dst_empty_n == 1'b0) | (stride_empty_n == 1'b0) | (height_empty_n == 1'b0) | (width_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        yoffset_fu_180 <= 27'd0;
    end else if (((icmp_ln86_fu_584_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        yoffset_fu_180 <= add_ln107_fu_628_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cmp17_10_i_reg_768 <= cmp17_10_i_fu_442_p2;
        cmp17_11_i_reg_773 <= cmp17_11_i_fu_448_p2;
        cmp17_12_i_reg_778 <= cmp17_12_i_fu_454_p2;
        cmp17_13_i_reg_783 <= cmp17_13_i_fu_460_p2;
        cmp17_14_i_reg_788 <= cmp17_14_i_fu_466_p2;
        cmp17_16_i_reg_798 <= cmp17_16_i_fu_488_p2;
        cmp17_17_i_reg_803 <= cmp17_17_i_fu_494_p2;
        cmp17_18_i_reg_808 <= cmp17_18_i_fu_500_p2;
        cmp17_19_i_reg_813 <= cmp17_19_i_fu_506_p2;
        cmp17_20_i_reg_818 <= cmp17_20_i_fu_512_p2;
        cmp17_21_i_reg_823 <= cmp17_21_i_fu_518_p2;
        cmp17_22_i_reg_828 <= cmp17_22_i_fu_524_p2;
        cmp17_23_i_reg_833 <= cmp17_23_i_fu_530_p2;
        cmp17_24_i_reg_838 <= cmp17_24_i_fu_536_p2;
        cmp17_25_i_reg_843 <= cmp17_25_i_fu_542_p2;
        cmp17_26_i_reg_848 <= cmp17_26_i_fu_548_p2;
        cmp17_27_i_reg_853 <= cmp17_27_i_fu_554_p2;
        cmp17_28_i_reg_858 <= cmp17_28_i_fu_560_p2;
        cmp17_29_i_reg_863 <= cmp17_29_i_fu_566_p2;
        cmp17_2_i_reg_728 <= cmp17_2_i_fu_374_p2;
        cmp17_30_i_reg_868 <= cmp17_30_i_fu_572_p2;
        cmp17_4_i_reg_738 <= cmp17_4_i_fu_396_p2;
        cmp17_5_i_reg_743 <= cmp17_5_i_fu_402_p2;
        cmp17_6_i_reg_748 <= cmp17_6_i_fu_408_p2;
        cmp17_8_i_reg_758 <= cmp17_8_i_fu_430_p2;
        cmp17_9_i_reg_763 <= cmp17_9_i_fu_436_p2;
        cmp17_i_reg_718 <= cmp17_i_fu_352_p2;
        div38_cast_i_reg_873[10 : 0] <= div38_cast_i_fu_578_p1[10 : 0];
        icmp15_reg_733 <= icmp15_fu_390_p2;
        icmp18_reg_753 <= icmp18_fu_424_p2;
        icmp21_reg_793 <= icmp21_fu_482_p2;
        icmp_ln80_reg_708 <= icmp_ln80_fu_334_p2;
        icmp_reg_723 <= icmp_fu_368_p2;
        sub15_i_reg_713 <= sub15_i_fu_347_p2;
        zext_ln77_1_reg_703[11 : 0] <= zext_ln77_1_fu_328_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        div38_i_reg_698 <= {{stride_dout[15:5]}};
        dst_read_reg_674 <= dst_dout;
        loopWidth_reg_690 <= {{add_ln77_fu_287_p2[16:5]}};
        remainPix_reg_684 <= remainPix_fu_279_p1;
        trunc_ln90_1_reg_679 <= trunc_ln90_1_fu_275_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln86_fu_584_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        pixel_load_reg_881 <= pixel_fu_172;
        trunc_ln1_reg_886 <= {{add_ln91_fu_613_p2[63:5]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (dst_empty_n == 1'b0) | (stride_empty_n == 1'b0) | (height_empty_n == 1'b0) | (width_empty_n == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

always @ (*) begin
    if (((grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_done == 1'b0) | (m_axi_gmem1_AWREADY == 1'b0))) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem1_BVALID == 1'b0)) begin
        ap_ST_fsm_state75_blk = 1'b1;
    end else begin
        ap_ST_fsm_state75_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln86_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((((ap_wait_1 & ap_sub_ext_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_ext_blocking_0) == 1'b1))) begin
        ap_ext_blocking_sub_n = 1'b0;
    end else begin
        ap_ext_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_1 & ap_sub_int_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_int_blocking_0) == 1'b1))) begin
        ap_int_blocking_sub_n = 1'b0;
    end else begin
        ap_int_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln86_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_1 & ap_sub_str_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_str_blocking_0) == 1'b1))) begin
        ap_str_blocking_sub_n = 1'b0;
    end else begin
        ap_str_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_0 = 1'b1;
    end else begin
        ap_sub_ext_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_1 = 1'b1;
    end else begin
        ap_sub_ext_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_0 = 1'b1;
    end else begin
        ap_sub_int_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_1 = 1'b1;
    end else begin
        ap_sub_int_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_0 = 1'b1;
    end else begin
        ap_sub_str_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_1 = 1'b1;
    end else begin
        ap_sub_str_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state5 == ap_CS_fsm)) begin
        ap_wait_0 = 1'b1;
    end else begin
        ap_wait_0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state7 == ap_CS_fsm)) begin
        ap_wait_1 = 1'b1;
    end else begin
        ap_wait_1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buff_V_address0 = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_buff_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buff_V_address0 = grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_buff_V_address0;
    end else begin
        buff_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buff_V_ce0 = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_buff_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buff_V_ce0 = grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_buff_V_ce0;
    end else begin
        buff_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buff_V_we0 = grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_buff_V_we0;
    end else begin
        buff_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        dst_blk_n = dst_empty_n;
    end else begin
        dst_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dst_pixels_read = grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_dst_pixels_read;
    end else begin
        dst_pixels_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (dst_empty_n == 1'b0) | (stride_empty_n == 1'b0) | (height_empty_n == 1'b0) | (width_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        dst_read = 1'b1;
    end else begin
        dst_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        gmem1_blk_n_AW = m_axi_gmem1_AWREADY;
    end else begin
        gmem1_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        gmem1_blk_n_B = m_axi_gmem1_BVALID;
    end else begin
        gmem1_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_blk_n = height_empty_n;
    end else begin
        height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (dst_empty_n == 1'b0) | (stride_empty_n == 1'b0) | (height_empty_n == 1'b0) | (width_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_read = 1'b1;
    end else begin
        height_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_done == 1'b0) | (m_axi_gmem1_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem1_AWADDR = sext_ln102_fu_643_p1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_AWADDR = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWADDR;
    end else begin
        m_axi_gmem1_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_AWBURST = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWBURST;
    end else begin
        m_axi_gmem1_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_AWCACHE = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWCACHE;
    end else begin
        m_axi_gmem1_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_AWID = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWID;
    end else begin
        m_axi_gmem1_AWID = 1'd0;
    end
end

always @ (*) begin
    if ((~((grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_done == 1'b0) | (m_axi_gmem1_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem1_AWLEN = zext_ln77_1_reg_703;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_AWLEN = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWLEN;
    end else begin
        m_axi_gmem1_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_AWLOCK = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWLOCK;
    end else begin
        m_axi_gmem1_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_AWPROT = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWPROT;
    end else begin
        m_axi_gmem1_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_AWQOS = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWQOS;
    end else begin
        m_axi_gmem1_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_AWREGION = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWREGION;
    end else begin
        m_axi_gmem1_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_AWSIZE = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWSIZE;
    end else begin
        m_axi_gmem1_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_AWUSER = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWUSER;
    end else begin
        m_axi_gmem1_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if ((~((grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_done == 1'b0) | (m_axi_gmem1_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem1_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_AWVALID = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_AWVALID;
    end else begin
        m_axi_gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) & (m_axi_gmem1_BVALID == 1'b1))) begin
        m_axi_gmem1_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_BREADY = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_BREADY;
    end else begin
        m_axi_gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem1_WVALID = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WVALID;
    end else begin
        m_axi_gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        stride_blk_n = stride_empty_n;
    end else begin
        stride_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (dst_empty_n == 1'b0) | (stride_empty_n == 1'b0) | (height_empty_n == 1'b0) | (width_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        stride_read = 1'b1;
    end else begin
        stride_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_blk_n = width_empty_n;
    end else begin
        width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (dst_empty_n == 1'b0) | (stride_empty_n == 1'b0) | (height_empty_n == 1'b0) | (width_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_read = 1'b1;
    end else begin
        width_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (dst_empty_n == 1'b0) | (stride_empty_n == 1'b0) | (height_empty_n == 1'b0) | (width_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln86_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if ((~((grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_done == 1'b0) | (m_axi_gmem1_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            if (((1'b1 == ap_CS_fsm_state75) & (m_axi_gmem1_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln107_fu_628_p2 = (div38_cast_i_reg_873 + yoffset_fu_180);

assign add_ln77_fu_287_p2 = (zext_ln77_fu_283_p1 + 17'd31);

assign add_ln91_fu_613_p2 = (dst_read_reg_674 + zext_ln91_fu_609_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (dst_empty_n == 1'b0) | (stride_empty_n == 1'b0) | (height_empty_n == 1'b0) | (width_empty_n == 1'b0));
end

assign ap_ext_blocking_cur_n = (gmem1_blk_n_B & gmem1_blk_n_AW);

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & ap_ext_blocking_cur_n);

assign ap_int_blocking_cur_n = (width_blk_n & stride_blk_n & height_blk_n & dst_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_sub_n & ap_int_blocking_cur_n);

assign ap_str_blocking_n = (ap_str_blocking_sub_n & 1'b1);

assign cmp17_10_i_fu_442_p2 = ((remainPix_1_fu_339_p3 > 6'd10) ? 1'b1 : 1'b0);

assign cmp17_11_i_fu_448_p2 = ((remainPix_1_fu_339_p3 > 6'd11) ? 1'b1 : 1'b0);

assign cmp17_12_i_fu_454_p2 = ((remainPix_1_fu_339_p3 > 6'd12) ? 1'b1 : 1'b0);

assign cmp17_13_i_fu_460_p2 = ((remainPix_1_fu_339_p3 > 6'd13) ? 1'b1 : 1'b0);

assign cmp17_14_i_fu_466_p2 = ((remainPix_1_fu_339_p3 > 6'd14) ? 1'b1 : 1'b0);

assign cmp17_16_i_fu_488_p2 = ((remainPix_1_fu_339_p3 > 6'd16) ? 1'b1 : 1'b0);

assign cmp17_17_i_fu_494_p2 = ((remainPix_1_fu_339_p3 > 6'd17) ? 1'b1 : 1'b0);

assign cmp17_18_i_fu_500_p2 = ((remainPix_1_fu_339_p3 > 6'd18) ? 1'b1 : 1'b0);

assign cmp17_19_i_fu_506_p2 = ((remainPix_1_fu_339_p3 > 6'd19) ? 1'b1 : 1'b0);

assign cmp17_20_i_fu_512_p2 = ((remainPix_1_fu_339_p3 > 6'd20) ? 1'b1 : 1'b0);

assign cmp17_21_i_fu_518_p2 = ((remainPix_1_fu_339_p3 > 6'd21) ? 1'b1 : 1'b0);

assign cmp17_22_i_fu_524_p2 = ((remainPix_1_fu_339_p3 > 6'd22) ? 1'b1 : 1'b0);

assign cmp17_23_i_fu_530_p2 = ((remainPix_1_fu_339_p3 > 6'd23) ? 1'b1 : 1'b0);

assign cmp17_24_i_fu_536_p2 = ((remainPix_1_fu_339_p3 > 6'd24) ? 1'b1 : 1'b0);

assign cmp17_25_i_fu_542_p2 = ((remainPix_1_fu_339_p3 > 6'd25) ? 1'b1 : 1'b0);

assign cmp17_26_i_fu_548_p2 = ((remainPix_1_fu_339_p3 > 6'd26) ? 1'b1 : 1'b0);

assign cmp17_27_i_fu_554_p2 = ((remainPix_1_fu_339_p3 > 6'd27) ? 1'b1 : 1'b0);

assign cmp17_28_i_fu_560_p2 = ((remainPix_1_fu_339_p3 > 6'd28) ? 1'b1 : 1'b0);

assign cmp17_29_i_fu_566_p2 = ((remainPix_1_fu_339_p3 > 6'd29) ? 1'b1 : 1'b0);

assign cmp17_2_i_fu_374_p2 = ((remainPix_1_fu_339_p3 > 6'd2) ? 1'b1 : 1'b0);

assign cmp17_30_i_fu_572_p2 = ((remainPix_1_fu_339_p3 > 6'd30) ? 1'b1 : 1'b0);

assign cmp17_4_i_fu_396_p2 = ((remainPix_1_fu_339_p3 > 6'd4) ? 1'b1 : 1'b0);

assign cmp17_5_i_fu_402_p2 = ((remainPix_1_fu_339_p3 > 6'd5) ? 1'b1 : 1'b0);

assign cmp17_6_i_fu_408_p2 = ((remainPix_1_fu_339_p3 > 6'd6) ? 1'b1 : 1'b0);

assign cmp17_8_i_fu_430_p2 = ((remainPix_1_fu_339_p3 > 6'd8) ? 1'b1 : 1'b0);

assign cmp17_9_i_fu_436_p2 = ((remainPix_1_fu_339_p3 > 6'd9) ? 1'b1 : 1'b0);

assign cmp17_i_fu_352_p2 = ((remainPix_1_fu_339_p3 != 6'd0) ? 1'b1 : 1'b0);

assign div38_cast_i_fu_578_p1 = div38_i_reg_698;

assign grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_start = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_ap_start_reg;

assign grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_start = grp_PixelStream2AXIBursts_Pipeline_pixels2bytes_fu_219_ap_start_reg;

assign icmp15_fu_390_p2 = ((tmp_1_fu_380_p4 != 4'd0) ? 1'b1 : 1'b0);

assign icmp18_fu_424_p2 = ((tmp_2_fu_414_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp21_fu_482_p2 = ((tmp_3_fu_472_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_fu_368_p2 = ((tmp_fu_358_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_334_p2 = ((remainPix_reg_684 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_584_p2 = ((y_fu_176 == trunc_ln90_1_reg_679) ? 1'b1 : 1'b0);

assign m_axi_gmem1_ARADDR = 64'd0;

assign m_axi_gmem1_ARBURST = 2'd0;

assign m_axi_gmem1_ARCACHE = 4'd0;

assign m_axi_gmem1_ARID = 1'd0;

assign m_axi_gmem1_ARLEN = 32'd0;

assign m_axi_gmem1_ARLOCK = 2'd0;

assign m_axi_gmem1_ARPROT = 3'd0;

assign m_axi_gmem1_ARQOS = 4'd0;

assign m_axi_gmem1_ARREGION = 4'd0;

assign m_axi_gmem1_ARSIZE = 3'd0;

assign m_axi_gmem1_ARUSER = 1'd0;

assign m_axi_gmem1_ARVALID = 1'b0;

assign m_axi_gmem1_RREADY = 1'b0;

assign m_axi_gmem1_WDATA = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WDATA;

assign m_axi_gmem1_WID = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WID;

assign m_axi_gmem1_WLAST = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WLAST;

assign m_axi_gmem1_WSTRB = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WSTRB;

assign m_axi_gmem1_WUSER = grp_PixelStream2AXIBursts_Pipeline_bytes2aximm_fu_262_m_axi_gmem1_WUSER;

assign remainPix_1_fu_339_p3 = ((icmp_ln80_fu_334_p2[0:0] == 1'b1) ? 6'd32 : zext_ln79_fu_331_p1);

assign remainPix_fu_279_p1 = width_dout[4:0];

assign sext_ln102_fu_643_p1 = $signed(trunc_ln1_reg_886);

assign shl_ln_fu_601_p3 = {{yoffset_fu_180}, {5'd0}};

assign sub15_i_fu_347_p2 = ($signed(loopWidth_reg_690) + $signed(12'd4095));

assign tmp_1_fu_380_p4 = {{remainPix_1_fu_339_p3[5:2]}};

assign tmp_2_fu_414_p4 = {{remainPix_1_fu_339_p3[5:3]}};

assign tmp_3_fu_472_p4 = {{remainPix_1_fu_339_p3[5:4]}};

assign tmp_fu_358_p4 = {{remainPix_1_fu_339_p3[5:1]}};

assign trunc_ln90_1_fu_275_p1 = height_dout[15:0];

assign trunc_ln90_fu_271_p1 = width_dout[15:0];

assign y_2_fu_589_p2 = (y_fu_176 + 16'd1);

assign zext_ln77_1_fu_328_p1 = loopWidth_reg_690;

assign zext_ln77_fu_283_p1 = trunc_ln90_fu_271_p1;

assign zext_ln79_fu_331_p1 = remainPix_reg_684;

assign zext_ln91_fu_609_p1 = shl_ln_fu_601_p3;

always @ (posedge ap_clk) begin
    zext_ln77_1_reg_703[31:12] <= 20'b00000000000000000000;
    div38_cast_i_reg_873[26:11] <= 16'b0000000000000000;
end

endmodule //Filter2DKernel_PixelStream2AXIBursts
