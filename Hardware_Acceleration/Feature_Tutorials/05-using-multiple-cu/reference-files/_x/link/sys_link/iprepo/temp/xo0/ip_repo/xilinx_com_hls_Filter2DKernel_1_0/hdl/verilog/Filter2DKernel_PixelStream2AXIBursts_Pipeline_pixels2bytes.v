// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2DKernel_PixelStream2AXIBursts_Pipeline_pixels2bytes (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dst_pixels_dout,
        dst_pixels_num_data_valid,
        dst_pixels_fifo_cap,
        dst_pixels_empty_n,
        dst_pixels_read,
        pixel,
        loopWidth,
        buff_V_address0,
        buff_V_ce0,
        buff_V_we0,
        buff_V_d0,
        icmp_ln80,
        cmp17_30_i,
        cmp17_29_i,
        cmp17_28_i,
        cmp17_27_i,
        cmp17_26_i,
        cmp17_25_i,
        cmp17_24_i,
        cmp17_23_i,
        cmp17_22_i,
        cmp17_21_i,
        cmp17_20_i,
        cmp17_19_i,
        cmp17_18_i,
        cmp17_17_i,
        cmp17_16_i,
        cmp17_15_i,
        cmp17_14_i,
        cmp17_13_i,
        cmp17_12_i,
        cmp17_11_i,
        cmp17_10_i,
        cmp17_9_i,
        cmp17_8_i,
        cmp17_7_i,
        cmp17_6_i,
        cmp17_5_i,
        cmp17_4_i,
        cmp17_3_i,
        cmp17_2_i,
        cmp17_1_i,
        sext_ln86,
        cmp17_i,
        pixel_1_out,
        pixel_1_out_ap_vld,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 32'd1;
parameter    ap_ST_fsm_pp0_stage1 = 32'd2;
parameter    ap_ST_fsm_pp0_stage2 = 32'd4;
parameter    ap_ST_fsm_pp0_stage3 = 32'd8;
parameter    ap_ST_fsm_pp0_stage4 = 32'd16;
parameter    ap_ST_fsm_pp0_stage5 = 32'd32;
parameter    ap_ST_fsm_pp0_stage6 = 32'd64;
parameter    ap_ST_fsm_pp0_stage7 = 32'd128;
parameter    ap_ST_fsm_pp0_stage8 = 32'd256;
parameter    ap_ST_fsm_pp0_stage9 = 32'd512;
parameter    ap_ST_fsm_pp0_stage10 = 32'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 32'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 32'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 32'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 32'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 32'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 32'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 32'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 32'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 32'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 32'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 32'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 32'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 32'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 32'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 32'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 32'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 32'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 32'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 32'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 32'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] dst_pixels_dout;
input  [6:0] dst_pixels_num_data_valid;
input  [6:0] dst_pixels_fifo_cap;
input   dst_pixels_empty_n;
output   dst_pixels_read;
input  [7:0] pixel;
input  [11:0] loopWidth;
output  [5:0] buff_V_address0;
output   buff_V_ce0;
output   buff_V_we0;
output  [255:0] buff_V_d0;
input  [0:0] icmp_ln80;
input  [0:0] cmp17_30_i;
input  [0:0] cmp17_29_i;
input  [0:0] cmp17_28_i;
input  [0:0] cmp17_27_i;
input  [0:0] cmp17_26_i;
input  [0:0] cmp17_25_i;
input  [0:0] cmp17_24_i;
input  [0:0] cmp17_23_i;
input  [0:0] cmp17_22_i;
input  [0:0] cmp17_21_i;
input  [0:0] cmp17_20_i;
input  [0:0] cmp17_19_i;
input  [0:0] cmp17_18_i;
input  [0:0] cmp17_17_i;
input  [0:0] cmp17_16_i;
input  [0:0] cmp17_15_i;
input  [0:0] cmp17_14_i;
input  [0:0] cmp17_13_i;
input  [0:0] cmp17_12_i;
input  [0:0] cmp17_11_i;
input  [0:0] cmp17_10_i;
input  [0:0] cmp17_9_i;
input  [0:0] cmp17_8_i;
input  [0:0] cmp17_7_i;
input  [0:0] cmp17_6_i;
input  [0:0] cmp17_5_i;
input  [0:0] cmp17_4_i;
input  [0:0] cmp17_3_i;
input  [0:0] cmp17_2_i;
input  [0:0] cmp17_1_i;
input  [11:0] sext_ln86;
input  [0:0] cmp17_i;
output  [7:0] pixel_1_out;
output   pixel_1_out_ap_vld;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg dst_pixels_read;
reg buff_V_ce0;
reg buff_V_we0;
reg pixel_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln91_reg_1180;
reg   [0:0] or_ln96_1_reg_1223;
reg    ap_predicate_op92_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage31;
reg   [0:0] or_ln96_30_reg_1344;
reg    ap_predicate_op239_read_state32;
reg    ap_block_state32_pp0_stage31_iter0;
reg    ap_block_pp0_stage31_subdone;
reg    dst_pixels_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] or_ln96_reg_1219;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln96_2_reg_1232;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln96_3_reg_1236;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln96_4_reg_1240;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln96_5_reg_1244;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg   [0:0] or_ln96_6_reg_1248;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg   [0:0] or_ln96_7_reg_1252;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg   [0:0] or_ln96_8_reg_1256;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
reg   [0:0] or_ln96_9_reg_1260;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
reg   [0:0] or_ln96_10_reg_1264;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
reg   [0:0] or_ln96_11_reg_1268;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
reg   [0:0] or_ln96_12_reg_1272;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
reg   [0:0] or_ln96_13_reg_1276;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
reg   [0:0] or_ln96_14_reg_1280;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
reg   [0:0] or_ln96_15_reg_1284;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
reg   [0:0] or_ln96_16_reg_1288;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
reg   [0:0] or_ln96_17_reg_1292;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
reg   [0:0] or_ln96_18_reg_1296;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
reg   [0:0] or_ln96_19_reg_1300;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
reg   [0:0] or_ln96_20_reg_1304;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
reg   [0:0] or_ln96_21_reg_1308;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
reg   [0:0] or_ln96_22_reg_1312;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
reg   [0:0] or_ln96_23_reg_1316;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
reg   [0:0] or_ln96_24_reg_1320;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
reg   [0:0] or_ln96_25_reg_1324;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
reg   [0:0] or_ln96_26_reg_1328;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
reg   [0:0] or_ln96_27_reg_1332;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
reg   [0:0] or_ln96_28_reg_1336;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
reg   [0:0] or_ln96_29_reg_1340;
wire    ap_block_pp0_stage31;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln96_31_reg_1348;
reg   [7:0] pixel_3_reg_353;
reg   [7:0] pixel_5_reg_363;
reg   [7:0] pixel_7_reg_374;
reg   [7:0] pixel_9_reg_385;
reg   [7:0] pixel_11_reg_396;
reg   [7:0] pixel_13_reg_407;
reg   [7:0] pixel_15_reg_418;
reg   [7:0] pixel_17_reg_429;
reg   [7:0] pixel_19_reg_440;
reg   [7:0] pixel_21_reg_451;
reg   [7:0] pixel_23_reg_462;
reg   [7:0] pixel_25_reg_473;
reg   [7:0] pixel_27_reg_484;
reg   [7:0] pixel_29_reg_495;
reg   [7:0] pixel_31_reg_506;
reg   [7:0] pixel_33_reg_517;
reg   [7:0] pixel_35_reg_528;
reg   [7:0] pixel_37_reg_539;
reg   [7:0] pixel_39_reg_550;
reg   [7:0] pixel_41_reg_561;
reg   [7:0] pixel_43_reg_572;
reg   [7:0] pixel_45_reg_583;
reg   [7:0] pixel_47_reg_594;
reg   [7:0] pixel_49_reg_605;
reg   [7:0] pixel_51_reg_616;
reg   [7:0] pixel_53_reg_627;
reg   [7:0] pixel_55_reg_638;
reg   [7:0] pixel_57_reg_649;
reg   [7:0] pixel_59_reg_660;
reg   [7:0] pixel_61_reg_671;
reg    ap_predicate_op85_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state34_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg    ap_predicate_op103_read_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_predicate_op118_read_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_11001;
reg    ap_predicate_op133_read_state11;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
reg    ap_predicate_op148_read_state14;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_11001;
reg    ap_predicate_op163_read_state17;
reg    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_pp0_stage16_11001;
reg    ap_predicate_op178_read_state20;
reg    ap_block_state20_pp0_stage19_iter0;
reg    ap_block_pp0_stage19_11001;
reg    ap_predicate_op203_read_state23;
reg    ap_block_state23_pp0_stage22_iter0;
reg    ap_block_pp0_stage22_11001;
reg    ap_predicate_op215_read_state26;
reg    ap_block_state26_pp0_stage25_iter0;
reg    ap_block_pp0_stage25_11001;
reg    ap_predicate_op227_read_state29;
reg    ap_block_state29_pp0_stage28_iter0;
reg    ap_block_pp0_stage28_11001;
reg    ap_block_pp0_stage2_11001;
reg    ap_predicate_op108_read_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg    ap_predicate_op123_read_state9;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_11001;
reg    ap_predicate_op138_read_state12;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_11001;
reg    ap_predicate_op153_read_state15;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_11001;
reg    ap_predicate_op168_read_state18;
reg    ap_block_state18_pp0_stage17_iter0;
reg    ap_block_pp0_stage17_11001;
reg    ap_predicate_op183_read_state21;
reg    ap_block_state21_pp0_stage20_iter0;
reg    ap_block_pp0_stage20_11001;
reg    ap_predicate_op207_read_state24;
reg    ap_block_state24_pp0_stage23_iter0;
reg    ap_block_pp0_stage23_11001;
reg    ap_predicate_op219_read_state27;
reg    ap_block_state27_pp0_stage26_iter0;
reg    ap_block_pp0_stage26_11001;
reg    ap_predicate_op231_read_state30;
reg    ap_block_state30_pp0_stage29_iter0;
reg    ap_block_pp0_stage29_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op243_read_state33;
reg    ap_block_state33_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_predicate_op98_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_predicate_op113_read_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
reg    ap_predicate_op128_read_state10;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
reg    ap_predicate_op143_read_state13;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_11001;
reg    ap_predicate_op158_read_state16;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_11001;
reg    ap_predicate_op173_read_state19;
reg    ap_block_state19_pp0_stage18_iter0;
reg    ap_block_pp0_stage18_11001;
reg    ap_predicate_op199_read_state22;
reg    ap_block_state22_pp0_stage21_iter0;
reg    ap_block_pp0_stage21_11001;
reg    ap_predicate_op211_read_state25;
reg    ap_block_state25_pp0_stage24_iter0;
reg    ap_block_pp0_stage24_11001;
reg    ap_predicate_op223_read_state28;
reg    ap_block_state28_pp0_stage27_iter0;
reg    ap_block_pp0_stage27_11001;
reg    ap_predicate_op235_read_state31;
reg    ap_block_state31_pp0_stage30_iter0;
reg    ap_block_pp0_stage30_11001;
reg   [11:0] x_1_reg_1174;
reg   [11:0] x_1_reg_1174_pp0_iter1_reg;
wire   [0:0] icmp_ln91_fu_762_p2;
reg   [0:0] icmp_ln91_reg_1180_pp0_iter1_reg;
wire   [0:0] cmp16_i_fu_772_p2;
reg   [0:0] cmp16_i_reg_1184;
wire   [0:0] or_ln96_fu_778_p2;
wire   [0:0] or_ln96_1_fu_784_p2;
wire   [0:0] or_ln96_2_fu_796_p2;
wire   [0:0] or_ln96_3_fu_805_p2;
wire   [0:0] or_ln96_4_fu_809_p2;
wire   [0:0] or_ln96_5_fu_813_p2;
wire   [0:0] or_ln96_6_fu_817_p2;
wire   [0:0] or_ln96_7_fu_821_p2;
wire   [0:0] or_ln96_8_fu_825_p2;
wire   [0:0] or_ln96_9_fu_829_p2;
wire   [0:0] or_ln96_10_fu_833_p2;
wire   [0:0] or_ln96_11_fu_837_p2;
wire   [0:0] or_ln96_12_fu_841_p2;
wire   [0:0] or_ln96_13_fu_845_p2;
wire   [0:0] or_ln96_14_fu_849_p2;
wire   [0:0] or_ln96_15_fu_853_p2;
wire   [0:0] or_ln96_16_fu_857_p2;
wire   [0:0] or_ln96_17_fu_861_p2;
wire   [0:0] or_ln96_18_fu_865_p2;
wire   [0:0] or_ln96_19_fu_869_p2;
wire   [0:0] or_ln96_20_fu_873_p2;
wire   [0:0] or_ln96_21_fu_877_p2;
wire   [0:0] or_ln96_22_fu_881_p2;
wire   [0:0] or_ln96_23_fu_885_p2;
wire   [0:0] or_ln96_24_fu_889_p2;
wire   [0:0] or_ln96_25_fu_893_p2;
wire   [0:0] or_ln96_26_fu_897_p2;
wire   [0:0] or_ln96_27_fu_901_p2;
wire   [0:0] or_ln96_28_fu_905_p2;
wire   [0:0] or_ln96_29_fu_909_p2;
wire   [0:0] or_ln96_30_fu_913_p2;
wire   [0:0] or_ln96_31_fu_917_p2;
reg    ap_block_pp0_stage31_11001;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_3_reg_353;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_5_reg_363;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_7_reg_374;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_9_reg_385;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_11_reg_396;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_13_reg_407;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_15_reg_418;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_17_reg_429;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_19_reg_440;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_21_reg_451;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_23_reg_462;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_25_reg_473;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_27_reg_484;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_29_reg_495;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_31_reg_506;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_33_reg_517;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_35_reg_528;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_37_reg_539;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_39_reg_550;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_41_reg_561;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_43_reg_572;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_45_reg_583;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_47_reg_594;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_49_reg_605;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_51_reg_616;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_53_reg_627;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_55_reg_638;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_57_reg_649;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_59_reg_660;
reg   [7:0] ap_phi_reg_pp0_iter0_pixel_61_reg_671;
reg   [7:0] ap_phi_reg_pp0_iter1_pixel_61_reg_671;
wire   [7:0] ap_phi_reg_pp0_iter0_pixel_63_reg_682;
reg   [7:0] ap_phi_reg_pp0_iter1_pixel_63_reg_682;
reg   [7:0] ap_phi_mux_pixel_65_phi_fu_695_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_pixel_65_reg_692;
reg   [7:0] ap_phi_reg_pp0_iter1_pixel_65_reg_692;
wire   [63:0] zext_ln91_fu_921_p1;
reg   [11:0] x_fu_116;
wire   [11:0] add_ln91_fu_791_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_x_1;
reg   [7:0] pixel_1_fu_120;
wire   [12:0] zext_ln91_1_fu_768_p1;
wire  signed [12:0] sext_ln86_cast_fu_745_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [31:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
reg    ap_block_pp0_stage29_subdone;
reg    ap_block_pp0_stage30_subdone;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1826;
reg    ap_condition_1830;
reg    ap_condition_1834;
reg    ap_condition_1838;
reg    ap_condition_1842;
reg    ap_condition_1846;
reg    ap_condition_1850;
reg    ap_condition_1854;
reg    ap_condition_1858;
reg    ap_condition_1862;
reg    ap_condition_1866;
reg    ap_condition_1870;
reg    ap_condition_1874;
reg    ap_condition_1878;
reg    ap_condition_1882;
reg    ap_condition_1886;
reg    ap_condition_1890;
reg    ap_condition_1894;
reg    ap_condition_1898;
reg    ap_condition_1902;
reg    ap_condition_1906;
reg    ap_condition_1910;
reg    ap_condition_1914;
reg    ap_condition_1918;
reg    ap_condition_1922;
reg    ap_condition_1926;
reg    ap_condition_1930;
reg    ap_condition_1934;
reg    ap_condition_1938;
reg    ap_condition_1942;
reg    ap_condition_1945;
reg    ap_condition_1948;
reg    ap_condition_1952;
reg    ap_condition_1956;
reg    ap_condition_1960;
reg    ap_condition_1964;
reg    ap_condition_1968;
reg    ap_condition_1972;
reg    ap_condition_1976;
reg    ap_condition_1980;
reg    ap_condition_1984;
reg    ap_condition_1988;
reg    ap_condition_1992;
reg    ap_condition_1996;
reg    ap_condition_2000;
reg    ap_condition_2004;
reg    ap_condition_2008;
reg    ap_condition_2012;
reg    ap_condition_2016;
reg    ap_condition_2020;
reg    ap_condition_2024;
reg    ap_condition_2028;
reg    ap_condition_2032;
reg    ap_condition_2036;
reg    ap_condition_2039;
reg    ap_condition_2042;
reg    ap_condition_2046;
reg    ap_condition_2050;
reg    ap_condition_1178;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Filter2DKernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage31_subdone) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1830)) begin
            ap_phi_reg_pp0_iter0_pixel_11_reg_396 <= ap_phi_reg_pp0_iter0_pixel_9_reg_385;
        end else if ((1'b1 == ap_condition_1826)) begin
            ap_phi_reg_pp0_iter0_pixel_11_reg_396 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1838)) begin
            ap_phi_reg_pp0_iter0_pixel_13_reg_407 <= ap_phi_reg_pp0_iter0_pixel_11_reg_396;
        end else if ((1'b1 == ap_condition_1834)) begin
            ap_phi_reg_pp0_iter0_pixel_13_reg_407 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1846)) begin
            ap_phi_reg_pp0_iter0_pixel_15_reg_418 <= ap_phi_reg_pp0_iter0_pixel_13_reg_407;
        end else if ((1'b1 == ap_condition_1842)) begin
            ap_phi_reg_pp0_iter0_pixel_15_reg_418 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1854)) begin
            ap_phi_reg_pp0_iter0_pixel_17_reg_429 <= ap_phi_reg_pp0_iter0_pixel_15_reg_418;
        end else if ((1'b1 == ap_condition_1850)) begin
            ap_phi_reg_pp0_iter0_pixel_17_reg_429 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1862)) begin
            ap_phi_reg_pp0_iter0_pixel_19_reg_440 <= ap_phi_reg_pp0_iter0_pixel_17_reg_429;
        end else if ((1'b1 == ap_condition_1858)) begin
            ap_phi_reg_pp0_iter0_pixel_19_reg_440 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1870)) begin
            ap_phi_reg_pp0_iter0_pixel_21_reg_451 <= ap_phi_reg_pp0_iter0_pixel_19_reg_440;
        end else if ((1'b1 == ap_condition_1866)) begin
            ap_phi_reg_pp0_iter0_pixel_21_reg_451 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1878)) begin
            ap_phi_reg_pp0_iter0_pixel_23_reg_462 <= ap_phi_reg_pp0_iter0_pixel_21_reg_451;
        end else if ((1'b1 == ap_condition_1874)) begin
            ap_phi_reg_pp0_iter0_pixel_23_reg_462 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1886)) begin
            ap_phi_reg_pp0_iter0_pixel_25_reg_473 <= ap_phi_reg_pp0_iter0_pixel_23_reg_462;
        end else if ((1'b1 == ap_condition_1882)) begin
            ap_phi_reg_pp0_iter0_pixel_25_reg_473 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1894)) begin
            ap_phi_reg_pp0_iter0_pixel_27_reg_484 <= ap_phi_reg_pp0_iter0_pixel_25_reg_473;
        end else if ((1'b1 == ap_condition_1890)) begin
            ap_phi_reg_pp0_iter0_pixel_27_reg_484 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1902)) begin
            ap_phi_reg_pp0_iter0_pixel_29_reg_495 <= ap_phi_reg_pp0_iter0_pixel_27_reg_484;
        end else if ((1'b1 == ap_condition_1898)) begin
            ap_phi_reg_pp0_iter0_pixel_29_reg_495 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1910)) begin
            ap_phi_reg_pp0_iter0_pixel_31_reg_506 <= ap_phi_reg_pp0_iter0_pixel_29_reg_495;
        end else if ((1'b1 == ap_condition_1906)) begin
            ap_phi_reg_pp0_iter0_pixel_31_reg_506 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1918)) begin
            ap_phi_reg_pp0_iter0_pixel_33_reg_517 <= ap_phi_reg_pp0_iter0_pixel_31_reg_506;
        end else if ((1'b1 == ap_condition_1914)) begin
            ap_phi_reg_pp0_iter0_pixel_33_reg_517 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1926)) begin
            ap_phi_reg_pp0_iter0_pixel_35_reg_528 <= ap_phi_reg_pp0_iter0_pixel_33_reg_517;
        end else if ((1'b1 == ap_condition_1922)) begin
            ap_phi_reg_pp0_iter0_pixel_35_reg_528 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1934)) begin
            ap_phi_reg_pp0_iter0_pixel_37_reg_539 <= ap_phi_reg_pp0_iter0_pixel_35_reg_528;
        end else if ((1'b1 == ap_condition_1930)) begin
            ap_phi_reg_pp0_iter0_pixel_37_reg_539 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1942)) begin
            ap_phi_reg_pp0_iter0_pixel_39_reg_550 <= ap_phi_reg_pp0_iter0_pixel_37_reg_539;
        end else if ((1'b1 == ap_condition_1938)) begin
            ap_phi_reg_pp0_iter0_pixel_39_reg_550 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1948)) begin
            ap_phi_reg_pp0_iter0_pixel_3_reg_353 <= pixel_1_fu_120;
        end else if ((1'b1 == ap_condition_1945)) begin
            ap_phi_reg_pp0_iter0_pixel_3_reg_353 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1956)) begin
            ap_phi_reg_pp0_iter0_pixel_41_reg_561 <= ap_phi_reg_pp0_iter0_pixel_39_reg_550;
        end else if ((1'b1 == ap_condition_1952)) begin
            ap_phi_reg_pp0_iter0_pixel_41_reg_561 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1964)) begin
            ap_phi_reg_pp0_iter0_pixel_43_reg_572 <= ap_phi_reg_pp0_iter0_pixel_41_reg_561;
        end else if ((1'b1 == ap_condition_1960)) begin
            ap_phi_reg_pp0_iter0_pixel_43_reg_572 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1972)) begin
            ap_phi_reg_pp0_iter0_pixel_45_reg_583 <= ap_phi_reg_pp0_iter0_pixel_43_reg_572;
        end else if ((1'b1 == ap_condition_1968)) begin
            ap_phi_reg_pp0_iter0_pixel_45_reg_583 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1980)) begin
            ap_phi_reg_pp0_iter0_pixel_47_reg_594 <= ap_phi_reg_pp0_iter0_pixel_45_reg_583;
        end else if ((1'b1 == ap_condition_1976)) begin
            ap_phi_reg_pp0_iter0_pixel_47_reg_594 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1988)) begin
            ap_phi_reg_pp0_iter0_pixel_49_reg_605 <= ap_phi_reg_pp0_iter0_pixel_47_reg_594;
        end else if ((1'b1 == ap_condition_1984)) begin
            ap_phi_reg_pp0_iter0_pixel_49_reg_605 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1996)) begin
            ap_phi_reg_pp0_iter0_pixel_51_reg_616 <= ap_phi_reg_pp0_iter0_pixel_49_reg_605;
        end else if ((1'b1 == ap_condition_1992)) begin
            ap_phi_reg_pp0_iter0_pixel_51_reg_616 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_2004)) begin
            ap_phi_reg_pp0_iter0_pixel_53_reg_627 <= ap_phi_reg_pp0_iter0_pixel_51_reg_616;
        end else if ((1'b1 == ap_condition_2000)) begin
            ap_phi_reg_pp0_iter0_pixel_53_reg_627 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_2012)) begin
            ap_phi_reg_pp0_iter0_pixel_55_reg_638 <= ap_phi_reg_pp0_iter0_pixel_53_reg_627;
        end else if ((1'b1 == ap_condition_2008)) begin
            ap_phi_reg_pp0_iter0_pixel_55_reg_638 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_2020)) begin
            ap_phi_reg_pp0_iter0_pixel_57_reg_649 <= ap_phi_reg_pp0_iter0_pixel_55_reg_638;
        end else if ((1'b1 == ap_condition_2016)) begin
            ap_phi_reg_pp0_iter0_pixel_57_reg_649 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_2028)) begin
            ap_phi_reg_pp0_iter0_pixel_59_reg_660 <= ap_phi_reg_pp0_iter0_pixel_57_reg_649;
        end else if ((1'b1 == ap_condition_2024)) begin
            ap_phi_reg_pp0_iter0_pixel_59_reg_660 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_2036)) begin
            ap_phi_reg_pp0_iter0_pixel_5_reg_363 <= ap_phi_reg_pp0_iter0_pixel_3_reg_353;
        end else if ((1'b1 == ap_condition_2032)) begin
            ap_phi_reg_pp0_iter0_pixel_5_reg_363 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_2042)) begin
            ap_phi_reg_pp0_iter0_pixel_7_reg_374 <= ap_phi_reg_pp0_iter0_pixel_5_reg_363;
        end else if ((1'b1 == ap_condition_2039)) begin
            ap_phi_reg_pp0_iter0_pixel_7_reg_374 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_2050)) begin
            ap_phi_reg_pp0_iter0_pixel_9_reg_385 <= ap_phi_reg_pp0_iter0_pixel_7_reg_374;
        end else if ((1'b1 == ap_condition_2046)) begin
            ap_phi_reg_pp0_iter0_pixel_9_reg_385 <= dst_pixels_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1178)) begin
        if (((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_29_reg_1340 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_pixel_61_reg_671 <= ap_phi_reg_pp0_iter0_pixel_59_reg_660;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_pixel_61_reg_671 <= ap_phi_reg_pp0_iter0_pixel_61_reg_671;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln96_30_reg_1344 == 1'd0))) begin
        ap_phi_reg_pp0_iter1_pixel_63_reg_682 <= ap_phi_reg_pp0_iter1_pixel_61_reg_671;
    end else if (((1'b0 == ap_block_pp0_stage31_11001) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (or_ln96_30_reg_1344 == 1'd1))) begin
        ap_phi_reg_pp0_iter1_pixel_63_reg_682 <= dst_pixels_dout;
    end else if (((1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        ap_phi_reg_pp0_iter1_pixel_63_reg_682 <= ap_phi_reg_pp0_iter0_pixel_63_reg_682;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln91_reg_1180 == 1'd0) & (or_ln96_31_reg_1348 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pixel_65_reg_692 <= dst_pixels_dout;
    end else if (((1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        ap_phi_reg_pp0_iter1_pixel_65_reg_692 <= ap_phi_reg_pp0_iter0_pixel_65_reg_692;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        pixel_1_fu_120 <= pixel;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pixel_1_fu_120 <= ap_phi_mux_pixel_65_phi_fu_695_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        x_fu_116 <= 12'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        x_fu_116 <= add_ln91_fu_791_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage30_11001) & (icmp_ln91_reg_1180 == 1'd0) & (or_ln96_29_reg_1340 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
        ap_phi_reg_pp0_iter0_pixel_61_reg_671 <= dst_pixels_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln91_fu_762_p2 == 1'd0))) begin
        cmp16_i_reg_1184 <= cmp16_i_fu_772_p2;
        or_ln96_reg_1219 <= or_ln96_fu_778_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln91_reg_1180 <= icmp_ln91_fu_762_p2;
        icmp_ln91_reg_1180_pp0_iter1_reg <= icmp_ln91_reg_1180;
        x_1_reg_1174 <= ap_sig_allocacmp_x_1;
        x_1_reg_1174_pp0_iter1_reg <= x_1_reg_1174;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        or_ln96_10_reg_1264 <= or_ln96_10_fu_833_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        or_ln96_11_reg_1268 <= or_ln96_11_fu_837_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        or_ln96_12_reg_1272 <= or_ln96_12_fu_841_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        or_ln96_13_reg_1276 <= or_ln96_13_fu_845_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        or_ln96_14_reg_1280 <= or_ln96_14_fu_849_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        or_ln96_15_reg_1284 <= or_ln96_15_fu_853_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        or_ln96_16_reg_1288 <= or_ln96_16_fu_857_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        or_ln96_17_reg_1292 <= or_ln96_17_fu_861_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        or_ln96_18_reg_1296 <= or_ln96_18_fu_865_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        or_ln96_19_reg_1300 <= or_ln96_19_fu_869_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln96_1_reg_1223 <= or_ln96_1_fu_784_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        or_ln96_20_reg_1304 <= or_ln96_20_fu_873_p2;
        or_ln96_21_reg_1308 <= or_ln96_21_fu_877_p2;
        or_ln96_22_reg_1312 <= or_ln96_22_fu_881_p2;
        or_ln96_23_reg_1316 <= or_ln96_23_fu_885_p2;
        or_ln96_24_reg_1320 <= or_ln96_24_fu_889_p2;
        or_ln96_25_reg_1324 <= or_ln96_25_fu_893_p2;
        or_ln96_26_reg_1328 <= or_ln96_26_fu_897_p2;
        or_ln96_27_reg_1332 <= or_ln96_27_fu_901_p2;
        or_ln96_28_reg_1336 <= or_ln96_28_fu_905_p2;
        or_ln96_29_reg_1340 <= or_ln96_29_fu_909_p2;
        or_ln96_30_reg_1344 <= or_ln96_30_fu_913_p2;
        or_ln96_31_reg_1348 <= or_ln96_31_fu_917_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln96_2_reg_1232 <= or_ln96_2_fu_796_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_ln96_3_reg_1236 <= or_ln96_3_fu_805_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        or_ln96_4_reg_1240 <= or_ln96_4_fu_809_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        or_ln96_5_reg_1244 <= or_ln96_5_fu_813_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        or_ln96_6_reg_1248 <= or_ln96_6_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        or_ln96_7_reg_1252 <= or_ln96_7_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        or_ln96_8_reg_1256 <= or_ln96_8_fu_825_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln91_reg_1180 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        or_ln96_9_reg_1260 <= or_ln96_9_fu_829_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        pixel_11_reg_396 <= ap_phi_reg_pp0_iter0_pixel_11_reg_396;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        pixel_13_reg_407 <= ap_phi_reg_pp0_iter0_pixel_13_reg_407;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        pixel_15_reg_418 <= ap_phi_reg_pp0_iter0_pixel_15_reg_418;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        pixel_17_reg_429 <= ap_phi_reg_pp0_iter0_pixel_17_reg_429;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        pixel_19_reg_440 <= ap_phi_reg_pp0_iter0_pixel_19_reg_440;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        pixel_21_reg_451 <= ap_phi_reg_pp0_iter0_pixel_21_reg_451;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        pixel_23_reg_462 <= ap_phi_reg_pp0_iter0_pixel_23_reg_462;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        pixel_25_reg_473 <= ap_phi_reg_pp0_iter0_pixel_25_reg_473;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        pixel_27_reg_484 <= ap_phi_reg_pp0_iter0_pixel_27_reg_484;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        pixel_29_reg_495 <= ap_phi_reg_pp0_iter0_pixel_29_reg_495;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        pixel_31_reg_506 <= ap_phi_reg_pp0_iter0_pixel_31_reg_506;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        pixel_33_reg_517 <= ap_phi_reg_pp0_iter0_pixel_33_reg_517;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        pixel_35_reg_528 <= ap_phi_reg_pp0_iter0_pixel_35_reg_528;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        pixel_37_reg_539 <= ap_phi_reg_pp0_iter0_pixel_37_reg_539;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        pixel_39_reg_550 <= ap_phi_reg_pp0_iter0_pixel_39_reg_550;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        pixel_3_reg_353 <= ap_phi_reg_pp0_iter0_pixel_3_reg_353;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        pixel_41_reg_561 <= ap_phi_reg_pp0_iter0_pixel_41_reg_561;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        pixel_43_reg_572 <= ap_phi_reg_pp0_iter0_pixel_43_reg_572;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        pixel_45_reg_583 <= ap_phi_reg_pp0_iter0_pixel_45_reg_583;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        pixel_47_reg_594 <= ap_phi_reg_pp0_iter0_pixel_47_reg_594;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
        pixel_49_reg_605 <= ap_phi_reg_pp0_iter0_pixel_49_reg_605;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
        pixel_51_reg_616 <= ap_phi_reg_pp0_iter0_pixel_51_reg_616;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        pixel_53_reg_627 <= ap_phi_reg_pp0_iter0_pixel_53_reg_627;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29))) begin
        pixel_55_reg_638 <= ap_phi_reg_pp0_iter0_pixel_55_reg_638;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage30_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
        pixel_57_reg_649 <= ap_phi_reg_pp0_iter0_pixel_57_reg_649;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        pixel_59_reg_660 <= ap_phi_reg_pp0_iter0_pixel_59_reg_660;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        pixel_5_reg_363 <= ap_phi_reg_pp0_iter0_pixel_5_reg_363;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pixel_61_reg_671 <= ap_phi_reg_pp0_iter1_pixel_61_reg_671;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        pixel_7_reg_374 <= ap_phi_reg_pp0_iter0_pixel_7_reg_374;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        pixel_9_reg_385 <= ap_phi_reg_pp0_iter0_pixel_9_reg_385;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (icmp_ln91_reg_1180 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln96_31_reg_1348 == 1'd0) & (icmp_ln91_reg_1180_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_pixel_65_phi_fu_695_p4 = ap_phi_reg_pp0_iter1_pixel_63_reg_682;
    end else begin
        ap_phi_mux_pixel_65_phi_fu_695_p4 = ap_phi_reg_pp0_iter1_pixel_65_reg_692;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage31_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_x_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_116;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        buff_V_ce0 = 1'b1;
    end else begin
        buff_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        buff_V_we0 = 1'b1;
    end else begin
        buff_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (icmp_ln91_reg_1180 == 1'd0) & (or_ln96_31_reg_1348 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_predicate_op239_read_state32 == 1'b1)) | ((1'b0 == ap_block_pp0_stage30) & (icmp_ln91_reg_1180 == 1'd0) & (or_ln96_29_reg_1340 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage29) & (icmp_ln91_reg_1180 == 1'd0) & (or_ln96_28_reg_1336 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage28) & (icmp_ln91_reg_1180 == 1'd0) & (or_ln96_27_reg_1332 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage27) & (icmp_ln91_reg_1180 == 1'd0) & (or_ln96_26_reg_1328 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage26) & (icmp_ln91_reg_1180 == 1'd0) & (or_ln96_25_reg_1324 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage25) & (icmp_ln91_reg_1180 == 1'd0) & (or_ln96_24_reg_1320 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage24) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_23_reg_1316 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage23) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_22_reg_1312 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage22) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_21_reg_1308 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage21) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_20_reg_1304 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage20) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_19_reg_1300 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage19) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_18_reg_1296 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_17_reg_1292 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_16_reg_1288 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_15_reg_1284 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_14_reg_1280 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_13_reg_1276 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_12_reg_1272 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_11_reg_1268 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_10_reg_1264 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_9_reg_1260 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_8_reg_1256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_7_reg_1252 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_6_reg_1248 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_5_reg_1244 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_4_reg_1240 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln96_3_reg_1236 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln96_2_reg_1232 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2) & (ap_predicate_op92_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln91_reg_1180 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln96_reg_1219 == 1'd1)))) begin
        dst_pixels_blk_n = dst_pixels_empty_n;
    end else begin
        dst_pixels_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op211_read_state25 == 1'b1) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((ap_predicate_op199_read_state22 == 1'b1) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((ap_predicate_op173_read_state19 == 1'b1) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((ap_predicate_op158_read_state16 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((ap_predicate_op143_read_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((ap_predicate_op128_read_state10 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_predicate_op113_read_state7 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_predicate_op98_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_predicate_op243_read_state33 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_predicate_op231_read_state30 == 1'b1) & (1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage26_11001) & (ap_predicate_op219_read_state27 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_predicate_op207_read_state24 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_predicate_op183_read_state21 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_predicate_op168_read_state18 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_predicate_op153_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_predicate_op138_read_state12 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_predicate_op123_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_predicate_op108_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op92_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage28_11001) & (ap_predicate_op227_read_state29 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_predicate_op215_read_state26 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_predicate_op203_read_state23 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_predicate_op178_read_state20 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_predicate_op163_read_state17 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_predicate_op148_read_state14 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_predicate_op133_read_state11 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_predicate_op118_read_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op103_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op85_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_predicate_op239_read_state32 == 1'b1)) | ((1'b0 == ap_block_pp0_stage30_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_predicate_op235_read_state31 == 1'b1)) | ((ap_predicate_op223_read_state28 == 1'b1) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)))) begin
        dst_pixels_read = 1'b1;
    end else begin
        dst_pixels_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln91_reg_1180 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        pixel_1_out_ap_vld = 1'b1;
    end else begin
        pixel_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln91_fu_791_p2 = (x_1_reg_1174 + 12'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_predicate_op243_read_state33 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_predicate_op243_read_state33 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_predicate_op133_read_state11 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_predicate_op133_read_state11 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_predicate_op138_read_state12 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_predicate_op138_read_state12 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_predicate_op143_read_state13 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_predicate_op143_read_state13 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_predicate_op148_read_state14 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_predicate_op148_read_state14 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_predicate_op153_read_state15 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_predicate_op153_read_state15 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_predicate_op158_read_state16 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_predicate_op158_read_state16 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_predicate_op163_read_state17 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_predicate_op163_read_state17 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_predicate_op168_read_state18 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_predicate_op168_read_state18 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((ap_predicate_op173_read_state19 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((ap_predicate_op173_read_state19 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((ap_predicate_op178_read_state20 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((ap_predicate_op178_read_state20 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((dst_pixels_empty_n == 1'b0) & (ap_predicate_op85_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((dst_pixels_empty_n == 1'b0) & (ap_predicate_op85_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((ap_predicate_op183_read_state21 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((ap_predicate_op183_read_state21 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((ap_predicate_op199_read_state22 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((ap_predicate_op199_read_state22 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((ap_predicate_op203_read_state23 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((ap_predicate_op203_read_state23 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((ap_predicate_op207_read_state24 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((ap_predicate_op207_read_state24 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((ap_predicate_op211_read_state25 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((ap_predicate_op211_read_state25 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((ap_predicate_op215_read_state26 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((ap_predicate_op215_read_state26 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((ap_predicate_op219_read_state27 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((ap_predicate_op219_read_state27 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((ap_predicate_op223_read_state28 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((ap_predicate_op223_read_state28 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((ap_predicate_op227_read_state29 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((ap_predicate_op227_read_state29 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage29_11001 = ((ap_predicate_op231_read_state30 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage29_subdone = ((ap_predicate_op231_read_state30 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_predicate_op92_read_state3 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_predicate_op92_read_state3 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage30_11001 = ((dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op235_read_state31 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage30_subdone = ((dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op235_read_state31 == 1'b1));
end

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage31_11001 = ((dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op239_read_state32 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage31_subdone = ((dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op239_read_state32 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_predicate_op98_read_state4 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_predicate_op98_read_state4 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((dst_pixels_empty_n == 1'b0) & (ap_predicate_op103_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((dst_pixels_empty_n == 1'b0) & (ap_predicate_op103_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_predicate_op108_read_state6 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_predicate_op108_read_state6 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_predicate_op113_read_state7 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_predicate_op113_read_state7 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_predicate_op118_read_state8 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_predicate_op118_read_state8 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_predicate_op123_read_state9 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_predicate_op123_read_state9 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_predicate_op128_read_state10 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_predicate_op128_read_state10 == 1'b1) & (dst_pixels_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((ap_predicate_op128_read_state10 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((ap_predicate_op133_read_state11 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((ap_predicate_op138_read_state12 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((ap_predicate_op143_read_state13 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((ap_predicate_op148_read_state14 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((ap_predicate_op153_read_state15 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((ap_predicate_op158_read_state16 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = ((ap_predicate_op163_read_state17 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0 = ((ap_predicate_op168_read_state18 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage18_iter0 = ((ap_predicate_op173_read_state19 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage19_iter0 = ((ap_predicate_op178_read_state20 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage20_iter0 = ((ap_predicate_op183_read_state21 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage21_iter0 = ((ap_predicate_op199_read_state22 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage22_iter0 = ((ap_predicate_op203_read_state23 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage23_iter0 = ((ap_predicate_op207_read_state24 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage24_iter0 = ((ap_predicate_op211_read_state25 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage25_iter0 = ((ap_predicate_op215_read_state26 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state27_pp0_stage26_iter0 = ((ap_predicate_op219_read_state27 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state28_pp0_stage27_iter0 = ((ap_predicate_op223_read_state28 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state29_pp0_stage28_iter0 = ((ap_predicate_op227_read_state29 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((dst_pixels_empty_n == 1'b0) & (ap_predicate_op85_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state30_pp0_stage29_iter0 = ((ap_predicate_op231_read_state30 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state31_pp0_stage30_iter0 = ((dst_pixels_empty_n == 1'b0) & (ap_predicate_op235_read_state31 == 1'b1));
end

always @ (*) begin
    ap_block_state32_pp0_stage31_iter0 = ((dst_pixels_empty_n == 1'b0) & (ap_predicate_op239_read_state32 == 1'b1));
end

always @ (*) begin
    ap_block_state33_pp0_stage0_iter1 = ((ap_predicate_op243_read_state33 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

assign ap_block_state34_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((ap_predicate_op92_read_state3 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((ap_predicate_op98_read_state4 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((dst_pixels_empty_n == 1'b0) & (ap_predicate_op103_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((ap_predicate_op108_read_state6 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((ap_predicate_op113_read_state7 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((ap_predicate_op118_read_state8 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((ap_predicate_op123_read_state9 == 1'b1) & (dst_pixels_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_1178 = ((1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31));
end

always @ (*) begin
    ap_condition_1826 = ((1'b0 == ap_block_pp0_stage5_11001) & (or_ln96_4_reg_1240 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_1830 = ((1'b0 == ap_block_pp0_stage6_11001) & (or_ln96_4_reg_1240 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6));
end

always @ (*) begin
    ap_condition_1834 = ((1'b0 == ap_block_pp0_stage6_11001) & (or_ln96_5_reg_1244 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6));
end

always @ (*) begin
    ap_condition_1838 = ((1'b0 == ap_block_pp0_stage7_11001) & (or_ln96_5_reg_1244 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_1842 = ((1'b0 == ap_block_pp0_stage7_11001) & (or_ln96_6_reg_1248 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_1846 = ((1'b0 == ap_block_pp0_stage8_11001) & (or_ln96_6_reg_1248 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8));
end

always @ (*) begin
    ap_condition_1850 = ((1'b0 == ap_block_pp0_stage8_11001) & (or_ln96_7_reg_1252 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8));
end

always @ (*) begin
    ap_condition_1854 = ((1'b0 == ap_block_pp0_stage9_11001) & (or_ln96_7_reg_1252 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9));
end

always @ (*) begin
    ap_condition_1858 = ((1'b0 == ap_block_pp0_stage9_11001) & (or_ln96_8_reg_1256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9));
end

always @ (*) begin
    ap_condition_1862 = ((1'b0 == ap_block_pp0_stage10_11001) & (or_ln96_8_reg_1256 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10));
end

always @ (*) begin
    ap_condition_1866 = ((1'b0 == ap_block_pp0_stage10_11001) & (or_ln96_9_reg_1260 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage10));
end

always @ (*) begin
    ap_condition_1870 = ((1'b0 == ap_block_pp0_stage11_11001) & (or_ln96_9_reg_1260 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11));
end

always @ (*) begin
    ap_condition_1874 = ((1'b0 == ap_block_pp0_stage11_11001) & (or_ln96_10_reg_1264 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage11));
end

always @ (*) begin
    ap_condition_1878 = ((1'b0 == ap_block_pp0_stage12_11001) & (or_ln96_10_reg_1264 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12));
end

always @ (*) begin
    ap_condition_1882 = ((1'b0 == ap_block_pp0_stage12_11001) & (or_ln96_11_reg_1268 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage12));
end

always @ (*) begin
    ap_condition_1886 = ((1'b0 == ap_block_pp0_stage13_11001) & (or_ln96_11_reg_1268 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13));
end

always @ (*) begin
    ap_condition_1890 = ((1'b0 == ap_block_pp0_stage13_11001) & (or_ln96_12_reg_1272 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage13));
end

always @ (*) begin
    ap_condition_1894 = ((1'b0 == ap_block_pp0_stage14_11001) & (or_ln96_12_reg_1272 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14));
end

always @ (*) begin
    ap_condition_1898 = ((1'b0 == ap_block_pp0_stage14_11001) & (or_ln96_13_reg_1276 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage14));
end

always @ (*) begin
    ap_condition_1902 = ((1'b0 == ap_block_pp0_stage15_11001) & (or_ln96_13_reg_1276 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15));
end

always @ (*) begin
    ap_condition_1906 = ((1'b0 == ap_block_pp0_stage15_11001) & (or_ln96_14_reg_1280 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage15));
end

always @ (*) begin
    ap_condition_1910 = ((1'b0 == ap_block_pp0_stage16_11001) & (or_ln96_14_reg_1280 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16));
end

always @ (*) begin
    ap_condition_1914 = ((1'b0 == ap_block_pp0_stage16_11001) & (or_ln96_15_reg_1284 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage16));
end

always @ (*) begin
    ap_condition_1918 = ((1'b0 == ap_block_pp0_stage17_11001) & (or_ln96_15_reg_1284 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage17));
end

always @ (*) begin
    ap_condition_1922 = ((1'b0 == ap_block_pp0_stage17_11001) & (or_ln96_16_reg_1288 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage17));
end

always @ (*) begin
    ap_condition_1926 = ((1'b0 == ap_block_pp0_stage18_11001) & (or_ln96_16_reg_1288 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18));
end

always @ (*) begin
    ap_condition_1930 = ((1'b0 == ap_block_pp0_stage18_11001) & (or_ln96_17_reg_1292 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage18));
end

always @ (*) begin
    ap_condition_1934 = ((1'b0 == ap_block_pp0_stage19_11001) & (or_ln96_17_reg_1292 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage19));
end

always @ (*) begin
    ap_condition_1938 = ((1'b0 == ap_block_pp0_stage19_11001) & (or_ln96_18_reg_1296 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage19));
end

always @ (*) begin
    ap_condition_1942 = ((1'b0 == ap_block_pp0_stage20_11001) & (or_ln96_18_reg_1296 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage20));
end

always @ (*) begin
    ap_condition_1945 = ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln96_reg_1219 == 1'd1));
end

always @ (*) begin
    ap_condition_1948 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln96_reg_1219 == 1'd0));
end

always @ (*) begin
    ap_condition_1952 = ((1'b0 == ap_block_pp0_stage20_11001) & (or_ln96_19_reg_1300 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage20));
end

always @ (*) begin
    ap_condition_1956 = ((1'b0 == ap_block_pp0_stage21_11001) & (or_ln96_19_reg_1300 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage21));
end

always @ (*) begin
    ap_condition_1960 = ((1'b0 == ap_block_pp0_stage21_11001) & (or_ln96_20_reg_1304 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage21));
end

always @ (*) begin
    ap_condition_1964 = ((1'b0 == ap_block_pp0_stage22_11001) & (or_ln96_20_reg_1304 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage22));
end

always @ (*) begin
    ap_condition_1968 = ((1'b0 == ap_block_pp0_stage22_11001) & (or_ln96_21_reg_1308 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage22));
end

always @ (*) begin
    ap_condition_1972 = ((1'b0 == ap_block_pp0_stage23_11001) & (or_ln96_21_reg_1308 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage23));
end

always @ (*) begin
    ap_condition_1976 = ((1'b0 == ap_block_pp0_stage23_11001) & (or_ln96_22_reg_1312 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage23));
end

always @ (*) begin
    ap_condition_1980 = ((1'b0 == ap_block_pp0_stage24_11001) & (or_ln96_22_reg_1312 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage24));
end

always @ (*) begin
    ap_condition_1984 = ((1'b0 == ap_block_pp0_stage24_11001) & (or_ln96_23_reg_1316 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage24));
end

always @ (*) begin
    ap_condition_1988 = ((1'b0 == ap_block_pp0_stage25_11001) & (or_ln96_23_reg_1316 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage25));
end

always @ (*) begin
    ap_condition_1992 = ((1'b0 == ap_block_pp0_stage25_11001) & (or_ln96_24_reg_1320 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage25));
end

always @ (*) begin
    ap_condition_1996 = ((1'b0 == ap_block_pp0_stage26_11001) & (or_ln96_24_reg_1320 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage26));
end

always @ (*) begin
    ap_condition_2000 = ((1'b0 == ap_block_pp0_stage26_11001) & (or_ln96_25_reg_1324 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage26));
end

always @ (*) begin
    ap_condition_2004 = ((1'b0 == ap_block_pp0_stage27_11001) & (or_ln96_25_reg_1324 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage27));
end

always @ (*) begin
    ap_condition_2008 = ((1'b0 == ap_block_pp0_stage27_11001) & (or_ln96_26_reg_1328 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage27));
end

always @ (*) begin
    ap_condition_2012 = ((1'b0 == ap_block_pp0_stage28_11001) & (or_ln96_26_reg_1328 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage28));
end

always @ (*) begin
    ap_condition_2016 = ((1'b0 == ap_block_pp0_stage28_11001) & (or_ln96_27_reg_1332 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage28));
end

always @ (*) begin
    ap_condition_2020 = ((1'b0 == ap_block_pp0_stage29_11001) & (or_ln96_27_reg_1332 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage29));
end

always @ (*) begin
    ap_condition_2024 = ((1'b0 == ap_block_pp0_stage29_11001) & (or_ln96_28_reg_1336 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage29));
end

always @ (*) begin
    ap_condition_2028 = ((1'b0 == ap_block_pp0_stage30_11001) & (or_ln96_28_reg_1336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage30));
end

always @ (*) begin
    ap_condition_2032 = ((1'b0 == ap_block_pp0_stage2_11001) & (or_ln96_1_reg_1223 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_2036 = ((1'b0 == ap_block_pp0_stage3_11001) & (or_ln96_1_reg_1223 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_2039 = ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln96_2_reg_1232 == 1'd1));
end

always @ (*) begin
    ap_condition_2042 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln96_2_reg_1232 == 1'd0));
end

always @ (*) begin
    ap_condition_2046 = ((1'b0 == ap_block_pp0_stage4_11001) & (or_ln96_3_reg_1236 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_2050 = ((1'b0 == ap_block_pp0_stage5_11001) & (or_ln96_3_reg_1236 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = dst_pixels_blk_n;

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter0_pixel_63_reg_682 = 'bx;

assign ap_phi_reg_pp0_iter0_pixel_65_reg_692 = 'bx;

always @ (*) begin
    ap_predicate_op103_read_state5 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_3_reg_1236 == 1'd1));
end

always @ (*) begin
    ap_predicate_op108_read_state6 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_4_reg_1240 == 1'd1));
end

always @ (*) begin
    ap_predicate_op113_read_state7 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_5_reg_1244 == 1'd1));
end

always @ (*) begin
    ap_predicate_op118_read_state8 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_6_reg_1248 == 1'd1));
end

always @ (*) begin
    ap_predicate_op123_read_state9 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_7_reg_1252 == 1'd1));
end

always @ (*) begin
    ap_predicate_op128_read_state10 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_8_reg_1256 == 1'd1));
end

always @ (*) begin
    ap_predicate_op133_read_state11 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_9_reg_1260 == 1'd1));
end

always @ (*) begin
    ap_predicate_op138_read_state12 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_10_reg_1264 == 1'd1));
end

always @ (*) begin
    ap_predicate_op143_read_state13 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_11_reg_1268 == 1'd1));
end

always @ (*) begin
    ap_predicate_op148_read_state14 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_12_reg_1272 == 1'd1));
end

always @ (*) begin
    ap_predicate_op153_read_state15 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_13_reg_1276 == 1'd1));
end

always @ (*) begin
    ap_predicate_op158_read_state16 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_14_reg_1280 == 1'd1));
end

always @ (*) begin
    ap_predicate_op163_read_state17 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_15_reg_1284 == 1'd1));
end

always @ (*) begin
    ap_predicate_op168_read_state18 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_16_reg_1288 == 1'd1));
end

always @ (*) begin
    ap_predicate_op173_read_state19 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_17_reg_1292 == 1'd1));
end

always @ (*) begin
    ap_predicate_op178_read_state20 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_18_reg_1296 == 1'd1));
end

always @ (*) begin
    ap_predicate_op183_read_state21 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_19_reg_1300 == 1'd1));
end

always @ (*) begin
    ap_predicate_op199_read_state22 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_20_reg_1304 == 1'd1));
end

always @ (*) begin
    ap_predicate_op203_read_state23 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_21_reg_1308 == 1'd1));
end

always @ (*) begin
    ap_predicate_op207_read_state24 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_22_reg_1312 == 1'd1));
end

always @ (*) begin
    ap_predicate_op211_read_state25 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_23_reg_1316 == 1'd1));
end

always @ (*) begin
    ap_predicate_op215_read_state26 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_24_reg_1320 == 1'd1));
end

always @ (*) begin
    ap_predicate_op219_read_state27 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_25_reg_1324 == 1'd1));
end

always @ (*) begin
    ap_predicate_op223_read_state28 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_26_reg_1328 == 1'd1));
end

always @ (*) begin
    ap_predicate_op227_read_state29 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_27_reg_1332 == 1'd1));
end

always @ (*) begin
    ap_predicate_op231_read_state30 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_28_reg_1336 == 1'd1));
end

always @ (*) begin
    ap_predicate_op235_read_state31 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_29_reg_1340 == 1'd1));
end

always @ (*) begin
    ap_predicate_op239_read_state32 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_30_reg_1344 == 1'd1));
end

always @ (*) begin
    ap_predicate_op243_read_state33 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_31_reg_1348 == 1'd1));
end

always @ (*) begin
    ap_predicate_op85_read_state2 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_reg_1219 == 1'd1));
end

always @ (*) begin
    ap_predicate_op92_read_state3 = ((or_ln96_1_reg_1223 == 1'd1) & (icmp_ln91_reg_1180 == 1'd0));
end

always @ (*) begin
    ap_predicate_op98_read_state4 = ((icmp_ln91_reg_1180 == 1'd0) & (or_ln96_2_reg_1232 == 1'd1));
end

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign buff_V_address0 = zext_ln91_fu_921_p1;

assign buff_V_d0 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{ap_phi_mux_pixel_65_phi_fu_695_p4}, {ap_phi_reg_pp0_iter1_pixel_63_reg_682}}, {pixel_61_reg_671}}, {pixel_59_reg_660}}, {pixel_57_reg_649}}, {pixel_55_reg_638}}, {pixel_53_reg_627}}, {pixel_51_reg_616}}, {pixel_49_reg_605}}, {pixel_47_reg_594}}, {pixel_45_reg_583}}, {pixel_43_reg_572}}, {pixel_41_reg_561}}, {pixel_39_reg_550}}, {pixel_37_reg_539}}, {pixel_35_reg_528}}, {pixel_33_reg_517}}, {pixel_31_reg_506}}, {pixel_29_reg_495}}, {pixel_27_reg_484}}, {pixel_25_reg_473}}, {pixel_23_reg_462}}, {pixel_21_reg_451}}, {pixel_19_reg_440}}, {pixel_17_reg_429}}, {pixel_15_reg_418}}, {pixel_13_reg_407}}, {pixel_11_reg_396}}, {pixel_9_reg_385}}, {pixel_7_reg_374}}, {pixel_5_reg_363}}, {pixel_3_reg_353}};

assign cmp16_i_fu_772_p2 = (($signed(zext_ln91_1_fu_768_p1) < $signed(sext_ln86_cast_fu_745_p1)) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_762_p2 = ((ap_sig_allocacmp_x_1 == loopWidth) ? 1'b1 : 1'b0);

assign or_ln96_10_fu_833_p2 = (cmp17_10_i | cmp16_i_reg_1184);

assign or_ln96_11_fu_837_p2 = (cmp17_11_i | cmp16_i_reg_1184);

assign or_ln96_12_fu_841_p2 = (cmp17_12_i | cmp16_i_reg_1184);

assign or_ln96_13_fu_845_p2 = (cmp17_13_i | cmp16_i_reg_1184);

assign or_ln96_14_fu_849_p2 = (cmp17_14_i | cmp16_i_reg_1184);

assign or_ln96_15_fu_853_p2 = (cmp17_15_i | cmp16_i_reg_1184);

assign or_ln96_16_fu_857_p2 = (cmp17_16_i | cmp16_i_reg_1184);

assign or_ln96_17_fu_861_p2 = (cmp17_17_i | cmp16_i_reg_1184);

assign or_ln96_18_fu_865_p2 = (cmp17_18_i | cmp16_i_reg_1184);

assign or_ln96_19_fu_869_p2 = (cmp17_19_i | cmp16_i_reg_1184);

assign or_ln96_1_fu_784_p2 = (cmp17_1_i | cmp16_i_reg_1184);

assign or_ln96_20_fu_873_p2 = (cmp17_20_i | cmp16_i_reg_1184);

assign or_ln96_21_fu_877_p2 = (cmp17_21_i | cmp16_i_reg_1184);

assign or_ln96_22_fu_881_p2 = (cmp17_22_i | cmp16_i_reg_1184);

assign or_ln96_23_fu_885_p2 = (cmp17_23_i | cmp16_i_reg_1184);

assign or_ln96_24_fu_889_p2 = (cmp17_24_i | cmp16_i_reg_1184);

assign or_ln96_25_fu_893_p2 = (cmp17_25_i | cmp16_i_reg_1184);

assign or_ln96_26_fu_897_p2 = (cmp17_26_i | cmp16_i_reg_1184);

assign or_ln96_27_fu_901_p2 = (cmp17_27_i | cmp16_i_reg_1184);

assign or_ln96_28_fu_905_p2 = (cmp17_28_i | cmp16_i_reg_1184);

assign or_ln96_29_fu_909_p2 = (cmp17_29_i | cmp16_i_reg_1184);

assign or_ln96_2_fu_796_p2 = (cmp17_2_i | cmp16_i_reg_1184);

assign or_ln96_30_fu_913_p2 = (cmp17_30_i | cmp16_i_reg_1184);

assign or_ln96_31_fu_917_p2 = (icmp_ln80 | cmp16_i_reg_1184);

assign or_ln96_3_fu_805_p2 = (cmp17_3_i | cmp16_i_reg_1184);

assign or_ln96_4_fu_809_p2 = (cmp17_4_i | cmp16_i_reg_1184);

assign or_ln96_5_fu_813_p2 = (cmp17_5_i | cmp16_i_reg_1184);

assign or_ln96_6_fu_817_p2 = (cmp17_6_i | cmp16_i_reg_1184);

assign or_ln96_7_fu_821_p2 = (cmp17_7_i | cmp16_i_reg_1184);

assign or_ln96_8_fu_825_p2 = (cmp17_8_i | cmp16_i_reg_1184);

assign or_ln96_9_fu_829_p2 = (cmp17_9_i | cmp16_i_reg_1184);

assign or_ln96_fu_778_p2 = (cmp17_i | cmp16_i_fu_772_p2);

assign pixel_1_out = pixel_1_fu_120;

assign sext_ln86_cast_fu_745_p1 = $signed(sext_ln86);

assign zext_ln91_1_fu_768_p1 = ap_sig_allocacmp_x_1;

assign zext_ln91_fu_921_p1 = x_1_reg_1174_pp0_iter1_reg;

endmodule //Filter2DKernel_PixelStream2AXIBursts_Pipeline_pixels2bytes
