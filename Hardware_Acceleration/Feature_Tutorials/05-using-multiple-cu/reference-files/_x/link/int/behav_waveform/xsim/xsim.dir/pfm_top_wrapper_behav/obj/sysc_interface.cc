#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_7(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<7, sc_dt::sc_bv<7> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_10(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<10, sc_dt::sc_bv<10> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_14(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<14, sc_dt::sc_bv<14> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_15(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<15, sc_dt::sc_bv<15> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_20(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<20, sc_dt::sc_bv<20> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_22(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<22, sc_dt::sc_bv<22> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_38(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<38, sc_dt::sc_bv<38> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_114(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<114, sc_dt::sc_bv<114> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_160(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<160, sc_dt::sc_bv<160> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_320(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<320, sc_dt::sc_bv<320> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(2506);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(11444072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(11444296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(11444352);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(11444408);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(11444688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(11444744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(11444800);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(11444856);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(11445080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(11445136);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(11445192);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(11445304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(11445360);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(11445416);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(11445640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(11445696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(11445752);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(11445808);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(11446088);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(2507);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(11446472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(11446696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(11446752);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(11446808);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(11447088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(11447144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(11447200);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(11447256);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(11447368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(11447424);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(11447480);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(11447592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(11447648);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(11447704);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(11447928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(11447984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(11448040);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(11448096);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(11448376);
        sc_inst_3 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(2548);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(11484248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(11484472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(11484528);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(11484584);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(11484864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(11484920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(11484976);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(11485032);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(11485256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(11485312);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(11485368);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(11485480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(11485536);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(11485592);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(11485816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(11485872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(11485928);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(11485984);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(11486264);
        sc_inst_4 = new pfm_dynamic_m01_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(2549);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(11486648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(11486872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(11486928);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(11486984);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(11487264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(11487320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(11487376);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(11487432);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(11487544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(11487600);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(11487656);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(11487768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(11487824);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(11487880);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(11488104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(11488160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(11488216);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(11488272);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(11488552);
        sc_inst_5 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(2590);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(11525576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(11525800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(11525856);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(11525912);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(11526192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(11526248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(11526304);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(11526360);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(11526584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(11526640);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(11526696);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(11526808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(11526864);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(11526920);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(11527144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(11527200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(11527256);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(11527312);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(11527592);
        sc_inst_6 = new pfm_dynamic_m02_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(2591);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(11527976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(11528200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(11528256);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(11528312);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(11528592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(11528648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(11528704);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(11528760);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(11528872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(11528928);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(11528984);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(11529096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(11529152);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(11529208);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(11529432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(11529488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(11529544);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(11529600);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(11529880);
        sc_inst_7 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(2634);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(11565752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(11565976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(11566032);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(11566088);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(11566368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(11566424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(11566480);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(11566536);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(11566760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(11566816);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(11566872);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(11566984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(11567040);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(11567096);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(11567320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(11567376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(11567432);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(11567488);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(11567768);
        sc_inst_8 = new pfm_dynamic_m03_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(2635);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(11568152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(11568376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(11568432);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(11568488);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(11568768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(11568824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(11568880);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(11568936);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(11569048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(11569104);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(11569160);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(11569272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(11569328);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(11569384);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(11569608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(11569664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(11569720);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(11569776);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(11570056);
        sc_inst_9 = new pfm_dynamic_auto_cc_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.auto_cc");
        sc_inst_9->xsim_set_dbg_index(2676);
        xsim_sc_channel<0, bool > *p_9_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aclk.bind(*p_9_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aresetn.bind(*p_9_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(11605928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(11606152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(11606208);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(11606264);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(11606544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(11606600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(11606656);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(11606712);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<0, bool > *p_9_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aclk.bind(*p_9_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aresetn.bind(*p_9_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(11606936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(11606992);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(11607048);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(11607160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(11607216);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(11607272);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(11607496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(11607552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(11607608);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(11607664);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(11607944);
        sc_inst_10 = new pfm_dynamic_m04_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.m04_regslice");
        sc_inst_10->xsim_set_dbg_index(2677);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(11608328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(11608552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(11608608);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(11608664);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(11608944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(11609000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(11609056);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(11609112);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(11609224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(11609280);
        xsim_sc_channel<0, bool > *p_10_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(11609336);
        xsim_sc_channel<0, bool > *p_10_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(11609448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(11609504);
        xsim_sc_channel<0, bool > *p_10_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(11609560);
        xsim_sc_channel<0, bool > *p_10_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(11609784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(11609840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(11609896);
        xsim_sc_channel<0, bool > *p_10_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(11609952);
        xsim_sc_channel<0, bool > *p_10_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(11610232);
        sc_inst_11 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_11->xsim_set_dbg_index(2718);
        xsim_sc_channel<0, bool > *p_11_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->aclk.bind(*p_11_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_aclk);
        xsim_sc_channel<0, bool > *p_11_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->aresetn.bind(*p_11_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awprot.bind(*p_11_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(11633872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(11634096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(11634152);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(11634208);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arprot.bind(*p_11_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(11634488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(11634544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(11634600);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(11634656);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m_axi_awaddr.bind(*p_11_m_axi_awaddr);
        p_11_m_axi_awaddr->set_sv_netview_offsetfromdp(11634768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_awprot.bind(*p_11_m_axi_awprot);
        p_11_m_axi_awprot->set_sv_netview_offsetfromdp(11634824);
        xsim_sc_channel<0, bool > *p_11_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awvalid.bind(*p_11_m_axi_awvalid);
        p_11_m_axi_awvalid->set_sv_netview_offsetfromdp(11634880);
        xsim_sc_channel<0, bool > *p_11_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awready.bind(*p_11_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_wdata.bind(*p_11_m_axi_wdata);
        p_11_m_axi_wdata->set_sv_netview_offsetfromdp(11634992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m_axi_wstrb.bind(*p_11_m_axi_wstrb);
        p_11_m_axi_wstrb->set_sv_netview_offsetfromdp(11635048);
        xsim_sc_channel<0, bool > *p_11_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wvalid.bind(*p_11_m_axi_wvalid);
        p_11_m_axi_wvalid->set_sv_netview_offsetfromdp(11635104);
        xsim_sc_channel<0, bool > *p_11_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wready.bind(*p_11_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_bresp.bind(*p_11_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bvalid.bind(*p_11_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bready.bind(*p_11_m_axi_bready);
        p_11_m_axi_bready->set_sv_netview_offsetfromdp(11635328);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m_axi_araddr.bind(*p_11_m_axi_araddr);
        p_11_m_axi_araddr->set_sv_netview_offsetfromdp(11635384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_arprot.bind(*p_11_m_axi_arprot);
        p_11_m_axi_arprot->set_sv_netview_offsetfromdp(11635440);
        xsim_sc_channel<0, bool > *p_11_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arvalid.bind(*p_11_m_axi_arvalid);
        p_11_m_axi_arvalid->set_sv_netview_offsetfromdp(11635496);
        xsim_sc_channel<0, bool > *p_11_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arready.bind(*p_11_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_rdata.bind(*p_11_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_rresp.bind(*p_11_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rvalid.bind(*p_11_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rready.bind(*p_11_m_axi_rready);
        p_11_m_axi_rready->set_sv_netview_offsetfromdp(11635776);
        sc_inst_12 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_12->xsim_set_dbg_index(951);
        xsim_sc_channel<0, bool > *p_12_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->aclk.bind(*p_12_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aclk);
        xsim_sc_channel<0, bool > *p_12_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->aresetn.bind(*p_12_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(11636160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(11636384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(11636440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(11636496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(11636776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(11636832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(11636888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(11636944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_12_m_axi_awaddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_12->m_axi_awaddr.bind(*p_12_m_axi_awaddr);
        p_12_m_axi_awaddr->set_sv_netview_offsetfromdp(11637056);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_12_m_axi_awprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_12->m_axi_awprot.bind(*p_12_m_axi_awprot);
        p_12_m_axi_awprot->set_sv_netview_offsetfromdp(11637112);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_awvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_awvalid.bind(*p_12_m_axi_awvalid);
        p_12_m_axi_awvalid->set_sv_netview_offsetfromdp(11637168);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_awready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_awready.bind(*p_12_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_awready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_12_m_axi_wdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_12->m_axi_wdata.bind(*p_12_m_axi_wdata);
        p_12_m_axi_wdata->set_sv_netview_offsetfromdp(11637280);
        xsim_sc_channel<20, sc_dt::sc_bv<20> > *p_12_m_axi_wstrb = new xsim_sc_channel<20, sc_dt::sc_bv<20> >();
        sc_inst_12->m_axi_wstrb.bind(*p_12_m_axi_wstrb);
        p_12_m_axi_wstrb->set_sv_netview_offsetfromdp(11637336);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_wvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_wvalid.bind(*p_12_m_axi_wvalid);
        p_12_m_axi_wvalid->set_sv_netview_offsetfromdp(11637392);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_wready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_wready.bind(*p_12_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_wready);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_12_m_axi_bresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_12->m_axi_bresp.bind(*p_12_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_bvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_bvalid.bind(*p_12_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_bready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_bready.bind(*p_12_m_axi_bready);
        p_12_m_axi_bready->set_sv_netview_offsetfromdp(11637616);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_12_m_axi_araddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_12->m_axi_araddr.bind(*p_12_m_axi_araddr);
        p_12_m_axi_araddr->set_sv_netview_offsetfromdp(11637672);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_12_m_axi_arprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_12->m_axi_arprot.bind(*p_12_m_axi_arprot);
        p_12_m_axi_arprot->set_sv_netview_offsetfromdp(11637728);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_arvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_arvalid.bind(*p_12_m_axi_arvalid);
        p_12_m_axi_arvalid->set_sv_netview_offsetfromdp(11637784);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_arready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_arready.bind(*p_12_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_arready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_12_m_axi_rdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_12->m_axi_rdata.bind(*p_12_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rdata);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_12_m_axi_rresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_12->m_axi_rresp.bind(*p_12_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_rvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_rvalid.bind(*p_12_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_rready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_rready.bind(*p_12_m_axi_rready);
        p_12_m_axi_rready->set_sv_netview_offsetfromdp(11638064);
        sc_inst_13 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_13->xsim_set_dbg_index(351);
        xsim_sc_channel<0, bool > *p_13_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_clk.bind(*p_13_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_13_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_aresetn.bind(*p_13_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_13_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_clk.bind(*p_13_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_clk);
        xsim_sc_channel<0, bool > *p_13_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_aresetn.bind(*p_13_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_aresetn);
        xsim_sc_channel<0, bool > *p_13_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->axilite_clk.bind(*p_13_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_axilite_clk);
        xsim_sc_channel<0, bool > *p_13_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->axilite_aresetn.bind(*p_13_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_13_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready0.bind(*p_13_trace_tready0);
        p_13_trace_tready0->set_sv_netview_offsetfromdp(11638504);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata0.bind(*p_13_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata0);
        xsim_sc_channel<0, bool > *p_13_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast0.bind(*p_13_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid0.bind(*p_13_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest0.bind(*p_13_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest0);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid0.bind(*p_13_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_13_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready1.bind(*p_13_trace_tready1);
        p_13_trace_tready1->set_sv_netview_offsetfromdp(11638840);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata1.bind(*p_13_trace_tdata1);
        p_13_trace_tdata1->set_sv_netview_offsetfromdp(11638896);
        xsim_sc_channel<0, bool > *p_13_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast1.bind(*p_13_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid1.bind(*p_13_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest1.bind(*p_13_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest1);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid1.bind(*p_13_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata2.bind(*p_13_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata2);
        xsim_sc_channel<0, bool > *p_13_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready2.bind(*p_13_trace_tready2);
        p_13_trace_tready2->set_sv_netview_offsetfromdp(11639232);
        xsim_sc_channel<0, bool > *p_13_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast2.bind(*p_13_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid2.bind(*p_13_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest2.bind(*p_13_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest2);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid2.bind(*p_13_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata3.bind(*p_13_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata3);
        xsim_sc_channel<0, bool > *p_13_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready3.bind(*p_13_trace_tready3);
        p_13_trace_tready3->set_sv_netview_offsetfromdp(11639568);
        xsim_sc_channel<0, bool > *p_13_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast3.bind(*p_13_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid3.bind(*p_13_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest3.bind(*p_13_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest3);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid3.bind(*p_13_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata4.bind(*p_13_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata4);
        xsim_sc_channel<0, bool > *p_13_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready4.bind(*p_13_trace_tready4);
        p_13_trace_tready4->set_sv_netview_offsetfromdp(11639904);
        xsim_sc_channel<0, bool > *p_13_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast4.bind(*p_13_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid4.bind(*p_13_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest4.bind(*p_13_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest4);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid4.bind(*p_13_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(11640296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(11640520);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(11640576);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(11640688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(11640856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(11640912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(11640968);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(11641024);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axihub_awaddr.bind(*p_13_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_awvalid.bind(*p_13_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_awready.bind(*p_13_s_axihub_awready);
        p_13_s_axihub_awready->set_sv_netview_offsetfromdp(11641248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axihub_wdata.bind(*p_13_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axihub_wstrb.bind(*p_13_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_wvalid.bind(*p_13_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_wready.bind(*p_13_s_axihub_wready);
        p_13_s_axihub_wready->set_sv_netview_offsetfromdp(11641472);
        xsim_sc_channel<0, bool > *p_13_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_bvalid.bind(*p_13_s_axihub_bvalid);
        p_13_s_axihub_bvalid->set_sv_netview_offsetfromdp(11641528);
        xsim_sc_channel<0, bool > *p_13_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_bready.bind(*p_13_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axihub_bresp.bind(*p_13_s_axihub_bresp);
        p_13_s_axihub_bresp->set_sv_netview_offsetfromdp(11641640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axihub_araddr.bind(*p_13_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_13_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_arvalid.bind(*p_13_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_arready.bind(*p_13_s_axihub_arready);
        p_13_s_axihub_arready->set_sv_netview_offsetfromdp(11641808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axihub_rdata.bind(*p_13_s_axihub_rdata);
        p_13_s_axihub_rdata->set_sv_netview_offsetfromdp(11641864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axihub_rresp.bind(*p_13_s_axihub_rresp);
        p_13_s_axihub_rresp->set_sv_netview_offsetfromdp(11641920);
        xsim_sc_channel<0, bool > *p_13_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_rvalid.bind(*p_13_s_axihub_rvalid);
        p_13_s_axihub_rvalid->set_sv_netview_offsetfromdp(11641976);
        xsim_sc_channel<0, bool > *p_13_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_rready.bind(*p_13_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_aximm_awaddr.bind(*p_13_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_awvalid.bind(*p_13_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_awready.bind(*p_13_s_aximm_awready);
        p_13_s_aximm_awready->set_sv_netview_offsetfromdp(11642200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_awlen.bind(*p_13_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_aximm_awsize.bind(*p_13_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_awburst.bind(*p_13_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_awid.bind(*p_13_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_aximm_wdata.bind(*p_13_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_wstrb.bind(*p_13_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wvalid.bind(*p_13_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wready.bind(*p_13_s_aximm_wready);
        p_13_s_aximm_wready->set_sv_netview_offsetfromdp(11642648);
        xsim_sc_channel<0, bool > *p_13_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_bvalid.bind(*p_13_s_aximm_bvalid);
        p_13_s_aximm_bvalid->set_sv_netview_offsetfromdp(11642704);
        xsim_sc_channel<0, bool > *p_13_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_bready.bind(*p_13_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wlast.bind(*p_13_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rlast.bind(*p_13_s_aximm_rlast);
        p_13_s_aximm_rlast->set_sv_netview_offsetfromdp(11642872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_bresp.bind(*p_13_s_aximm_bresp);
        p_13_s_aximm_bresp->set_sv_netview_offsetfromdp(11642928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_bid.bind(*p_13_s_aximm_bid);
        p_13_s_aximm_bid->set_sv_netview_offsetfromdp(11642984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_aximm_araddr.bind(*p_13_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_13_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_arvalid.bind(*p_13_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_arready.bind(*p_13_s_aximm_arready);
        p_13_s_aximm_arready->set_sv_netview_offsetfromdp(11643152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_arlen.bind(*p_13_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_aximm_arsize.bind(*p_13_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_arburst.bind(*p_13_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_arid.bind(*p_13_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_aximm_rdata.bind(*p_13_s_aximm_rdata);
        p_13_s_aximm_rdata->set_sv_netview_offsetfromdp(11643432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_rid.bind(*p_13_s_aximm_rid);
        p_13_s_aximm_rid->set_sv_netview_offsetfromdp(11643488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_rresp.bind(*p_13_s_aximm_rresp);
        p_13_s_aximm_rresp->set_sv_netview_offsetfromdp(11643544);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rvalid.bind(*p_13_s_aximm_rvalid);
        p_13_s_aximm_rvalid->set_sv_netview_offsetfromdp(11643600);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rready.bind(*p_13_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_rready);
        sc_inst_14 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_14->xsim_set_dbg_index(352);
        xsim_sc_channel<0, bool > *p_14_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_clk.bind(*p_14_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_clk);
        xsim_sc_channel<0, bool > *p_14_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_resetn.bind(*p_14_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_resetn);
        xsim_sc_channel<0, bool > *p_14_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_14->trace_clk.bind(*p_14_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_trace_clk);
        xsim_sc_channel<0, bool > *p_14_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_14->trace_rst.bind(*p_14_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(11644152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(11644376);
        xsim_sc_channel<0, bool > *p_14_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(11644432);
        xsim_sc_channel<0, bool > *p_14_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(11644544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(11644768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(11644824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(11644880);
        xsim_sc_channel<0, bool > *p_14_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(11644936);
        xsim_sc_channel<0, bool > *p_14_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<0, bool > *p_14_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_AWVALID.bind(*p_14_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_14_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_AWREADY.bind(*p_14_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_AWADDR.bind(*p_14_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_14_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_WVALID.bind(*p_14_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WVALID);
        xsim_sc_channel<0, bool > *p_14_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_WREADY.bind(*p_14_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_WDATA.bind(*p_14_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->mon_WSTRB.bind(*p_14_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_14_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_ARVALID.bind(*p_14_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_14_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_ARREADY.bind(*p_14_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_ARADDR.bind(*p_14_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_14_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_RVALID.bind(*p_14_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RVALID);
        xsim_sc_channel<0, bool > *p_14_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_RREADY.bind(*p_14_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_RDATA.bind(*p_14_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->mon_RRESP.bind(*p_14_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RRESP);
        xsim_sc_channel<0, bool > *p_14_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_BVALID.bind(*p_14_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BVALID);
        xsim_sc_channel<0, bool > *p_14_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_BREADY.bind(*p_14_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->mon_BRESP.bind(*p_14_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m_axis_tready.bind(*p_14_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m_axis_tdata.bind(*p_14_m_axis_tdata);
        p_14_m_axis_tdata->set_sv_netview_offsetfromdp(11646056);
        xsim_sc_channel<0, bool > *p_14_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_tlast.bind(*p_14_m_axis_tlast);
        p_14_m_axis_tlast->set_sv_netview_offsetfromdp(11646112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axis_tid.bind(*p_14_m_axis_tid);
        p_14_m_axis_tid->set_sv_netview_offsetfromdp(11646168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axis_tdest.bind(*p_14_m_axis_tdest);
        p_14_m_axis_tdest->set_sv_netview_offsetfromdp(11646224);
        xsim_sc_channel<0, bool > *p_14_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_tvalid.bind(*p_14_m_axis_tvalid);
        p_14_m_axis_tvalid->set_sv_netview_offsetfromdp(11646280);
        xsim_sc_channel<0, bool > *p_14_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_continue.bind(*p_14_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_continue);
        xsim_sc_channel<0, bool > *p_14_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_ready.bind(*p_14_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_ready);
        xsim_sc_channel<0, bool > *p_14_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_start.bind(*p_14_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_start);
        xsim_sc_channel<0, bool > *p_14_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_idle.bind(*p_14_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_idle);
        xsim_sc_channel<0, bool > *p_14_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_done.bind(*p_14_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_done);
        sc_inst_15 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_15->xsim_set_dbg_index(353);
        xsim_sc_channel<0, bool > *p_15_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_clk.bind(*p_15_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_clk);
        xsim_sc_channel<0, bool > *p_15_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_resetn.bind(*p_15_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_resetn);
        xsim_sc_channel<0, bool > *p_15_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_clk.bind(*p_15_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_clk);
        xsim_sc_channel<0, bool > *p_15_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_rst.bind(*p_15_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr.bind(*p_15_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid.bind(*p_15_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready.bind(*p_15_s_axi_awready);
        p_15_s_axi_awready->set_sv_netview_offsetfromdp(11647000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata.bind(*p_15_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb.bind(*p_15_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid.bind(*p_15_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready.bind(*p_15_s_axi_wready);
        p_15_s_axi_wready->set_sv_netview_offsetfromdp(11647224);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid.bind(*p_15_s_axi_bvalid);
        p_15_s_axi_bvalid->set_sv_netview_offsetfromdp(11647280);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready.bind(*p_15_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp.bind(*p_15_s_axi_bresp);
        p_15_s_axi_bresp->set_sv_netview_offsetfromdp(11647392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr.bind(*p_15_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid.bind(*p_15_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready.bind(*p_15_s_axi_arready);
        p_15_s_axi_arready->set_sv_netview_offsetfromdp(11647560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata.bind(*p_15_s_axi_rdata);
        p_15_s_axi_rdata->set_sv_netview_offsetfromdp(11647616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp.bind(*p_15_s_axi_rresp);
        p_15_s_axi_rresp->set_sv_netview_offsetfromdp(11647672);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid.bind(*p_15_s_axi_rvalid);
        p_15_s_axi_rvalid->set_sv_netview_offsetfromdp(11647728);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready.bind(*p_15_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready);
        xsim_sc_channel<0, bool > *p_15_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_AWVALID.bind(*p_15_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_15_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_AWREADY.bind(*p_15_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->mon_AWADDR.bind(*p_15_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_AWID.bind(*p_15_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->mon_AWLEN.bind(*p_15_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->mon_AWSIZE.bind(*p_15_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_AWBURST.bind(*p_15_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_15_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WVALID.bind(*p_15_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WVALID);
        xsim_sc_channel<0, bool > *p_15_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WREADY.bind(*p_15_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_15_mon_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_15->mon_WDATA.bind(*p_15_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WDATA);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_mon_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->mon_WSTRB.bind(*p_15_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_15_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WLAST.bind(*p_15_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WLAST);
        xsim_sc_channel<0, bool > *p_15_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_ARVALID.bind(*p_15_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_15_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_ARREADY.bind(*p_15_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->mon_ARADDR.bind(*p_15_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_ARID.bind(*p_15_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->mon_ARLEN.bind(*p_15_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->mon_ARSIZE.bind(*p_15_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_ARBURST.bind(*p_15_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_15_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RVALID.bind(*p_15_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RVALID);
        xsim_sc_channel<0, bool > *p_15_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RREADY.bind(*p_15_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_15_mon_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_15->mon_RDATA.bind(*p_15_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RDATA);
        xsim_sc_channel<0, bool > *p_15_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RLAST.bind(*p_15_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_RID.bind(*p_15_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_RRESP.bind(*p_15_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RRESP);
        xsim_sc_channel<0, bool > *p_15_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_BVALID.bind(*p_15_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BVALID);
        xsim_sc_channel<0, bool > *p_15_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_BREADY.bind(*p_15_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_BRESP.bind(*p_15_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_BID.bind(*p_15_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BID);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tready.bind(*p_15_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m_axis_rd_tdata.bind(*p_15_m_axis_rd_tdata);
        p_15_m_axis_rd_tdata->set_sv_netview_offsetfromdp(11649520);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tlast.bind(*p_15_m_axis_rd_tlast);
        p_15_m_axis_rd_tlast->set_sv_netview_offsetfromdp(11649576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_rd_tid.bind(*p_15_m_axis_rd_tid);
        p_15_m_axis_rd_tid->set_sv_netview_offsetfromdp(11649632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_rd_tdest.bind(*p_15_m_axis_rd_tdest);
        p_15_m_axis_rd_tdest->set_sv_netview_offsetfromdp(11649688);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tready.bind(*p_15_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m_axis_wr_tdata.bind(*p_15_m_axis_wr_tdata);
        p_15_m_axis_wr_tdata->set_sv_netview_offsetfromdp(11649800);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tlast.bind(*p_15_m_axis_wr_tlast);
        p_15_m_axis_wr_tlast->set_sv_netview_offsetfromdp(11649856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_wr_tid.bind(*p_15_m_axis_wr_tid);
        p_15_m_axis_wr_tid->set_sv_netview_offsetfromdp(11649912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_wr_tdest.bind(*p_15_m_axis_wr_tdest);
        p_15_m_axis_wr_tdest->set_sv_netview_offsetfromdp(11649968);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tvalid.bind(*p_15_m_axis_wr_tvalid);
        p_15_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(11650024);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tvalid.bind(*p_15_m_axis_rd_tvalid);
        p_15_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(11650080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr_mon.bind(*p_15_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_awprot_mon.bind(*p_15_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid_mon.bind(*p_15_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready_mon.bind(*p_15_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata_mon.bind(*p_15_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb_mon.bind(*p_15_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid_mon.bind(*p_15_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready_mon.bind(*p_15_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp_mon.bind(*p_15_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid_mon.bind(*p_15_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready_mon.bind(*p_15_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr_mon.bind(*p_15_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_arprot_mon.bind(*p_15_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid_mon.bind(*p_15_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready_mon.bind(*p_15_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata_mon.bind(*p_15_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp_mon.bind(*p_15_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid_mon.bind(*p_15_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready_mon.bind(*p_15_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready_mon);
        sc_inst_16 = new pfm_dynamic_dpa_mon2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon2");
        sc_inst_16->xsim_set_dbg_index(354);
        xsim_sc_channel<0, bool > *p_16_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_clk.bind(*p_16_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_clk);
        xsim_sc_channel<0, bool > *p_16_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_resetn.bind(*p_16_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_resetn);
        xsim_sc_channel<0, bool > *p_16_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_clk.bind(*p_16_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_clk);
        xsim_sc_channel<0, bool > *p_16_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_rst.bind(*p_16_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr.bind(*p_16_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid.bind(*p_16_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready.bind(*p_16_s_axi_awready);
        p_16_s_axi_awready->set_sv_netview_offsetfromdp(11651584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata.bind(*p_16_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb.bind(*p_16_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid.bind(*p_16_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready.bind(*p_16_s_axi_wready);
        p_16_s_axi_wready->set_sv_netview_offsetfromdp(11651808);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid.bind(*p_16_s_axi_bvalid);
        p_16_s_axi_bvalid->set_sv_netview_offsetfromdp(11651864);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready.bind(*p_16_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp.bind(*p_16_s_axi_bresp);
        p_16_s_axi_bresp->set_sv_netview_offsetfromdp(11651976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr.bind(*p_16_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid.bind(*p_16_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready.bind(*p_16_s_axi_arready);
        p_16_s_axi_arready->set_sv_netview_offsetfromdp(11652144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata.bind(*p_16_s_axi_rdata);
        p_16_s_axi_rdata->set_sv_netview_offsetfromdp(11652200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp.bind(*p_16_s_axi_rresp);
        p_16_s_axi_rresp->set_sv_netview_offsetfromdp(11652256);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid.bind(*p_16_s_axi_rvalid);
        p_16_s_axi_rvalid->set_sv_netview_offsetfromdp(11652312);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready.bind(*p_16_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready);
        xsim_sc_channel<0, bool > *p_16_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWVALID.bind(*p_16_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_16_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWREADY.bind(*p_16_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_AWADDR.bind(*p_16_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_AWID.bind(*p_16_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->mon_AWLEN.bind(*p_16_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->mon_AWSIZE.bind(*p_16_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_AWBURST.bind(*p_16_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_16_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WVALID.bind(*p_16_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WVALID);
        xsim_sc_channel<0, bool > *p_16_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WREADY.bind(*p_16_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_16_mon_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_16->mon_WDATA.bind(*p_16_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WDATA);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_WSTRB.bind(*p_16_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_16_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WLAST.bind(*p_16_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WLAST);
        xsim_sc_channel<0, bool > *p_16_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARVALID.bind(*p_16_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_16_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARREADY.bind(*p_16_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_ARADDR.bind(*p_16_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_ARID.bind(*p_16_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->mon_ARLEN.bind(*p_16_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->mon_ARSIZE.bind(*p_16_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_ARBURST.bind(*p_16_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_16_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RVALID.bind(*p_16_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RVALID);
        xsim_sc_channel<0, bool > *p_16_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RREADY.bind(*p_16_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_16_mon_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_16->mon_RDATA.bind(*p_16_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RDATA);
        xsim_sc_channel<0, bool > *p_16_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RLAST.bind(*p_16_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_RID.bind(*p_16_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_RRESP.bind(*p_16_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RRESP);
        xsim_sc_channel<0, bool > *p_16_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BVALID.bind(*p_16_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BVALID);
        xsim_sc_channel<0, bool > *p_16_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BREADY.bind(*p_16_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_BRESP.bind(*p_16_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_BID.bind(*p_16_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BID);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tready.bind(*p_16_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_rd_tdata.bind(*p_16_m_axis_rd_tdata);
        p_16_m_axis_rd_tdata->set_sv_netview_offsetfromdp(11654104);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tlast.bind(*p_16_m_axis_rd_tlast);
        p_16_m_axis_rd_tlast->set_sv_netview_offsetfromdp(11654160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_rd_tid.bind(*p_16_m_axis_rd_tid);
        p_16_m_axis_rd_tid->set_sv_netview_offsetfromdp(11654216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_rd_tdest.bind(*p_16_m_axis_rd_tdest);
        p_16_m_axis_rd_tdest->set_sv_netview_offsetfromdp(11654272);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tready.bind(*p_16_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_wr_tdata.bind(*p_16_m_axis_wr_tdata);
        p_16_m_axis_wr_tdata->set_sv_netview_offsetfromdp(11654384);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tlast.bind(*p_16_m_axis_wr_tlast);
        p_16_m_axis_wr_tlast->set_sv_netview_offsetfromdp(11654440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_wr_tid.bind(*p_16_m_axis_wr_tid);
        p_16_m_axis_wr_tid->set_sv_netview_offsetfromdp(11654496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_wr_tdest.bind(*p_16_m_axis_wr_tdest);
        p_16_m_axis_wr_tdest->set_sv_netview_offsetfromdp(11654552);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tvalid.bind(*p_16_m_axis_wr_tvalid);
        p_16_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(11654608);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tvalid.bind(*p_16_m_axis_rd_tvalid);
        p_16_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(11654664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr_mon.bind(*p_16_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awprot_mon.bind(*p_16_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid_mon.bind(*p_16_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready_mon.bind(*p_16_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata_mon.bind(*p_16_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb_mon.bind(*p_16_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid_mon.bind(*p_16_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready_mon.bind(*p_16_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp_mon.bind(*p_16_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid_mon.bind(*p_16_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready_mon.bind(*p_16_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr_mon.bind(*p_16_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arprot_mon.bind(*p_16_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid_mon.bind(*p_16_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready_mon.bind(*p_16_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata_mon.bind(*p_16_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp_mon.bind(*p_16_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid_mon.bind(*p_16_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready_mon.bind(*p_16_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready_mon);
        sc_inst_17 = new bd_5dca_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.bd_5dca_sci_inst");
        sc_inst_17->xsim_set_dbg_index(1085);
        sc_inst_18 = new bd_5dca_hbm_inst_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.hbm_inst");
        sc_inst_18->xsim_set_dbg_index(1086);
        xsim_sc_channel<0, bool > *p_18_HBM_REF_CLK_0 = new xsim_sc_channel<0, bool >();
        sc_inst_18->HBM_REF_CLK_0.bind(*p_18_HBM_REF_CLK_0);
        (*_glb_hdl_sc_channel_map).push_back(p_18_HBM_REF_CLK_0);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ACLK.bind(*p_18_AXI_00_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ARESET_N.bind(*p_18_AXI_00_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARESET_N);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_AXI_00_ARADDR = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->AXI_00_ARADDR.bind(*p_18_AXI_00_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_ARBURST.bind(*p_18_AXI_00_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_ARID.bind(*p_18_AXI_00_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_00_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_00_ARLEN.bind(*p_18_AXI_00_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_00_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_00_ARSIZE.bind(*p_18_AXI_00_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ARVALID.bind(*p_18_AXI_00_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARVALID);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_AXI_00_AWADDR = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->AXI_00_AWADDR.bind(*p_18_AXI_00_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_AWBURST.bind(*p_18_AXI_00_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_AWID.bind(*p_18_AXI_00_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_00_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_00_AWLEN.bind(*p_18_AXI_00_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_00_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_00_AWSIZE.bind(*p_18_AXI_00_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_00_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_AWVALID.bind(*p_18_AXI_00_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_00_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_RREADY.bind(*p_18_AXI_00_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_00_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_BREADY.bind(*p_18_AXI_00_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_00_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_00_WDATA.bind(*p_18_AXI_00_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_00_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_WLAST.bind(*p_18_AXI_00_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_00_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_00_WSTRB.bind(*p_18_AXI_00_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_00_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_00_WDATA_PARITY.bind(*p_18_AXI_00_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_00_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_WVALID.bind(*p_18_AXI_00_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ACLK.bind(*p_18_AXI_01_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ARESET_N.bind(*p_18_AXI_01_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARESET_N);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_AXI_01_ARADDR = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->AXI_01_ARADDR.bind(*p_18_AXI_01_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_ARBURST.bind(*p_18_AXI_01_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_ARID.bind(*p_18_AXI_01_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_01_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_01_ARLEN.bind(*p_18_AXI_01_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_01_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_01_ARSIZE.bind(*p_18_AXI_01_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ARVALID.bind(*p_18_AXI_01_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARVALID);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_AXI_01_AWADDR = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->AXI_01_AWADDR.bind(*p_18_AXI_01_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_AWBURST.bind(*p_18_AXI_01_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_AWID.bind(*p_18_AXI_01_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_01_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_01_AWLEN.bind(*p_18_AXI_01_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_01_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_01_AWSIZE.bind(*p_18_AXI_01_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_01_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_AWVALID.bind(*p_18_AXI_01_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_01_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_RREADY.bind(*p_18_AXI_01_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_01_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_BREADY.bind(*p_18_AXI_01_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_01_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_01_WDATA.bind(*p_18_AXI_01_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_01_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_WLAST.bind(*p_18_AXI_01_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_01_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_01_WSTRB.bind(*p_18_AXI_01_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_01_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_01_WDATA_PARITY.bind(*p_18_AXI_01_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_01_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_WVALID.bind(*p_18_AXI_01_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ACLK.bind(*p_18_AXI_02_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ARESET_N.bind(*p_18_AXI_02_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARESET_N);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_AXI_02_ARADDR = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->AXI_02_ARADDR.bind(*p_18_AXI_02_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_ARBURST.bind(*p_18_AXI_02_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_ARID.bind(*p_18_AXI_02_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_02_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_02_ARLEN.bind(*p_18_AXI_02_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_02_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_02_ARSIZE.bind(*p_18_AXI_02_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ARVALID.bind(*p_18_AXI_02_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARVALID);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_AXI_02_AWADDR = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->AXI_02_AWADDR.bind(*p_18_AXI_02_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_AWBURST.bind(*p_18_AXI_02_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_AWID.bind(*p_18_AXI_02_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_02_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_02_AWLEN.bind(*p_18_AXI_02_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_02_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_02_AWSIZE.bind(*p_18_AXI_02_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_02_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_AWVALID.bind(*p_18_AXI_02_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_02_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_RREADY.bind(*p_18_AXI_02_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_02_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_BREADY.bind(*p_18_AXI_02_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_02_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_02_WDATA.bind(*p_18_AXI_02_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_02_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_WLAST.bind(*p_18_AXI_02_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_02_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_02_WSTRB.bind(*p_18_AXI_02_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_02_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_02_WDATA_PARITY.bind(*p_18_AXI_02_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_02_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_WVALID.bind(*p_18_AXI_02_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WVALID);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_APB_0_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->APB_0_PWDATA.bind(*p_18_APB_0_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_18_APB_0_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_18->APB_0_PADDR.bind(*p_18_APB_0_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PADDR);
        xsim_sc_channel<0, bool > *p_18_APB_0_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PCLK.bind(*p_18_APB_0_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PCLK);
        xsim_sc_channel<0, bool > *p_18_APB_0_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PENABLE.bind(*p_18_APB_0_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PENABLE);
        xsim_sc_channel<0, bool > *p_18_APB_0_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PRESET_N.bind(*p_18_APB_0_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PRESET_N);
        xsim_sc_channel<0, bool > *p_18_APB_0_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PSEL.bind(*p_18_APB_0_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PSEL);
        xsim_sc_channel<0, bool > *p_18_APB_0_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PWRITE.bind(*p_18_APB_0_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PWRITE);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ARREADY.bind(*p_18_AXI_00_ARREADY);
        p_18_AXI_00_ARREADY->set_sv_netview_offsetfromdp(11819136);
        xsim_sc_channel<0, bool > *p_18_AXI_00_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_AWREADY.bind(*p_18_AXI_00_AWREADY);
        p_18_AXI_00_AWREADY->set_sv_netview_offsetfromdp(11819192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_00_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_00_RDATA_PARITY.bind(*p_18_AXI_00_RDATA_PARITY);
        p_18_AXI_00_RDATA_PARITY->set_sv_netview_offsetfromdp(11819248);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_00_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_00_RDATA.bind(*p_18_AXI_00_RDATA);
        p_18_AXI_00_RDATA->set_sv_netview_offsetfromdp(11819304);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_RID.bind(*p_18_AXI_00_RID);
        p_18_AXI_00_RID->set_sv_netview_offsetfromdp(11819360);
        xsim_sc_channel<0, bool > *p_18_AXI_00_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_RLAST.bind(*p_18_AXI_00_RLAST);
        p_18_AXI_00_RLAST->set_sv_netview_offsetfromdp(11819416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_RRESP.bind(*p_18_AXI_00_RRESP);
        p_18_AXI_00_RRESP->set_sv_netview_offsetfromdp(11819472);
        xsim_sc_channel<0, bool > *p_18_AXI_00_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_RVALID.bind(*p_18_AXI_00_RVALID);
        p_18_AXI_00_RVALID->set_sv_netview_offsetfromdp(11819528);
        xsim_sc_channel<0, bool > *p_18_AXI_00_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_WREADY.bind(*p_18_AXI_00_WREADY);
        p_18_AXI_00_WREADY->set_sv_netview_offsetfromdp(11819584);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_BID.bind(*p_18_AXI_00_BID);
        p_18_AXI_00_BID->set_sv_netview_offsetfromdp(11819640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_BRESP.bind(*p_18_AXI_00_BRESP);
        p_18_AXI_00_BRESP->set_sv_netview_offsetfromdp(11819696);
        xsim_sc_channel<0, bool > *p_18_AXI_00_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_BVALID.bind(*p_18_AXI_00_BVALID);
        p_18_AXI_00_BVALID->set_sv_netview_offsetfromdp(11819752);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ARREADY.bind(*p_18_AXI_01_ARREADY);
        p_18_AXI_01_ARREADY->set_sv_netview_offsetfromdp(11819808);
        xsim_sc_channel<0, bool > *p_18_AXI_01_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_AWREADY.bind(*p_18_AXI_01_AWREADY);
        p_18_AXI_01_AWREADY->set_sv_netview_offsetfromdp(11819864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_01_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_01_RDATA_PARITY.bind(*p_18_AXI_01_RDATA_PARITY);
        p_18_AXI_01_RDATA_PARITY->set_sv_netview_offsetfromdp(11819920);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_01_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_01_RDATA.bind(*p_18_AXI_01_RDATA);
        p_18_AXI_01_RDATA->set_sv_netview_offsetfromdp(11819976);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_RID.bind(*p_18_AXI_01_RID);
        p_18_AXI_01_RID->set_sv_netview_offsetfromdp(11820032);
        xsim_sc_channel<0, bool > *p_18_AXI_01_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_RLAST.bind(*p_18_AXI_01_RLAST);
        p_18_AXI_01_RLAST->set_sv_netview_offsetfromdp(11820088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_RRESP.bind(*p_18_AXI_01_RRESP);
        p_18_AXI_01_RRESP->set_sv_netview_offsetfromdp(11820144);
        xsim_sc_channel<0, bool > *p_18_AXI_01_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_RVALID.bind(*p_18_AXI_01_RVALID);
        p_18_AXI_01_RVALID->set_sv_netview_offsetfromdp(11820200);
        xsim_sc_channel<0, bool > *p_18_AXI_01_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_WREADY.bind(*p_18_AXI_01_WREADY);
        p_18_AXI_01_WREADY->set_sv_netview_offsetfromdp(11820256);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_BID.bind(*p_18_AXI_01_BID);
        p_18_AXI_01_BID->set_sv_netview_offsetfromdp(11820312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_BRESP.bind(*p_18_AXI_01_BRESP);
        p_18_AXI_01_BRESP->set_sv_netview_offsetfromdp(11820368);
        xsim_sc_channel<0, bool > *p_18_AXI_01_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_BVALID.bind(*p_18_AXI_01_BVALID);
        p_18_AXI_01_BVALID->set_sv_netview_offsetfromdp(11820424);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ARREADY.bind(*p_18_AXI_02_ARREADY);
        p_18_AXI_02_ARREADY->set_sv_netview_offsetfromdp(11820480);
        xsim_sc_channel<0, bool > *p_18_AXI_02_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_AWREADY.bind(*p_18_AXI_02_AWREADY);
        p_18_AXI_02_AWREADY->set_sv_netview_offsetfromdp(11820536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_02_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_02_RDATA_PARITY.bind(*p_18_AXI_02_RDATA_PARITY);
        p_18_AXI_02_RDATA_PARITY->set_sv_netview_offsetfromdp(11820592);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_02_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_02_RDATA.bind(*p_18_AXI_02_RDATA);
        p_18_AXI_02_RDATA->set_sv_netview_offsetfromdp(11820648);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_RID.bind(*p_18_AXI_02_RID);
        p_18_AXI_02_RID->set_sv_netview_offsetfromdp(11820704);
        xsim_sc_channel<0, bool > *p_18_AXI_02_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_RLAST.bind(*p_18_AXI_02_RLAST);
        p_18_AXI_02_RLAST->set_sv_netview_offsetfromdp(11820760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_RRESP.bind(*p_18_AXI_02_RRESP);
        p_18_AXI_02_RRESP->set_sv_netview_offsetfromdp(11820816);
        xsim_sc_channel<0, bool > *p_18_AXI_02_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_RVALID.bind(*p_18_AXI_02_RVALID);
        p_18_AXI_02_RVALID->set_sv_netview_offsetfromdp(11820872);
        xsim_sc_channel<0, bool > *p_18_AXI_02_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_WREADY.bind(*p_18_AXI_02_WREADY);
        p_18_AXI_02_WREADY->set_sv_netview_offsetfromdp(11820928);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_BID.bind(*p_18_AXI_02_BID);
        p_18_AXI_02_BID->set_sv_netview_offsetfromdp(11820984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_BRESP.bind(*p_18_AXI_02_BRESP);
        p_18_AXI_02_BRESP->set_sv_netview_offsetfromdp(11821040);
        xsim_sc_channel<0, bool > *p_18_AXI_02_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_BVALID.bind(*p_18_AXI_02_BVALID);
        p_18_AXI_02_BVALID->set_sv_netview_offsetfromdp(11821096);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_APB_0_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->APB_0_PRDATA.bind(*p_18_APB_0_PRDATA);
        p_18_APB_0_PRDATA->set_sv_netview_offsetfromdp(11821152);
        xsim_sc_channel<0, bool > *p_18_APB_0_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PREADY.bind(*p_18_APB_0_PREADY);
        p_18_APB_0_PREADY->set_sv_netview_offsetfromdp(11821208);
        xsim_sc_channel<0, bool > *p_18_APB_0_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PSLVERR.bind(*p_18_APB_0_PSLVERR);
        p_18_APB_0_PSLVERR->set_sv_netview_offsetfromdp(11821264);
        xsim_sc_channel<0, bool > *p_18_apb_complete_0 = new xsim_sc_channel<0, bool >();
        sc_inst_18->apb_complete_0.bind(*p_18_apb_complete_0);
        p_18_apb_complete_0->set_sv_netview_offsetfromdp(11821320);
        xsim_sc_channel<0, bool > *p_18_DRAM_0_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_18->DRAM_0_STAT_CATTRIP.bind(*p_18_DRAM_0_STAT_CATTRIP);
        p_18_DRAM_0_STAT_CATTRIP->set_sv_netview_offsetfromdp(11821376);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_18_DRAM_0_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_18->DRAM_0_STAT_TEMP.bind(*p_18_DRAM_0_STAT_TEMP);
        p_18_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(11821432);
        sc_inst_19 = new bd_5dca_interconnect1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.interconnect1_0");
        sc_inst_19->xsim_set_dbg_index(2766);
        xsim_sc_channel<0, bool > *p_19_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk.bind(*p_19_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk);
        xsim_sc_channel<0, bool > *p_19_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk1.bind(*p_19_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk1);
        xsim_sc_channel<0, bool > *p_19_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->aresetn.bind(*p_19_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_awid.bind(*p_19_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->S00_AXI_awaddr.bind(*p_19_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->S00_AXI_awlen.bind(*p_19_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_awsize.bind(*p_19_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_awburst.bind(*p_19_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_awlock.bind(*p_19_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_awcache.bind(*p_19_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_awprot.bind(*p_19_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_awqos.bind(*p_19_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_awvalid.bind(*p_19_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_awready.bind(*p_19_S00_AXI_awready);
        p_19_S00_AXI_awready->set_sv_netview_offsetfromdp(12017560);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_S00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->S00_AXI_wdata.bind(*p_19_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_S00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->S00_AXI_wstrb.bind(*p_19_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_wlast.bind(*p_19_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_wvalid.bind(*p_19_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_wready.bind(*p_19_S00_AXI_wready);
        p_19_S00_AXI_wready->set_sv_netview_offsetfromdp(12017840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_bid.bind(*p_19_S00_AXI_bid);
        p_19_S00_AXI_bid->set_sv_netview_offsetfromdp(12017896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_bresp.bind(*p_19_S00_AXI_bresp);
        p_19_S00_AXI_bresp->set_sv_netview_offsetfromdp(12017952);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_bvalid.bind(*p_19_S00_AXI_bvalid);
        p_19_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12018008);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_bready.bind(*p_19_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_arid.bind(*p_19_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->S00_AXI_araddr.bind(*p_19_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->S00_AXI_arlen.bind(*p_19_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_arsize.bind(*p_19_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_arburst.bind(*p_19_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_arlock.bind(*p_19_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_arcache.bind(*p_19_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_arprot.bind(*p_19_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_arqos.bind(*p_19_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_arvalid.bind(*p_19_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_arready.bind(*p_19_S00_AXI_arready);
        p_19_S00_AXI_arready->set_sv_netview_offsetfromdp(12018680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_rid.bind(*p_19_S00_AXI_rid);
        p_19_S00_AXI_rid->set_sv_netview_offsetfromdp(12018736);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_S00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->S00_AXI_rdata.bind(*p_19_S00_AXI_rdata);
        p_19_S00_AXI_rdata->set_sv_netview_offsetfromdp(12018792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_rresp.bind(*p_19_S00_AXI_rresp);
        p_19_S00_AXI_rresp->set_sv_netview_offsetfromdp(12018848);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rlast.bind(*p_19_S00_AXI_rlast);
        p_19_S00_AXI_rlast->set_sv_netview_offsetfromdp(12018904);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rvalid.bind(*p_19_S00_AXI_rvalid);
        p_19_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12018960);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rready.bind(*p_19_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_19_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_19->M00_AXI_awaddr.bind(*p_19_M00_AXI_awaddr);
        p_19_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12019072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_awlen.bind(*p_19_M00_AXI_awlen);
        p_19_M00_AXI_awlen->set_sv_netview_offsetfromdp(12019128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_awsize.bind(*p_19_M00_AXI_awsize);
        p_19_M00_AXI_awsize->set_sv_netview_offsetfromdp(12019184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_awburst.bind(*p_19_M00_AXI_awburst);
        p_19_M00_AXI_awburst->set_sv_netview_offsetfromdp(12019240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_awlock.bind(*p_19_M00_AXI_awlock);
        p_19_M00_AXI_awlock->set_sv_netview_offsetfromdp(12019296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_awcache.bind(*p_19_M00_AXI_awcache);
        p_19_M00_AXI_awcache->set_sv_netview_offsetfromdp(12019352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_awprot.bind(*p_19_M00_AXI_awprot);
        p_19_M00_AXI_awprot->set_sv_netview_offsetfromdp(12019408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_awqos.bind(*p_19_M00_AXI_awqos);
        p_19_M00_AXI_awqos->set_sv_netview_offsetfromdp(12019464);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_awvalid.bind(*p_19_M00_AXI_awvalid);
        p_19_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12019520);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_awready.bind(*p_19_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->M00_AXI_wdata.bind(*p_19_M00_AXI_wdata);
        p_19_M00_AXI_wdata->set_sv_netview_offsetfromdp(12019632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->M00_AXI_wstrb.bind(*p_19_M00_AXI_wstrb);
        p_19_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12019688);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_wlast.bind(*p_19_M00_AXI_wlast);
        p_19_M00_AXI_wlast->set_sv_netview_offsetfromdp(12019744);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_wvalid.bind(*p_19_M00_AXI_wvalid);
        p_19_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12019800);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_wready.bind(*p_19_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_bresp.bind(*p_19_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_bvalid.bind(*p_19_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_bready.bind(*p_19_M00_AXI_bready);
        p_19_M00_AXI_bready->set_sv_netview_offsetfromdp(12020024);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_19_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_19->M00_AXI_araddr.bind(*p_19_M00_AXI_araddr);
        p_19_M00_AXI_araddr->set_sv_netview_offsetfromdp(12020080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arlen.bind(*p_19_M00_AXI_arlen);
        p_19_M00_AXI_arlen->set_sv_netview_offsetfromdp(12020136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_arsize.bind(*p_19_M00_AXI_arsize);
        p_19_M00_AXI_arsize->set_sv_netview_offsetfromdp(12020192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_arburst.bind(*p_19_M00_AXI_arburst);
        p_19_M00_AXI_arburst->set_sv_netview_offsetfromdp(12020248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_arlock.bind(*p_19_M00_AXI_arlock);
        p_19_M00_AXI_arlock->set_sv_netview_offsetfromdp(12020304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arcache.bind(*p_19_M00_AXI_arcache);
        p_19_M00_AXI_arcache->set_sv_netview_offsetfromdp(12020360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_arprot.bind(*p_19_M00_AXI_arprot);
        p_19_M00_AXI_arprot->set_sv_netview_offsetfromdp(12020416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arqos.bind(*p_19_M00_AXI_arqos);
        p_19_M00_AXI_arqos->set_sv_netview_offsetfromdp(12020472);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_arvalid.bind(*p_19_M00_AXI_arvalid);
        p_19_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12020528);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_arready.bind(*p_19_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->M00_AXI_rdata.bind(*p_19_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_rresp.bind(*p_19_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rlast.bind(*p_19_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rvalid.bind(*p_19_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rready.bind(*p_19_M00_AXI_rready);
        p_19_M00_AXI_rready->set_sv_netview_offsetfromdp(12020864);
        sc_inst_20 = new bd_5dca_slice1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.slice1_0");
        sc_inst_20->xsim_set_dbg_index(2767);
        xsim_sc_channel<0, bool > *p_20_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->aclk.bind(*p_20_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aclk);
        xsim_sc_channel<0, bool > *p_20_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->aresetn.bind(*p_20_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aresetn);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_20_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_20->s_axi_awaddr.bind(*p_20_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awlen.bind(*p_20_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awsize.bind(*p_20_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_awburst.bind(*p_20_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_awlock.bind(*p_20_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awcache.bind(*p_20_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awprot.bind(*p_20_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awqos.bind(*p_20_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_20_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awvalid.bind(*p_20_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awready.bind(*p_20_s_axi_awready);
        p_20_s_axi_awready->set_sv_netview_offsetfromdp(12021584);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->s_axi_wdata.bind(*p_20_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_wstrb.bind(*p_20_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wlast.bind(*p_20_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_20_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wvalid.bind(*p_20_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wready.bind(*p_20_s_axi_wready);
        p_20_s_axi_wready->set_sv_netview_offsetfromdp(12021864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_bresp.bind(*p_20_s_axi_bresp);
        p_20_s_axi_bresp->set_sv_netview_offsetfromdp(12021920);
        xsim_sc_channel<0, bool > *p_20_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bvalid.bind(*p_20_s_axi_bvalid);
        p_20_s_axi_bvalid->set_sv_netview_offsetfromdp(12021976);
        xsim_sc_channel<0, bool > *p_20_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bready.bind(*p_20_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_20_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_20->s_axi_araddr.bind(*p_20_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arlen.bind(*p_20_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arsize.bind(*p_20_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_arburst.bind(*p_20_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_arlock.bind(*p_20_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arcache.bind(*p_20_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arprot.bind(*p_20_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arqos.bind(*p_20_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_20_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arvalid.bind(*p_20_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arready.bind(*p_20_s_axi_arready);
        p_20_s_axi_arready->set_sv_netview_offsetfromdp(12022592);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->s_axi_rdata.bind(*p_20_s_axi_rdata);
        p_20_s_axi_rdata->set_sv_netview_offsetfromdp(12022648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_rresp.bind(*p_20_s_axi_rresp);
        p_20_s_axi_rresp->set_sv_netview_offsetfromdp(12022704);
        xsim_sc_channel<0, bool > *p_20_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rlast.bind(*p_20_s_axi_rlast);
        p_20_s_axi_rlast->set_sv_netview_offsetfromdp(12022760);
        xsim_sc_channel<0, bool > *p_20_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rvalid.bind(*p_20_s_axi_rvalid);
        p_20_s_axi_rvalid->set_sv_netview_offsetfromdp(12022816);
        xsim_sc_channel<0, bool > *p_20_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rready.bind(*p_20_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_20_m_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_20->m_axi_awaddr.bind(*p_20_m_axi_awaddr);
        p_20_m_axi_awaddr->set_sv_netview_offsetfromdp(12022928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awlen.bind(*p_20_m_axi_awlen);
        p_20_m_axi_awlen->set_sv_netview_offsetfromdp(12022984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awsize.bind(*p_20_m_axi_awsize);
        p_20_m_axi_awsize->set_sv_netview_offsetfromdp(12023040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_awburst.bind(*p_20_m_axi_awburst);
        p_20_m_axi_awburst->set_sv_netview_offsetfromdp(12023096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_awlock.bind(*p_20_m_axi_awlock);
        p_20_m_axi_awlock->set_sv_netview_offsetfromdp(12023152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awcache.bind(*p_20_m_axi_awcache);
        p_20_m_axi_awcache->set_sv_netview_offsetfromdp(12023208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awprot.bind(*p_20_m_axi_awprot);
        p_20_m_axi_awprot->set_sv_netview_offsetfromdp(12023264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awqos.bind(*p_20_m_axi_awqos);
        p_20_m_axi_awqos->set_sv_netview_offsetfromdp(12023320);
        xsim_sc_channel<0, bool > *p_20_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awvalid.bind(*p_20_m_axi_awvalid);
        p_20_m_axi_awvalid->set_sv_netview_offsetfromdp(12023376);
        xsim_sc_channel<0, bool > *p_20_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awready.bind(*p_20_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->m_axi_wdata.bind(*p_20_m_axi_wdata);
        p_20_m_axi_wdata->set_sv_netview_offsetfromdp(12023488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_wstrb.bind(*p_20_m_axi_wstrb);
        p_20_m_axi_wstrb->set_sv_netview_offsetfromdp(12023544);
        xsim_sc_channel<0, bool > *p_20_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wlast.bind(*p_20_m_axi_wlast);
        p_20_m_axi_wlast->set_sv_netview_offsetfromdp(12023600);
        xsim_sc_channel<0, bool > *p_20_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wvalid.bind(*p_20_m_axi_wvalid);
        p_20_m_axi_wvalid->set_sv_netview_offsetfromdp(12023656);
        xsim_sc_channel<0, bool > *p_20_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wready.bind(*p_20_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_bresp.bind(*p_20_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bvalid.bind(*p_20_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bready.bind(*p_20_m_axi_bready);
        p_20_m_axi_bready->set_sv_netview_offsetfromdp(12023880);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_20_m_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_20->m_axi_araddr.bind(*p_20_m_axi_araddr);
        p_20_m_axi_araddr->set_sv_netview_offsetfromdp(12023936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arlen.bind(*p_20_m_axi_arlen);
        p_20_m_axi_arlen->set_sv_netview_offsetfromdp(12023992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arsize.bind(*p_20_m_axi_arsize);
        p_20_m_axi_arsize->set_sv_netview_offsetfromdp(12024048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_arburst.bind(*p_20_m_axi_arburst);
        p_20_m_axi_arburst->set_sv_netview_offsetfromdp(12024104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_arlock.bind(*p_20_m_axi_arlock);
        p_20_m_axi_arlock->set_sv_netview_offsetfromdp(12024160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arcache.bind(*p_20_m_axi_arcache);
        p_20_m_axi_arcache->set_sv_netview_offsetfromdp(12024216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arprot.bind(*p_20_m_axi_arprot);
        p_20_m_axi_arprot->set_sv_netview_offsetfromdp(12024272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arqos.bind(*p_20_m_axi_arqos);
        p_20_m_axi_arqos->set_sv_netview_offsetfromdp(12024328);
        xsim_sc_channel<0, bool > *p_20_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arvalid.bind(*p_20_m_axi_arvalid);
        p_20_m_axi_arvalid->set_sv_netview_offsetfromdp(12024384);
        xsim_sc_channel<0, bool > *p_20_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arready.bind(*p_20_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->m_axi_rdata.bind(*p_20_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_rresp.bind(*p_20_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rlast.bind(*p_20_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_20_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rvalid.bind(*p_20_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rready.bind(*p_20_m_axi_rready);
        p_20_m_axi_rready->set_sv_netview_offsetfromdp(12024720);
        sc_inst_21 = new bd_5dca_interconnect2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.interconnect2_1");
        sc_inst_21->xsim_set_dbg_index(2840);
        xsim_sc_channel<0, bool > *p_21_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk.bind(*p_21_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk);
        xsim_sc_channel<0, bool > *p_21_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk1.bind(*p_21_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk1);
        xsim_sc_channel<0, bool > *p_21_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->aresetn.bind(*p_21_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->S00_AXI_arid.bind(*p_21_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->S00_AXI_araddr.bind(*p_21_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->S00_AXI_arlen.bind(*p_21_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->S00_AXI_arsize.bind(*p_21_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->S00_AXI_arburst.bind(*p_21_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->S00_AXI_arlock.bind(*p_21_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->S00_AXI_arcache.bind(*p_21_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->S00_AXI_arprot.bind(*p_21_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->S00_AXI_arqos.bind(*p_21_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_arvalid.bind(*p_21_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_arready.bind(*p_21_S00_AXI_arready);
        p_21_S00_AXI_arready->set_sv_netview_offsetfromdp(12068512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->S00_AXI_rid.bind(*p_21_S00_AXI_rid);
        p_21_S00_AXI_rid->set_sv_netview_offsetfromdp(12068568);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_S00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->S00_AXI_rdata.bind(*p_21_S00_AXI_rdata);
        p_21_S00_AXI_rdata->set_sv_netview_offsetfromdp(12068624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->S00_AXI_rresp.bind(*p_21_S00_AXI_rresp);
        p_21_S00_AXI_rresp->set_sv_netview_offsetfromdp(12068680);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_rlast.bind(*p_21_S00_AXI_rlast);
        p_21_S00_AXI_rlast->set_sv_netview_offsetfromdp(12068736);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_rvalid.bind(*p_21_S00_AXI_rvalid);
        p_21_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12068792);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_rready.bind(*p_21_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_21_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_21->M00_AXI_araddr.bind(*p_21_M00_AXI_araddr);
        p_21_M00_AXI_araddr->set_sv_netview_offsetfromdp(12068904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_arlen.bind(*p_21_M00_AXI_arlen);
        p_21_M00_AXI_arlen->set_sv_netview_offsetfromdp(12068960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->M00_AXI_arsize.bind(*p_21_M00_AXI_arsize);
        p_21_M00_AXI_arsize->set_sv_netview_offsetfromdp(12069016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_arburst.bind(*p_21_M00_AXI_arburst);
        p_21_M00_AXI_arburst->set_sv_netview_offsetfromdp(12069072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_arlock.bind(*p_21_M00_AXI_arlock);
        p_21_M00_AXI_arlock->set_sv_netview_offsetfromdp(12069128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_arcache.bind(*p_21_M00_AXI_arcache);
        p_21_M00_AXI_arcache->set_sv_netview_offsetfromdp(12069184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->M00_AXI_arprot.bind(*p_21_M00_AXI_arprot);
        p_21_M00_AXI_arprot->set_sv_netview_offsetfromdp(12069240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_arqos.bind(*p_21_M00_AXI_arqos);
        p_21_M00_AXI_arqos->set_sv_netview_offsetfromdp(12069296);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_arvalid.bind(*p_21_M00_AXI_arvalid);
        p_21_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12069352);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_arready.bind(*p_21_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->M00_AXI_rdata.bind(*p_21_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_rresp.bind(*p_21_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_rlast.bind(*p_21_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_rvalid.bind(*p_21_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_rready.bind(*p_21_M00_AXI_rready);
        p_21_M00_AXI_rready->set_sv_netview_offsetfromdp(12069688);
        sc_inst_22 = new bd_5dca_slice2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.slice2_1");
        sc_inst_22->xsim_set_dbg_index(2841);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_22_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_22->s_axi_awaddr.bind(*p_22_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awlen.bind(*p_22_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awsize.bind(*p_22_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_awburst.bind(*p_22_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_awlock.bind(*p_22_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awcache.bind(*p_22_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awprot.bind(*p_22_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awqos.bind(*p_22_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_22_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awvalid.bind(*p_22_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awready.bind(*p_22_s_axi_awready);
        p_22_s_axi_awready->set_sv_netview_offsetfromdp(12070408);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->s_axi_wdata.bind(*p_22_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_wstrb.bind(*p_22_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_22_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wlast.bind(*p_22_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_22_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wvalid.bind(*p_22_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wready.bind(*p_22_s_axi_wready);
        p_22_s_axi_wready->set_sv_netview_offsetfromdp(12070688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_bresp.bind(*p_22_s_axi_bresp);
        p_22_s_axi_bresp->set_sv_netview_offsetfromdp(12070744);
        xsim_sc_channel<0, bool > *p_22_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bvalid.bind(*p_22_s_axi_bvalid);
        p_22_s_axi_bvalid->set_sv_netview_offsetfromdp(12070800);
        xsim_sc_channel<0, bool > *p_22_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bready.bind(*p_22_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_22_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_22->s_axi_araddr.bind(*p_22_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arlen.bind(*p_22_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arsize.bind(*p_22_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_arburst.bind(*p_22_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_arlock.bind(*p_22_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arcache.bind(*p_22_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arprot.bind(*p_22_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arqos.bind(*p_22_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_22_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arvalid.bind(*p_22_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arready.bind(*p_22_s_axi_arready);
        p_22_s_axi_arready->set_sv_netview_offsetfromdp(12071416);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->s_axi_rdata.bind(*p_22_s_axi_rdata);
        p_22_s_axi_rdata->set_sv_netview_offsetfromdp(12071472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_rresp.bind(*p_22_s_axi_rresp);
        p_22_s_axi_rresp->set_sv_netview_offsetfromdp(12071528);
        xsim_sc_channel<0, bool > *p_22_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rlast.bind(*p_22_s_axi_rlast);
        p_22_s_axi_rlast->set_sv_netview_offsetfromdp(12071584);
        xsim_sc_channel<0, bool > *p_22_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rvalid.bind(*p_22_s_axi_rvalid);
        p_22_s_axi_rvalid->set_sv_netview_offsetfromdp(12071640);
        xsim_sc_channel<0, bool > *p_22_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rready.bind(*p_22_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_22_m_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_22->m_axi_awaddr.bind(*p_22_m_axi_awaddr);
        p_22_m_axi_awaddr->set_sv_netview_offsetfromdp(12071752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awlen.bind(*p_22_m_axi_awlen);
        p_22_m_axi_awlen->set_sv_netview_offsetfromdp(12071808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_awsize.bind(*p_22_m_axi_awsize);
        p_22_m_axi_awsize->set_sv_netview_offsetfromdp(12071864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awburst.bind(*p_22_m_axi_awburst);
        p_22_m_axi_awburst->set_sv_netview_offsetfromdp(12071920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awlock.bind(*p_22_m_axi_awlock);
        p_22_m_axi_awlock->set_sv_netview_offsetfromdp(12071976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awcache.bind(*p_22_m_axi_awcache);
        p_22_m_axi_awcache->set_sv_netview_offsetfromdp(12072032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_awprot.bind(*p_22_m_axi_awprot);
        p_22_m_axi_awprot->set_sv_netview_offsetfromdp(12072088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awqos.bind(*p_22_m_axi_awqos);
        p_22_m_axi_awqos->set_sv_netview_offsetfromdp(12072144);
        xsim_sc_channel<0, bool > *p_22_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awvalid.bind(*p_22_m_axi_awvalid);
        p_22_m_axi_awvalid->set_sv_netview_offsetfromdp(12072200);
        xsim_sc_channel<0, bool > *p_22_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awready.bind(*p_22_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->m_axi_wdata.bind(*p_22_m_axi_wdata);
        p_22_m_axi_wdata->set_sv_netview_offsetfromdp(12072312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_axi_wstrb.bind(*p_22_m_axi_wstrb);
        p_22_m_axi_wstrb->set_sv_netview_offsetfromdp(12072368);
        xsim_sc_channel<0, bool > *p_22_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wlast.bind(*p_22_m_axi_wlast);
        p_22_m_axi_wlast->set_sv_netview_offsetfromdp(12072424);
        xsim_sc_channel<0, bool > *p_22_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wvalid.bind(*p_22_m_axi_wvalid);
        p_22_m_axi_wvalid->set_sv_netview_offsetfromdp(12072480);
        xsim_sc_channel<0, bool > *p_22_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wready.bind(*p_22_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bresp.bind(*p_22_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bvalid.bind(*p_22_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bready.bind(*p_22_m_axi_bready);
        p_22_m_axi_bready->set_sv_netview_offsetfromdp(12072704);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_22_m_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_22->m_axi_araddr.bind(*p_22_m_axi_araddr);
        p_22_m_axi_araddr->set_sv_netview_offsetfromdp(12072760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arlen.bind(*p_22_m_axi_arlen);
        p_22_m_axi_arlen->set_sv_netview_offsetfromdp(12072816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_arsize.bind(*p_22_m_axi_arsize);
        p_22_m_axi_arsize->set_sv_netview_offsetfromdp(12072872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arburst.bind(*p_22_m_axi_arburst);
        p_22_m_axi_arburst->set_sv_netview_offsetfromdp(12072928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arlock.bind(*p_22_m_axi_arlock);
        p_22_m_axi_arlock->set_sv_netview_offsetfromdp(12072984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arcache.bind(*p_22_m_axi_arcache);
        p_22_m_axi_arcache->set_sv_netview_offsetfromdp(12073040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_arprot.bind(*p_22_m_axi_arprot);
        p_22_m_axi_arprot->set_sv_netview_offsetfromdp(12073096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arqos.bind(*p_22_m_axi_arqos);
        p_22_m_axi_arqos->set_sv_netview_offsetfromdp(12073152);
        xsim_sc_channel<0, bool > *p_22_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arvalid.bind(*p_22_m_axi_arvalid);
        p_22_m_axi_arvalid->set_sv_netview_offsetfromdp(12073208);
        xsim_sc_channel<0, bool > *p_22_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arready.bind(*p_22_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->m_axi_rdata.bind(*p_22_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rresp.bind(*p_22_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rlast.bind(*p_22_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_22_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rvalid.bind(*p_22_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rready.bind(*p_22_m_axi_rready);
        p_22_m_axi_rready->set_sv_netview_offsetfromdp(12073544);
        sc_inst_23 = new bd_5dca_interconnect0_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.interconnect0_2");
        sc_inst_23->xsim_set_dbg_index(2894);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk1.bind(*p_23_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk1);
        xsim_sc_channel<0, bool > *p_23_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->aresetn.bind(*p_23_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aresetn);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_S00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->S00_AXI_awaddr.bind(*p_23_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_awlen.bind(*p_23_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awsize.bind(*p_23_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_awburst.bind(*p_23_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_awlock.bind(*p_23_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awcache.bind(*p_23_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awprot.bind(*p_23_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awqos.bind(*p_23_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awvalid.bind(*p_23_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awready.bind(*p_23_S00_AXI_awready);
        p_23_S00_AXI_awready->set_sv_netview_offsetfromdp(12135712);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->S00_AXI_wdata.bind(*p_23_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_wstrb.bind(*p_23_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wlast.bind(*p_23_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wvalid.bind(*p_23_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wready.bind(*p_23_S00_AXI_wready);
        p_23_S00_AXI_wready->set_sv_netview_offsetfromdp(12135992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_bresp.bind(*p_23_S00_AXI_bresp);
        p_23_S00_AXI_bresp->set_sv_netview_offsetfromdp(12136048);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bvalid.bind(*p_23_S00_AXI_bvalid);
        p_23_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12136104);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bready.bind(*p_23_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_bready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_S00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->S00_AXI_araddr.bind(*p_23_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_arlen.bind(*p_23_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arsize.bind(*p_23_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_arburst.bind(*p_23_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_arlock.bind(*p_23_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arcache.bind(*p_23_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arprot.bind(*p_23_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arqos.bind(*p_23_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arvalid.bind(*p_23_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arready.bind(*p_23_S00_AXI_arready);
        p_23_S00_AXI_arready->set_sv_netview_offsetfromdp(12136720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->S00_AXI_rdata.bind(*p_23_S00_AXI_rdata);
        p_23_S00_AXI_rdata->set_sv_netview_offsetfromdp(12136776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_rresp.bind(*p_23_S00_AXI_rresp);
        p_23_S00_AXI_rresp->set_sv_netview_offsetfromdp(12136832);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rlast.bind(*p_23_S00_AXI_rlast);
        p_23_S00_AXI_rlast->set_sv_netview_offsetfromdp(12136888);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rvalid.bind(*p_23_S00_AXI_rvalid);
        p_23_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12136944);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rready.bind(*p_23_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->M00_AXI_awaddr.bind(*p_23_M00_AXI_awaddr);
        p_23_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12137056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awlen.bind(*p_23_M00_AXI_awlen);
        p_23_M00_AXI_awlen->set_sv_netview_offsetfromdp(12137112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awsize.bind(*p_23_M00_AXI_awsize);
        p_23_M00_AXI_awsize->set_sv_netview_offsetfromdp(12137168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_awburst.bind(*p_23_M00_AXI_awburst);
        p_23_M00_AXI_awburst->set_sv_netview_offsetfromdp(12137224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_awlock.bind(*p_23_M00_AXI_awlock);
        p_23_M00_AXI_awlock->set_sv_netview_offsetfromdp(12137280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awcache.bind(*p_23_M00_AXI_awcache);
        p_23_M00_AXI_awcache->set_sv_netview_offsetfromdp(12137336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awprot.bind(*p_23_M00_AXI_awprot);
        p_23_M00_AXI_awprot->set_sv_netview_offsetfromdp(12137392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awqos.bind(*p_23_M00_AXI_awqos);
        p_23_M00_AXI_awqos->set_sv_netview_offsetfromdp(12137448);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awvalid.bind(*p_23_M00_AXI_awvalid);
        p_23_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12137504);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awready.bind(*p_23_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->M00_AXI_wdata.bind(*p_23_M00_AXI_wdata);
        p_23_M00_AXI_wdata->set_sv_netview_offsetfromdp(12137616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M00_AXI_wstrb.bind(*p_23_M00_AXI_wstrb);
        p_23_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12137672);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wlast.bind(*p_23_M00_AXI_wlast);
        p_23_M00_AXI_wlast->set_sv_netview_offsetfromdp(12137728);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wvalid.bind(*p_23_M00_AXI_wvalid);
        p_23_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12137784);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wready.bind(*p_23_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_bresp.bind(*p_23_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bvalid.bind(*p_23_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bready.bind(*p_23_M00_AXI_bready);
        p_23_M00_AXI_bready->set_sv_netview_offsetfromdp(12138008);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->M00_AXI_araddr.bind(*p_23_M00_AXI_araddr);
        p_23_M00_AXI_araddr->set_sv_netview_offsetfromdp(12138064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arlen.bind(*p_23_M00_AXI_arlen);
        p_23_M00_AXI_arlen->set_sv_netview_offsetfromdp(12138120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arsize.bind(*p_23_M00_AXI_arsize);
        p_23_M00_AXI_arsize->set_sv_netview_offsetfromdp(12138176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_arburst.bind(*p_23_M00_AXI_arburst);
        p_23_M00_AXI_arburst->set_sv_netview_offsetfromdp(12138232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_arlock.bind(*p_23_M00_AXI_arlock);
        p_23_M00_AXI_arlock->set_sv_netview_offsetfromdp(12138288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arcache.bind(*p_23_M00_AXI_arcache);
        p_23_M00_AXI_arcache->set_sv_netview_offsetfromdp(12138344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arprot.bind(*p_23_M00_AXI_arprot);
        p_23_M00_AXI_arprot->set_sv_netview_offsetfromdp(12138400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arqos.bind(*p_23_M00_AXI_arqos);
        p_23_M00_AXI_arqos->set_sv_netview_offsetfromdp(12138456);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arvalid.bind(*p_23_M00_AXI_arvalid);
        p_23_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12138512);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arready.bind(*p_23_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->M00_AXI_rdata.bind(*p_23_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_rresp.bind(*p_23_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rlast.bind(*p_23_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rvalid.bind(*p_23_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rready.bind(*p_23_M00_AXI_rready);
        p_23_M00_AXI_rready->set_sv_netview_offsetfromdp(12138848);
        sc_inst_24 = new bd_5dca_slice0_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.slice0_2");
        sc_inst_24->xsim_set_dbg_index(2895);
        xsim_sc_channel<0, bool > *p_24_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk.bind(*p_24_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk);
        xsim_sc_channel<0, bool > *p_24_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->aresetn.bind(*p_24_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aresetn);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_24_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_24->s_axi_awaddr.bind(*p_24_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awlen.bind(*p_24_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awsize.bind(*p_24_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_awburst.bind(*p_24_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_awlock.bind(*p_24_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awcache.bind(*p_24_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awprot.bind(*p_24_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awqos.bind(*p_24_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_24_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awvalid.bind(*p_24_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awready.bind(*p_24_s_axi_awready);
        p_24_s_axi_awready->set_sv_netview_offsetfromdp(12139568);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->s_axi_wdata.bind(*p_24_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_axi_wstrb.bind(*p_24_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_24_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wlast.bind(*p_24_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_24_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wvalid.bind(*p_24_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wready.bind(*p_24_s_axi_wready);
        p_24_s_axi_wready->set_sv_netview_offsetfromdp(12139848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_bresp.bind(*p_24_s_axi_bresp);
        p_24_s_axi_bresp->set_sv_netview_offsetfromdp(12139904);
        xsim_sc_channel<0, bool > *p_24_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bvalid.bind(*p_24_s_axi_bvalid);
        p_24_s_axi_bvalid->set_sv_netview_offsetfromdp(12139960);
        xsim_sc_channel<0, bool > *p_24_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bready.bind(*p_24_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_bready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_24_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_24->s_axi_araddr.bind(*p_24_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arlen.bind(*p_24_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arsize.bind(*p_24_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_arburst.bind(*p_24_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_arlock.bind(*p_24_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arcache.bind(*p_24_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arprot.bind(*p_24_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arqos.bind(*p_24_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_24_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arvalid.bind(*p_24_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arready.bind(*p_24_s_axi_arready);
        p_24_s_axi_arready->set_sv_netview_offsetfromdp(12140576);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->s_axi_rdata.bind(*p_24_s_axi_rdata);
        p_24_s_axi_rdata->set_sv_netview_offsetfromdp(12140632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_rresp.bind(*p_24_s_axi_rresp);
        p_24_s_axi_rresp->set_sv_netview_offsetfromdp(12140688);
        xsim_sc_channel<0, bool > *p_24_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rlast.bind(*p_24_s_axi_rlast);
        p_24_s_axi_rlast->set_sv_netview_offsetfromdp(12140744);
        xsim_sc_channel<0, bool > *p_24_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rvalid.bind(*p_24_s_axi_rvalid);
        p_24_s_axi_rvalid->set_sv_netview_offsetfromdp(12140800);
        xsim_sc_channel<0, bool > *p_24_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rready.bind(*p_24_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_24_m_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_24->m_axi_awaddr.bind(*p_24_m_axi_awaddr);
        p_24_m_axi_awaddr->set_sv_netview_offsetfromdp(12140912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awlen.bind(*p_24_m_axi_awlen);
        p_24_m_axi_awlen->set_sv_netview_offsetfromdp(12140968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_awsize.bind(*p_24_m_axi_awsize);
        p_24_m_axi_awsize->set_sv_netview_offsetfromdp(12141024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_awburst.bind(*p_24_m_axi_awburst);
        p_24_m_axi_awburst->set_sv_netview_offsetfromdp(12141080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_awlock.bind(*p_24_m_axi_awlock);
        p_24_m_axi_awlock->set_sv_netview_offsetfromdp(12141136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awcache.bind(*p_24_m_axi_awcache);
        p_24_m_axi_awcache->set_sv_netview_offsetfromdp(12141192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_awprot.bind(*p_24_m_axi_awprot);
        p_24_m_axi_awprot->set_sv_netview_offsetfromdp(12141248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awqos.bind(*p_24_m_axi_awqos);
        p_24_m_axi_awqos->set_sv_netview_offsetfromdp(12141304);
        xsim_sc_channel<0, bool > *p_24_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awvalid.bind(*p_24_m_axi_awvalid);
        p_24_m_axi_awvalid->set_sv_netview_offsetfromdp(12141360);
        xsim_sc_channel<0, bool > *p_24_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awready.bind(*p_24_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->m_axi_wdata.bind(*p_24_m_axi_wdata);
        p_24_m_axi_wdata->set_sv_netview_offsetfromdp(12141472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axi_wstrb.bind(*p_24_m_axi_wstrb);
        p_24_m_axi_wstrb->set_sv_netview_offsetfromdp(12141528);
        xsim_sc_channel<0, bool > *p_24_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wlast.bind(*p_24_m_axi_wlast);
        p_24_m_axi_wlast->set_sv_netview_offsetfromdp(12141584);
        xsim_sc_channel<0, bool > *p_24_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wvalid.bind(*p_24_m_axi_wvalid);
        p_24_m_axi_wvalid->set_sv_netview_offsetfromdp(12141640);
        xsim_sc_channel<0, bool > *p_24_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wready.bind(*p_24_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_bresp.bind(*p_24_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bvalid.bind(*p_24_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bready.bind(*p_24_m_axi_bready);
        p_24_m_axi_bready->set_sv_netview_offsetfromdp(12141864);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_24_m_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_24->m_axi_araddr.bind(*p_24_m_axi_araddr);
        p_24_m_axi_araddr->set_sv_netview_offsetfromdp(12141920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arlen.bind(*p_24_m_axi_arlen);
        p_24_m_axi_arlen->set_sv_netview_offsetfromdp(12141976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_arsize.bind(*p_24_m_axi_arsize);
        p_24_m_axi_arsize->set_sv_netview_offsetfromdp(12142032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_arburst.bind(*p_24_m_axi_arburst);
        p_24_m_axi_arburst->set_sv_netview_offsetfromdp(12142088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_arlock.bind(*p_24_m_axi_arlock);
        p_24_m_axi_arlock->set_sv_netview_offsetfromdp(12142144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arcache.bind(*p_24_m_axi_arcache);
        p_24_m_axi_arcache->set_sv_netview_offsetfromdp(12142200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_arprot.bind(*p_24_m_axi_arprot);
        p_24_m_axi_arprot->set_sv_netview_offsetfromdp(12142256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arqos.bind(*p_24_m_axi_arqos);
        p_24_m_axi_arqos->set_sv_netview_offsetfromdp(12142312);
        xsim_sc_channel<0, bool > *p_24_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arvalid.bind(*p_24_m_axi_arvalid);
        p_24_m_axi_arvalid->set_sv_netview_offsetfromdp(12142368);
        xsim_sc_channel<0, bool > *p_24_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arready.bind(*p_24_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->m_axi_rdata.bind(*p_24_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_rresp.bind(*p_24_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rlast.bind(*p_24_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_24_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rvalid.bind(*p_24_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rready.bind(*p_24_m_axi_rready);
        p_24_m_axi_rready->set_sv_netview_offsetfromdp(12142704);
        sc_inst_25 = new bd_5dca_vip_S00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S00");
        sc_inst_25->xsim_set_dbg_index(1093);
        xsim_sc_channel<0, bool > *p_25_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk.bind(*p_25_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk);
        xsim_sc_channel<0, bool > *p_25_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->aresetn.bind(*p_25_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aresetn);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_25_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_25->s_axi_awaddr.bind(*p_25_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awlen.bind(*p_25_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awburst.bind(*p_25_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awlock.bind(*p_25_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awcache.bind(*p_25_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awprot.bind(*p_25_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awqos.bind(*p_25_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awvalid.bind(*p_25_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awready.bind(*p_25_s_axi_awready);
        p_25_s_axi_awready->set_sv_netview_offsetfromdp(12143368);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_wdata.bind(*p_25_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axi_wstrb.bind(*p_25_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wlast.bind(*p_25_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_25_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wvalid.bind(*p_25_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wready.bind(*p_25_s_axi_wready);
        p_25_s_axi_wready->set_sv_netview_offsetfromdp(12143648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_bresp.bind(*p_25_s_axi_bresp);
        p_25_s_axi_bresp->set_sv_netview_offsetfromdp(12143704);
        xsim_sc_channel<0, bool > *p_25_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bvalid.bind(*p_25_s_axi_bvalid);
        p_25_s_axi_bvalid->set_sv_netview_offsetfromdp(12143760);
        xsim_sc_channel<0, bool > *p_25_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bready.bind(*p_25_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_bready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_25_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_25->s_axi_araddr.bind(*p_25_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arlen.bind(*p_25_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arburst.bind(*p_25_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arlock.bind(*p_25_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arcache.bind(*p_25_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arprot.bind(*p_25_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arqos.bind(*p_25_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arvalid.bind(*p_25_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arready.bind(*p_25_s_axi_arready);
        p_25_s_axi_arready->set_sv_netview_offsetfromdp(12144320);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_rdata.bind(*p_25_s_axi_rdata);
        p_25_s_axi_rdata->set_sv_netview_offsetfromdp(12144376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_rresp.bind(*p_25_s_axi_rresp);
        p_25_s_axi_rresp->set_sv_netview_offsetfromdp(12144432);
        xsim_sc_channel<0, bool > *p_25_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rlast.bind(*p_25_s_axi_rlast);
        p_25_s_axi_rlast->set_sv_netview_offsetfromdp(12144488);
        xsim_sc_channel<0, bool > *p_25_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rvalid.bind(*p_25_s_axi_rvalid);
        p_25_s_axi_rvalid->set_sv_netview_offsetfromdp(12144544);
        xsim_sc_channel<0, bool > *p_25_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rready.bind(*p_25_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_25_m_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_25->m_axi_awaddr.bind(*p_25_m_axi_awaddr);
        p_25_m_axi_awaddr->set_sv_netview_offsetfromdp(12144656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awlen.bind(*p_25_m_axi_awlen);
        p_25_m_axi_awlen->set_sv_netview_offsetfromdp(12144712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awburst.bind(*p_25_m_axi_awburst);
        p_25_m_axi_awburst->set_sv_netview_offsetfromdp(12144768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awlock.bind(*p_25_m_axi_awlock);
        p_25_m_axi_awlock->set_sv_netview_offsetfromdp(12144824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awcache.bind(*p_25_m_axi_awcache);
        p_25_m_axi_awcache->set_sv_netview_offsetfromdp(12144880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awprot.bind(*p_25_m_axi_awprot);
        p_25_m_axi_awprot->set_sv_netview_offsetfromdp(12144936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awqos.bind(*p_25_m_axi_awqos);
        p_25_m_axi_awqos->set_sv_netview_offsetfromdp(12144992);
        xsim_sc_channel<0, bool > *p_25_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awvalid.bind(*p_25_m_axi_awvalid);
        p_25_m_axi_awvalid->set_sv_netview_offsetfromdp(12145048);
        xsim_sc_channel<0, bool > *p_25_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awready.bind(*p_25_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_wdata.bind(*p_25_m_axi_wdata);
        p_25_m_axi_wdata->set_sv_netview_offsetfromdp(12145160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_axi_wstrb.bind(*p_25_m_axi_wstrb);
        p_25_m_axi_wstrb->set_sv_netview_offsetfromdp(12145216);
        xsim_sc_channel<0, bool > *p_25_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wlast.bind(*p_25_m_axi_wlast);
        p_25_m_axi_wlast->set_sv_netview_offsetfromdp(12145272);
        xsim_sc_channel<0, bool > *p_25_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wvalid.bind(*p_25_m_axi_wvalid);
        p_25_m_axi_wvalid->set_sv_netview_offsetfromdp(12145328);
        xsim_sc_channel<0, bool > *p_25_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wready.bind(*p_25_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_bresp.bind(*p_25_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bvalid.bind(*p_25_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bready.bind(*p_25_m_axi_bready);
        p_25_m_axi_bready->set_sv_netview_offsetfromdp(12145552);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_25_m_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_25->m_axi_araddr.bind(*p_25_m_axi_araddr);
        p_25_m_axi_araddr->set_sv_netview_offsetfromdp(12145608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arlen.bind(*p_25_m_axi_arlen);
        p_25_m_axi_arlen->set_sv_netview_offsetfromdp(12145664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arburst.bind(*p_25_m_axi_arburst);
        p_25_m_axi_arburst->set_sv_netview_offsetfromdp(12145720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arlock.bind(*p_25_m_axi_arlock);
        p_25_m_axi_arlock->set_sv_netview_offsetfromdp(12145776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arcache.bind(*p_25_m_axi_arcache);
        p_25_m_axi_arcache->set_sv_netview_offsetfromdp(12145832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arprot.bind(*p_25_m_axi_arprot);
        p_25_m_axi_arprot->set_sv_netview_offsetfromdp(12145888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arqos.bind(*p_25_m_axi_arqos);
        p_25_m_axi_arqos->set_sv_netview_offsetfromdp(12145944);
        xsim_sc_channel<0, bool > *p_25_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arvalid.bind(*p_25_m_axi_arvalid);
        p_25_m_axi_arvalid->set_sv_netview_offsetfromdp(12146000);
        xsim_sc_channel<0, bool > *p_25_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arready.bind(*p_25_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_rdata.bind(*p_25_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_rresp.bind(*p_25_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rlast.bind(*p_25_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_25_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rvalid.bind(*p_25_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rready.bind(*p_25_m_axi_rready);
        p_25_m_axi_rready->set_sv_netview_offsetfromdp(12146336);
        sc_inst_26 = new bd_5dca_vip_S01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S01");
        sc_inst_26->xsim_set_dbg_index(1094);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->aresetn.bind(*p_26_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aresetn);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_26_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_26->s_axi_awaddr.bind(*p_26_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awlen.bind(*p_26_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awburst.bind(*p_26_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awlock.bind(*p_26_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awcache.bind(*p_26_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_awprot.bind(*p_26_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awqos.bind(*p_26_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_26_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awvalid.bind(*p_26_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awready.bind(*p_26_s_axi_awready);
        p_26_s_axi_awready->set_sv_netview_offsetfromdp(12147000);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->s_axi_wdata.bind(*p_26_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_wstrb.bind(*p_26_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_26_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wlast.bind(*p_26_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_26_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wvalid.bind(*p_26_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wready.bind(*p_26_s_axi_wready);
        p_26_s_axi_wready->set_sv_netview_offsetfromdp(12147280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_bresp.bind(*p_26_s_axi_bresp);
        p_26_s_axi_bresp->set_sv_netview_offsetfromdp(12147336);
        xsim_sc_channel<0, bool > *p_26_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bvalid.bind(*p_26_s_axi_bvalid);
        p_26_s_axi_bvalid->set_sv_netview_offsetfromdp(12147392);
        xsim_sc_channel<0, bool > *p_26_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bready.bind(*p_26_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_bready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_26_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_26->s_axi_araddr.bind(*p_26_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arlen.bind(*p_26_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arburst.bind(*p_26_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arlock.bind(*p_26_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arcache.bind(*p_26_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_arprot.bind(*p_26_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arqos.bind(*p_26_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_26_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arvalid.bind(*p_26_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arready.bind(*p_26_s_axi_arready);
        p_26_s_axi_arready->set_sv_netview_offsetfromdp(12147952);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->s_axi_rdata.bind(*p_26_s_axi_rdata);
        p_26_s_axi_rdata->set_sv_netview_offsetfromdp(12148008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_rresp.bind(*p_26_s_axi_rresp);
        p_26_s_axi_rresp->set_sv_netview_offsetfromdp(12148064);
        xsim_sc_channel<0, bool > *p_26_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rlast.bind(*p_26_s_axi_rlast);
        p_26_s_axi_rlast->set_sv_netview_offsetfromdp(12148120);
        xsim_sc_channel<0, bool > *p_26_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rvalid.bind(*p_26_s_axi_rvalid);
        p_26_s_axi_rvalid->set_sv_netview_offsetfromdp(12148176);
        xsim_sc_channel<0, bool > *p_26_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rready.bind(*p_26_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_26_m_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_26->m_axi_awaddr.bind(*p_26_m_axi_awaddr);
        p_26_m_axi_awaddr->set_sv_netview_offsetfromdp(12148288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awlen.bind(*p_26_m_axi_awlen);
        p_26_m_axi_awlen->set_sv_netview_offsetfromdp(12148344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awburst.bind(*p_26_m_axi_awburst);
        p_26_m_axi_awburst->set_sv_netview_offsetfromdp(12148400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awlock.bind(*p_26_m_axi_awlock);
        p_26_m_axi_awlock->set_sv_netview_offsetfromdp(12148456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awcache.bind(*p_26_m_axi_awcache);
        p_26_m_axi_awcache->set_sv_netview_offsetfromdp(12148512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_awprot.bind(*p_26_m_axi_awprot);
        p_26_m_axi_awprot->set_sv_netview_offsetfromdp(12148568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awqos.bind(*p_26_m_axi_awqos);
        p_26_m_axi_awqos->set_sv_netview_offsetfromdp(12148624);
        xsim_sc_channel<0, bool > *p_26_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awvalid.bind(*p_26_m_axi_awvalid);
        p_26_m_axi_awvalid->set_sv_netview_offsetfromdp(12148680);
        xsim_sc_channel<0, bool > *p_26_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awready.bind(*p_26_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->m_axi_wdata.bind(*p_26_m_axi_wdata);
        p_26_m_axi_wdata->set_sv_netview_offsetfromdp(12148792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_wstrb.bind(*p_26_m_axi_wstrb);
        p_26_m_axi_wstrb->set_sv_netview_offsetfromdp(12148848);
        xsim_sc_channel<0, bool > *p_26_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wlast.bind(*p_26_m_axi_wlast);
        p_26_m_axi_wlast->set_sv_netview_offsetfromdp(12148904);
        xsim_sc_channel<0, bool > *p_26_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wvalid.bind(*p_26_m_axi_wvalid);
        p_26_m_axi_wvalid->set_sv_netview_offsetfromdp(12148960);
        xsim_sc_channel<0, bool > *p_26_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wready.bind(*p_26_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_bresp.bind(*p_26_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bvalid.bind(*p_26_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bready.bind(*p_26_m_axi_bready);
        p_26_m_axi_bready->set_sv_netview_offsetfromdp(12149184);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_26_m_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_26->m_axi_araddr.bind(*p_26_m_axi_araddr);
        p_26_m_axi_araddr->set_sv_netview_offsetfromdp(12149240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arlen.bind(*p_26_m_axi_arlen);
        p_26_m_axi_arlen->set_sv_netview_offsetfromdp(12149296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arburst.bind(*p_26_m_axi_arburst);
        p_26_m_axi_arburst->set_sv_netview_offsetfromdp(12149352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arlock.bind(*p_26_m_axi_arlock);
        p_26_m_axi_arlock->set_sv_netview_offsetfromdp(12149408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arcache.bind(*p_26_m_axi_arcache);
        p_26_m_axi_arcache->set_sv_netview_offsetfromdp(12149464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_arprot.bind(*p_26_m_axi_arprot);
        p_26_m_axi_arprot->set_sv_netview_offsetfromdp(12149520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arqos.bind(*p_26_m_axi_arqos);
        p_26_m_axi_arqos->set_sv_netview_offsetfromdp(12149576);
        xsim_sc_channel<0, bool > *p_26_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arvalid.bind(*p_26_m_axi_arvalid);
        p_26_m_axi_arvalid->set_sv_netview_offsetfromdp(12149632);
        xsim_sc_channel<0, bool > *p_26_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arready.bind(*p_26_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->m_axi_rdata.bind(*p_26_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_rresp.bind(*p_26_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rlast.bind(*p_26_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_26_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rvalid.bind(*p_26_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rready.bind(*p_26_m_axi_rready);
        p_26_m_axi_rready->set_sv_netview_offsetfromdp(12149968);
        sc_inst_27 = new bd_5dca_vip_S02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S02");
        sc_inst_27->xsim_set_dbg_index(1095);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_27_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_27->s_axi_awaddr.bind(*p_27_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awlen.bind(*p_27_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awburst.bind(*p_27_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awlock.bind(*p_27_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awcache.bind(*p_27_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awprot.bind(*p_27_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awqos.bind(*p_27_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid.bind(*p_27_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready.bind(*p_27_s_axi_awready);
        p_27_s_axi_awready->set_sv_netview_offsetfromdp(12150632);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_wdata.bind(*p_27_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wstrb.bind(*p_27_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_27_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wlast.bind(*p_27_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid.bind(*p_27_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready.bind(*p_27_s_axi_wready);
        p_27_s_axi_wready->set_sv_netview_offsetfromdp(12150912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp.bind(*p_27_s_axi_bresp);
        p_27_s_axi_bresp->set_sv_netview_offsetfromdp(12150968);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid.bind(*p_27_s_axi_bvalid);
        p_27_s_axi_bvalid->set_sv_netview_offsetfromdp(12151024);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready.bind(*p_27_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_27_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_27->s_axi_araddr.bind(*p_27_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arlen.bind(*p_27_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arburst.bind(*p_27_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arlock.bind(*p_27_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arcache.bind(*p_27_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arprot.bind(*p_27_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arqos.bind(*p_27_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid.bind(*p_27_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready.bind(*p_27_s_axi_arready);
        p_27_s_axi_arready->set_sv_netview_offsetfromdp(12151584);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_rdata.bind(*p_27_s_axi_rdata);
        p_27_s_axi_rdata->set_sv_netview_offsetfromdp(12151640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp.bind(*p_27_s_axi_rresp);
        p_27_s_axi_rresp->set_sv_netview_offsetfromdp(12151696);
        xsim_sc_channel<0, bool > *p_27_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rlast.bind(*p_27_s_axi_rlast);
        p_27_s_axi_rlast->set_sv_netview_offsetfromdp(12151752);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid.bind(*p_27_s_axi_rvalid);
        p_27_s_axi_rvalid->set_sv_netview_offsetfromdp(12151808);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready.bind(*p_27_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_27_m_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_27->m_axi_awaddr.bind(*p_27_m_axi_awaddr);
        p_27_m_axi_awaddr->set_sv_netview_offsetfromdp(12151920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awlen.bind(*p_27_m_axi_awlen);
        p_27_m_axi_awlen->set_sv_netview_offsetfromdp(12151976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awburst.bind(*p_27_m_axi_awburst);
        p_27_m_axi_awburst->set_sv_netview_offsetfromdp(12152032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awlock.bind(*p_27_m_axi_awlock);
        p_27_m_axi_awlock->set_sv_netview_offsetfromdp(12152088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awcache.bind(*p_27_m_axi_awcache);
        p_27_m_axi_awcache->set_sv_netview_offsetfromdp(12152144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awprot.bind(*p_27_m_axi_awprot);
        p_27_m_axi_awprot->set_sv_netview_offsetfromdp(12152200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awqos.bind(*p_27_m_axi_awqos);
        p_27_m_axi_awqos->set_sv_netview_offsetfromdp(12152256);
        xsim_sc_channel<0, bool > *p_27_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awvalid.bind(*p_27_m_axi_awvalid);
        p_27_m_axi_awvalid->set_sv_netview_offsetfromdp(12152312);
        xsim_sc_channel<0, bool > *p_27_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awready.bind(*p_27_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_wdata.bind(*p_27_m_axi_wdata);
        p_27_m_axi_wdata->set_sv_netview_offsetfromdp(12152424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_wstrb.bind(*p_27_m_axi_wstrb);
        p_27_m_axi_wstrb->set_sv_netview_offsetfromdp(12152480);
        xsim_sc_channel<0, bool > *p_27_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wlast.bind(*p_27_m_axi_wlast);
        p_27_m_axi_wlast->set_sv_netview_offsetfromdp(12152536);
        xsim_sc_channel<0, bool > *p_27_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wvalid.bind(*p_27_m_axi_wvalid);
        p_27_m_axi_wvalid->set_sv_netview_offsetfromdp(12152592);
        xsim_sc_channel<0, bool > *p_27_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wready.bind(*p_27_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_bresp.bind(*p_27_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bvalid.bind(*p_27_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bready.bind(*p_27_m_axi_bready);
        p_27_m_axi_bready->set_sv_netview_offsetfromdp(12152816);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_27_m_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_27->m_axi_araddr.bind(*p_27_m_axi_araddr);
        p_27_m_axi_araddr->set_sv_netview_offsetfromdp(12152872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arlen.bind(*p_27_m_axi_arlen);
        p_27_m_axi_arlen->set_sv_netview_offsetfromdp(12152928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arburst.bind(*p_27_m_axi_arburst);
        p_27_m_axi_arburst->set_sv_netview_offsetfromdp(12152984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arlock.bind(*p_27_m_axi_arlock);
        p_27_m_axi_arlock->set_sv_netview_offsetfromdp(12153040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arcache.bind(*p_27_m_axi_arcache);
        p_27_m_axi_arcache->set_sv_netview_offsetfromdp(12153096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arprot.bind(*p_27_m_axi_arprot);
        p_27_m_axi_arprot->set_sv_netview_offsetfromdp(12153152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arqos.bind(*p_27_m_axi_arqos);
        p_27_m_axi_arqos->set_sv_netview_offsetfromdp(12153208);
        xsim_sc_channel<0, bool > *p_27_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arvalid.bind(*p_27_m_axi_arvalid);
        p_27_m_axi_arvalid->set_sv_netview_offsetfromdp(12153264);
        xsim_sc_channel<0, bool > *p_27_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arready.bind(*p_27_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_rdata.bind(*p_27_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_rresp.bind(*p_27_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rlast.bind(*p_27_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_27_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rvalid.bind(*p_27_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rready.bind(*p_27_m_axi_rready);
        p_27_m_axi_rready->set_sv_netview_offsetfromdp(12153600);
        sc_inst_28 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_28->xsim_set_dbg_index(49);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->dout.bind(*p_28_dout);
        p_28_dout->set_sv_netview_offsetfromdp(12322752);
        sc_inst_29 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_29->xsim_set_dbg_index(1225);
        sc_inst_30 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_30->xsim_set_dbg_index(2969);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_awid.bind(*p_30_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->S00_AXI_awaddr.bind(*p_30_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->S00_AXI_awlen.bind(*p_30_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_awsize.bind(*p_30_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_awburst.bind(*p_30_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_awlock.bind(*p_30_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_awcache.bind(*p_30_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_awprot.bind(*p_30_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_awqos.bind(*p_30_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_awuser.bind(*p_30_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_awvalid.bind(*p_30_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_awready.bind(*p_30_S00_AXI_awready);
        p_30_S00_AXI_awready->set_sv_netview_offsetfromdp(12729376);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->S00_AXI_wdata.bind(*p_30_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->S00_AXI_wstrb.bind(*p_30_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wlast.bind(*p_30_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_30_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_30->S00_AXI_wuser.bind(*p_30_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wvalid.bind(*p_30_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wready.bind(*p_30_S00_AXI_wready);
        p_30_S00_AXI_wready->set_sv_netview_offsetfromdp(12729712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_bid.bind(*p_30_S00_AXI_bid);
        p_30_S00_AXI_bid->set_sv_netview_offsetfromdp(12729768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_bresp.bind(*p_30_S00_AXI_bresp);
        p_30_S00_AXI_bresp->set_sv_netview_offsetfromdp(12729824);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_buser.bind(*p_30_S00_AXI_buser);
        p_30_S00_AXI_buser->set_sv_netview_offsetfromdp(12729880);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_bvalid.bind(*p_30_S00_AXI_bvalid);
        p_30_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12729936);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_bready.bind(*p_30_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_arid.bind(*p_30_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->S00_AXI_araddr.bind(*p_30_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->S00_AXI_arlen.bind(*p_30_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_arsize.bind(*p_30_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_arburst.bind(*p_30_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_arlock.bind(*p_30_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_arcache.bind(*p_30_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_arprot.bind(*p_30_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_arqos.bind(*p_30_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_aruser.bind(*p_30_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_arvalid.bind(*p_30_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_arready.bind(*p_30_S00_AXI_arready);
        p_30_S00_AXI_arready->set_sv_netview_offsetfromdp(12730664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_rid.bind(*p_30_S00_AXI_rid);
        p_30_S00_AXI_rid->set_sv_netview_offsetfromdp(12730720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->S00_AXI_rdata.bind(*p_30_S00_AXI_rdata);
        p_30_S00_AXI_rdata->set_sv_netview_offsetfromdp(12730776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_rresp.bind(*p_30_S00_AXI_rresp);
        p_30_S00_AXI_rresp->set_sv_netview_offsetfromdp(12730832);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rlast.bind(*p_30_S00_AXI_rlast);
        p_30_S00_AXI_rlast->set_sv_netview_offsetfromdp(12730888);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_30_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_30->S00_AXI_ruser.bind(*p_30_S00_AXI_ruser);
        p_30_S00_AXI_ruser->set_sv_netview_offsetfromdp(12730944);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rvalid.bind(*p_30_S00_AXI_rvalid);
        p_30_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12731000);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rready.bind(*p_30_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->M00_AXI_awaddr.bind(*p_30_M00_AXI_awaddr);
        p_30_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12731112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->M00_AXI_awlen.bind(*p_30_M00_AXI_awlen);
        p_30_M00_AXI_awlen->set_sv_netview_offsetfromdp(12731168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_awsize.bind(*p_30_M00_AXI_awsize);
        p_30_M00_AXI_awsize->set_sv_netview_offsetfromdp(12731224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_awburst.bind(*p_30_M00_AXI_awburst);
        p_30_M00_AXI_awburst->set_sv_netview_offsetfromdp(12731280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->M00_AXI_awlock.bind(*p_30_M00_AXI_awlock);
        p_30_M00_AXI_awlock->set_sv_netview_offsetfromdp(12731336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_awcache.bind(*p_30_M00_AXI_awcache);
        p_30_M00_AXI_awcache->set_sv_netview_offsetfromdp(12731392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_awprot.bind(*p_30_M00_AXI_awprot);
        p_30_M00_AXI_awprot->set_sv_netview_offsetfromdp(12731448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_awqos.bind(*p_30_M00_AXI_awqos);
        p_30_M00_AXI_awqos->set_sv_netview_offsetfromdp(12731504);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_awvalid.bind(*p_30_M00_AXI_awvalid);
        p_30_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12731560);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_awready.bind(*p_30_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->M00_AXI_wdata.bind(*p_30_M00_AXI_wdata);
        p_30_M00_AXI_wdata->set_sv_netview_offsetfromdp(12731672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_wstrb.bind(*p_30_M00_AXI_wstrb);
        p_30_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12731728);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wlast.bind(*p_30_M00_AXI_wlast);
        p_30_M00_AXI_wlast->set_sv_netview_offsetfromdp(12731784);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wvalid.bind(*p_30_M00_AXI_wvalid);
        p_30_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12731840);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wready.bind(*p_30_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_bresp.bind(*p_30_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_bvalid.bind(*p_30_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_bready.bind(*p_30_M00_AXI_bready);
        p_30_M00_AXI_bready->set_sv_netview_offsetfromdp(12732064);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->M00_AXI_araddr.bind(*p_30_M00_AXI_araddr);
        p_30_M00_AXI_araddr->set_sv_netview_offsetfromdp(12732120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->M00_AXI_arlen.bind(*p_30_M00_AXI_arlen);
        p_30_M00_AXI_arlen->set_sv_netview_offsetfromdp(12732176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_arsize.bind(*p_30_M00_AXI_arsize);
        p_30_M00_AXI_arsize->set_sv_netview_offsetfromdp(12732232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_arburst.bind(*p_30_M00_AXI_arburst);
        p_30_M00_AXI_arburst->set_sv_netview_offsetfromdp(12732288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->M00_AXI_arlock.bind(*p_30_M00_AXI_arlock);
        p_30_M00_AXI_arlock->set_sv_netview_offsetfromdp(12732344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_arcache.bind(*p_30_M00_AXI_arcache);
        p_30_M00_AXI_arcache->set_sv_netview_offsetfromdp(12732400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_arprot.bind(*p_30_M00_AXI_arprot);
        p_30_M00_AXI_arprot->set_sv_netview_offsetfromdp(12732456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_arqos.bind(*p_30_M00_AXI_arqos);
        p_30_M00_AXI_arqos->set_sv_netview_offsetfromdp(12732512);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_arvalid.bind(*p_30_M00_AXI_arvalid);
        p_30_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12732568);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_arready.bind(*p_30_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->M00_AXI_rdata.bind(*p_30_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_rresp.bind(*p_30_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rlast.bind(*p_30_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rvalid.bind(*p_30_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rready.bind(*p_30_M00_AXI_rready);
        p_30_M00_AXI_rready->set_sv_netview_offsetfromdp(12732904);
        sc_inst_31 = new bd_d216_interconnect_PLRAM_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem00");
        sc_inst_31->xsim_set_dbg_index(2970);
        xsim_sc_channel<0, bool > *p_31_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk.bind(*p_31_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk);
        xsim_sc_channel<0, bool > *p_31_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->aresetn.bind(*p_31_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_awid.bind(*p_31_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_31_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_31->S00_AXI_awaddr.bind(*p_31_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->S00_AXI_awlen.bind(*p_31_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_awsize.bind(*p_31_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_awburst.bind(*p_31_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_awlock.bind(*p_31_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_awcache.bind(*p_31_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_awprot.bind(*p_31_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_awqos.bind(*p_31_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_31_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_31->S00_AXI_awuser.bind(*p_31_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_awvalid.bind(*p_31_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_awready.bind(*p_31_S00_AXI_awready);
        p_31_S00_AXI_awready->set_sv_netview_offsetfromdp(12733736);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->S00_AXI_wdata.bind(*p_31_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->S00_AXI_wstrb.bind(*p_31_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wlast.bind(*p_31_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_31_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_31->S00_AXI_wuser.bind(*p_31_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wvalid.bind(*p_31_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wready.bind(*p_31_S00_AXI_wready);
        p_31_S00_AXI_wready->set_sv_netview_offsetfromdp(12734072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_bid.bind(*p_31_S00_AXI_bid);
        p_31_S00_AXI_bid->set_sv_netview_offsetfromdp(12734128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_bresp.bind(*p_31_S00_AXI_bresp);
        p_31_S00_AXI_bresp->set_sv_netview_offsetfromdp(12734184);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_31_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_31->S00_AXI_buser.bind(*p_31_S00_AXI_buser);
        p_31_S00_AXI_buser->set_sv_netview_offsetfromdp(12734240);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_bvalid.bind(*p_31_S00_AXI_bvalid);
        p_31_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12734296);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_bready.bind(*p_31_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_arid.bind(*p_31_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_31_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_31->S00_AXI_araddr.bind(*p_31_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->S00_AXI_arlen.bind(*p_31_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_arsize.bind(*p_31_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_arburst.bind(*p_31_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_arlock.bind(*p_31_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_arcache.bind(*p_31_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_arprot.bind(*p_31_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_arqos.bind(*p_31_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_31_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_31->S00_AXI_aruser.bind(*p_31_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_arvalid.bind(*p_31_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_arready.bind(*p_31_S00_AXI_arready);
        p_31_S00_AXI_arready->set_sv_netview_offsetfromdp(12735024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_rid.bind(*p_31_S00_AXI_rid);
        p_31_S00_AXI_rid->set_sv_netview_offsetfromdp(12735080);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->S00_AXI_rdata.bind(*p_31_S00_AXI_rdata);
        p_31_S00_AXI_rdata->set_sv_netview_offsetfromdp(12735136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_rresp.bind(*p_31_S00_AXI_rresp);
        p_31_S00_AXI_rresp->set_sv_netview_offsetfromdp(12735192);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rlast.bind(*p_31_S00_AXI_rlast);
        p_31_S00_AXI_rlast->set_sv_netview_offsetfromdp(12735248);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_31_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_31->S00_AXI_ruser.bind(*p_31_S00_AXI_ruser);
        p_31_S00_AXI_ruser->set_sv_netview_offsetfromdp(12735304);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rvalid.bind(*p_31_S00_AXI_rvalid);
        p_31_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12735360);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rready.bind(*p_31_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_31_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_31->M00_AXI_awaddr.bind(*p_31_M00_AXI_awaddr);
        p_31_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12735472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->M00_AXI_awlen.bind(*p_31_M00_AXI_awlen);
        p_31_M00_AXI_awlen->set_sv_netview_offsetfromdp(12735528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_awsize.bind(*p_31_M00_AXI_awsize);
        p_31_M00_AXI_awsize->set_sv_netview_offsetfromdp(12735584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_awburst.bind(*p_31_M00_AXI_awburst);
        p_31_M00_AXI_awburst->set_sv_netview_offsetfromdp(12735640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->M00_AXI_awlock.bind(*p_31_M00_AXI_awlock);
        p_31_M00_AXI_awlock->set_sv_netview_offsetfromdp(12735696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awcache.bind(*p_31_M00_AXI_awcache);
        p_31_M00_AXI_awcache->set_sv_netview_offsetfromdp(12735752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_awprot.bind(*p_31_M00_AXI_awprot);
        p_31_M00_AXI_awprot->set_sv_netview_offsetfromdp(12735808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awqos.bind(*p_31_M00_AXI_awqos);
        p_31_M00_AXI_awqos->set_sv_netview_offsetfromdp(12735864);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_awvalid.bind(*p_31_M00_AXI_awvalid);
        p_31_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12735920);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_awready.bind(*p_31_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->M00_AXI_wdata.bind(*p_31_M00_AXI_wdata);
        p_31_M00_AXI_wdata->set_sv_netview_offsetfromdp(12736032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->M00_AXI_wstrb.bind(*p_31_M00_AXI_wstrb);
        p_31_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12736088);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wlast.bind(*p_31_M00_AXI_wlast);
        p_31_M00_AXI_wlast->set_sv_netview_offsetfromdp(12736144);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wvalid.bind(*p_31_M00_AXI_wvalid);
        p_31_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12736200);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wready.bind(*p_31_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_bresp.bind(*p_31_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_bvalid.bind(*p_31_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_bready.bind(*p_31_M00_AXI_bready);
        p_31_M00_AXI_bready->set_sv_netview_offsetfromdp(12736424);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_31_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_31->M00_AXI_araddr.bind(*p_31_M00_AXI_araddr);
        p_31_M00_AXI_araddr->set_sv_netview_offsetfromdp(12736480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->M00_AXI_arlen.bind(*p_31_M00_AXI_arlen);
        p_31_M00_AXI_arlen->set_sv_netview_offsetfromdp(12736536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_arsize.bind(*p_31_M00_AXI_arsize);
        p_31_M00_AXI_arsize->set_sv_netview_offsetfromdp(12736592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_arburst.bind(*p_31_M00_AXI_arburst);
        p_31_M00_AXI_arburst->set_sv_netview_offsetfromdp(12736648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->M00_AXI_arlock.bind(*p_31_M00_AXI_arlock);
        p_31_M00_AXI_arlock->set_sv_netview_offsetfromdp(12736704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arcache.bind(*p_31_M00_AXI_arcache);
        p_31_M00_AXI_arcache->set_sv_netview_offsetfromdp(12736760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_arprot.bind(*p_31_M00_AXI_arprot);
        p_31_M00_AXI_arprot->set_sv_netview_offsetfromdp(12736816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arqos.bind(*p_31_M00_AXI_arqos);
        p_31_M00_AXI_arqos->set_sv_netview_offsetfromdp(12736872);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_arvalid.bind(*p_31_M00_AXI_arvalid);
        p_31_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12736928);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_arready.bind(*p_31_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->M00_AXI_rdata.bind(*p_31_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_rresp.bind(*p_31_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rlast.bind(*p_31_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rvalid.bind(*p_31_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rready.bind(*p_31_M00_AXI_rready);
        p_31_M00_AXI_rready->set_sv_netview_offsetfromdp(12737264);
        sc_inst_32 = new bd_d216_interconnect_PLRAM_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem01");
        sc_inst_32->xsim_set_dbg_index(2971);
        xsim_sc_channel<0, bool > *p_32_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->aclk.bind(*p_32_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aclk);
        xsim_sc_channel<0, bool > *p_32_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->aresetn.bind(*p_32_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_awid.bind(*p_32_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->S00_AXI_awaddr.bind(*p_32_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->S00_AXI_awlen.bind(*p_32_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_awsize.bind(*p_32_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_awburst.bind(*p_32_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_awlock.bind(*p_32_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_awcache.bind(*p_32_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_awprot.bind(*p_32_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_awqos.bind(*p_32_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_awuser.bind(*p_32_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_awvalid.bind(*p_32_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_awready.bind(*p_32_S00_AXI_awready);
        p_32_S00_AXI_awready->set_sv_netview_offsetfromdp(12738096);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->S00_AXI_wdata.bind(*p_32_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->S00_AXI_wstrb.bind(*p_32_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wlast.bind(*p_32_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_32_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_32->S00_AXI_wuser.bind(*p_32_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wvalid.bind(*p_32_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wready.bind(*p_32_S00_AXI_wready);
        p_32_S00_AXI_wready->set_sv_netview_offsetfromdp(12738432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_bid.bind(*p_32_S00_AXI_bid);
        p_32_S00_AXI_bid->set_sv_netview_offsetfromdp(12738488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_bresp.bind(*p_32_S00_AXI_bresp);
        p_32_S00_AXI_bresp->set_sv_netview_offsetfromdp(12738544);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_buser.bind(*p_32_S00_AXI_buser);
        p_32_S00_AXI_buser->set_sv_netview_offsetfromdp(12738600);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_bvalid.bind(*p_32_S00_AXI_bvalid);
        p_32_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12738656);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_bready.bind(*p_32_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_arid.bind(*p_32_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->S00_AXI_araddr.bind(*p_32_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->S00_AXI_arlen.bind(*p_32_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_arsize.bind(*p_32_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_arburst.bind(*p_32_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_arlock.bind(*p_32_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_arcache.bind(*p_32_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_arprot.bind(*p_32_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_arqos.bind(*p_32_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_aruser.bind(*p_32_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_arvalid.bind(*p_32_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_arready.bind(*p_32_S00_AXI_arready);
        p_32_S00_AXI_arready->set_sv_netview_offsetfromdp(12739384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_rid.bind(*p_32_S00_AXI_rid);
        p_32_S00_AXI_rid->set_sv_netview_offsetfromdp(12739440);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->S00_AXI_rdata.bind(*p_32_S00_AXI_rdata);
        p_32_S00_AXI_rdata->set_sv_netview_offsetfromdp(12739496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_rresp.bind(*p_32_S00_AXI_rresp);
        p_32_S00_AXI_rresp->set_sv_netview_offsetfromdp(12739552);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rlast.bind(*p_32_S00_AXI_rlast);
        p_32_S00_AXI_rlast->set_sv_netview_offsetfromdp(12739608);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_32_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_32->S00_AXI_ruser.bind(*p_32_S00_AXI_ruser);
        p_32_S00_AXI_ruser->set_sv_netview_offsetfromdp(12739664);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rvalid.bind(*p_32_S00_AXI_rvalid);
        p_32_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12739720);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rready.bind(*p_32_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_32_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_32->M00_AXI_awaddr.bind(*p_32_M00_AXI_awaddr);
        p_32_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12739832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->M00_AXI_awlen.bind(*p_32_M00_AXI_awlen);
        p_32_M00_AXI_awlen->set_sv_netview_offsetfromdp(12739888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_awsize.bind(*p_32_M00_AXI_awsize);
        p_32_M00_AXI_awsize->set_sv_netview_offsetfromdp(12739944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_awburst.bind(*p_32_M00_AXI_awburst);
        p_32_M00_AXI_awburst->set_sv_netview_offsetfromdp(12740000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->M00_AXI_awlock.bind(*p_32_M00_AXI_awlock);
        p_32_M00_AXI_awlock->set_sv_netview_offsetfromdp(12740056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_awcache.bind(*p_32_M00_AXI_awcache);
        p_32_M00_AXI_awcache->set_sv_netview_offsetfromdp(12740112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_awprot.bind(*p_32_M00_AXI_awprot);
        p_32_M00_AXI_awprot->set_sv_netview_offsetfromdp(12740168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_awqos.bind(*p_32_M00_AXI_awqos);
        p_32_M00_AXI_awqos->set_sv_netview_offsetfromdp(12740224);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_awvalid.bind(*p_32_M00_AXI_awvalid);
        p_32_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12740280);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_awready.bind(*p_32_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->M00_AXI_wdata.bind(*p_32_M00_AXI_wdata);
        p_32_M00_AXI_wdata->set_sv_netview_offsetfromdp(12740392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->M00_AXI_wstrb.bind(*p_32_M00_AXI_wstrb);
        p_32_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12740448);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wlast.bind(*p_32_M00_AXI_wlast);
        p_32_M00_AXI_wlast->set_sv_netview_offsetfromdp(12740504);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wvalid.bind(*p_32_M00_AXI_wvalid);
        p_32_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12740560);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wready.bind(*p_32_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_bresp.bind(*p_32_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_bvalid.bind(*p_32_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_bready.bind(*p_32_M00_AXI_bready);
        p_32_M00_AXI_bready->set_sv_netview_offsetfromdp(12740784);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_32_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_32->M00_AXI_araddr.bind(*p_32_M00_AXI_araddr);
        p_32_M00_AXI_araddr->set_sv_netview_offsetfromdp(12740840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->M00_AXI_arlen.bind(*p_32_M00_AXI_arlen);
        p_32_M00_AXI_arlen->set_sv_netview_offsetfromdp(12740896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_arsize.bind(*p_32_M00_AXI_arsize);
        p_32_M00_AXI_arsize->set_sv_netview_offsetfromdp(12740952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_arburst.bind(*p_32_M00_AXI_arburst);
        p_32_M00_AXI_arburst->set_sv_netview_offsetfromdp(12741008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->M00_AXI_arlock.bind(*p_32_M00_AXI_arlock);
        p_32_M00_AXI_arlock->set_sv_netview_offsetfromdp(12741064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_arcache.bind(*p_32_M00_AXI_arcache);
        p_32_M00_AXI_arcache->set_sv_netview_offsetfromdp(12741120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_arprot.bind(*p_32_M00_AXI_arprot);
        p_32_M00_AXI_arprot->set_sv_netview_offsetfromdp(12741176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_arqos.bind(*p_32_M00_AXI_arqos);
        p_32_M00_AXI_arqos->set_sv_netview_offsetfromdp(12741232);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_arvalid.bind(*p_32_M00_AXI_arvalid);
        p_32_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12741288);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_arready.bind(*p_32_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->M00_AXI_rdata.bind(*p_32_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_rresp.bind(*p_32_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rlast.bind(*p_32_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rvalid.bind(*p_32_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rready.bind(*p_32_M00_AXI_rready);
        p_32_M00_AXI_rready->set_sv_netview_offsetfromdp(12741624);
        sc_inst_33 = new bd_d216_interconnect_PLRAM_MEM02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem02");
        sc_inst_33->xsim_set_dbg_index(2972);
        xsim_sc_channel<0, bool > *p_33_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_33->aclk.bind(*p_33_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aclk);
        xsim_sc_channel<0, bool > *p_33_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->aresetn.bind(*p_33_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_awid.bind(*p_33_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->S00_AXI_awaddr.bind(*p_33_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->S00_AXI_awlen.bind(*p_33_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_awsize.bind(*p_33_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_awburst.bind(*p_33_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_awlock.bind(*p_33_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_awcache.bind(*p_33_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_awprot.bind(*p_33_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_awqos.bind(*p_33_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_awuser.bind(*p_33_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_awvalid.bind(*p_33_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_awready.bind(*p_33_S00_AXI_awready);
        p_33_S00_AXI_awready->set_sv_netview_offsetfromdp(12742456);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->S00_AXI_wdata.bind(*p_33_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->S00_AXI_wstrb.bind(*p_33_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wlast.bind(*p_33_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_33_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_33->S00_AXI_wuser.bind(*p_33_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wvalid.bind(*p_33_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wready.bind(*p_33_S00_AXI_wready);
        p_33_S00_AXI_wready->set_sv_netview_offsetfromdp(12742792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_bid.bind(*p_33_S00_AXI_bid);
        p_33_S00_AXI_bid->set_sv_netview_offsetfromdp(12742848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_bresp.bind(*p_33_S00_AXI_bresp);
        p_33_S00_AXI_bresp->set_sv_netview_offsetfromdp(12742904);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_buser.bind(*p_33_S00_AXI_buser);
        p_33_S00_AXI_buser->set_sv_netview_offsetfromdp(12742960);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_bvalid.bind(*p_33_S00_AXI_bvalid);
        p_33_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12743016);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_bready.bind(*p_33_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_arid.bind(*p_33_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->S00_AXI_araddr.bind(*p_33_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->S00_AXI_arlen.bind(*p_33_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_arsize.bind(*p_33_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_arburst.bind(*p_33_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_arlock.bind(*p_33_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_arcache.bind(*p_33_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_arprot.bind(*p_33_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_arqos.bind(*p_33_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_aruser.bind(*p_33_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_arvalid.bind(*p_33_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_arready.bind(*p_33_S00_AXI_arready);
        p_33_S00_AXI_arready->set_sv_netview_offsetfromdp(12743744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_rid.bind(*p_33_S00_AXI_rid);
        p_33_S00_AXI_rid->set_sv_netview_offsetfromdp(12743800);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->S00_AXI_rdata.bind(*p_33_S00_AXI_rdata);
        p_33_S00_AXI_rdata->set_sv_netview_offsetfromdp(12743856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_rresp.bind(*p_33_S00_AXI_rresp);
        p_33_S00_AXI_rresp->set_sv_netview_offsetfromdp(12743912);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rlast.bind(*p_33_S00_AXI_rlast);
        p_33_S00_AXI_rlast->set_sv_netview_offsetfromdp(12743968);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_33_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_33->S00_AXI_ruser.bind(*p_33_S00_AXI_ruser);
        p_33_S00_AXI_ruser->set_sv_netview_offsetfromdp(12744024);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rvalid.bind(*p_33_S00_AXI_rvalid);
        p_33_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12744080);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rready.bind(*p_33_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_33_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_33->M00_AXI_awaddr.bind(*p_33_M00_AXI_awaddr);
        p_33_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12744192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->M00_AXI_awlen.bind(*p_33_M00_AXI_awlen);
        p_33_M00_AXI_awlen->set_sv_netview_offsetfromdp(12744248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_awsize.bind(*p_33_M00_AXI_awsize);
        p_33_M00_AXI_awsize->set_sv_netview_offsetfromdp(12744304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_awburst.bind(*p_33_M00_AXI_awburst);
        p_33_M00_AXI_awburst->set_sv_netview_offsetfromdp(12744360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->M00_AXI_awlock.bind(*p_33_M00_AXI_awlock);
        p_33_M00_AXI_awlock->set_sv_netview_offsetfromdp(12744416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_awcache.bind(*p_33_M00_AXI_awcache);
        p_33_M00_AXI_awcache->set_sv_netview_offsetfromdp(12744472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_awprot.bind(*p_33_M00_AXI_awprot);
        p_33_M00_AXI_awprot->set_sv_netview_offsetfromdp(12744528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_awqos.bind(*p_33_M00_AXI_awqos);
        p_33_M00_AXI_awqos->set_sv_netview_offsetfromdp(12744584);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_awvalid.bind(*p_33_M00_AXI_awvalid);
        p_33_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12744640);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_awready.bind(*p_33_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->M00_AXI_wdata.bind(*p_33_M00_AXI_wdata);
        p_33_M00_AXI_wdata->set_sv_netview_offsetfromdp(12744752);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->M00_AXI_wstrb.bind(*p_33_M00_AXI_wstrb);
        p_33_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12744808);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wlast.bind(*p_33_M00_AXI_wlast);
        p_33_M00_AXI_wlast->set_sv_netview_offsetfromdp(12744864);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wvalid.bind(*p_33_M00_AXI_wvalid);
        p_33_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12744920);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wready.bind(*p_33_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_bresp.bind(*p_33_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_bvalid.bind(*p_33_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_bready.bind(*p_33_M00_AXI_bready);
        p_33_M00_AXI_bready->set_sv_netview_offsetfromdp(12745144);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_33_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_33->M00_AXI_araddr.bind(*p_33_M00_AXI_araddr);
        p_33_M00_AXI_araddr->set_sv_netview_offsetfromdp(12745200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->M00_AXI_arlen.bind(*p_33_M00_AXI_arlen);
        p_33_M00_AXI_arlen->set_sv_netview_offsetfromdp(12745256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_arsize.bind(*p_33_M00_AXI_arsize);
        p_33_M00_AXI_arsize->set_sv_netview_offsetfromdp(12745312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_arburst.bind(*p_33_M00_AXI_arburst);
        p_33_M00_AXI_arburst->set_sv_netview_offsetfromdp(12745368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->M00_AXI_arlock.bind(*p_33_M00_AXI_arlock);
        p_33_M00_AXI_arlock->set_sv_netview_offsetfromdp(12745424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_arcache.bind(*p_33_M00_AXI_arcache);
        p_33_M00_AXI_arcache->set_sv_netview_offsetfromdp(12745480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_arprot.bind(*p_33_M00_AXI_arprot);
        p_33_M00_AXI_arprot->set_sv_netview_offsetfromdp(12745536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_arqos.bind(*p_33_M00_AXI_arqos);
        p_33_M00_AXI_arqos->set_sv_netview_offsetfromdp(12745592);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_arvalid.bind(*p_33_M00_AXI_arvalid);
        p_33_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12745648);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_arready.bind(*p_33_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->M00_AXI_rdata.bind(*p_33_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_rresp.bind(*p_33_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rlast.bind(*p_33_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rvalid.bind(*p_33_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rready.bind(*p_33_M00_AXI_rready);
        p_33_M00_AXI_rready->set_sv_netview_offsetfromdp(12745984);
        sc_inst_34 = new bd_d216_interconnect_PLRAM_MEM03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem03");
        sc_inst_34->xsim_set_dbg_index(2973);
        xsim_sc_channel<0, bool > *p_34_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->aclk.bind(*p_34_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aclk);
        xsim_sc_channel<0, bool > *p_34_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->aresetn.bind(*p_34_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_awid.bind(*p_34_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_34_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_34->S00_AXI_awaddr.bind(*p_34_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->S00_AXI_awlen.bind(*p_34_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_awsize.bind(*p_34_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_awburst.bind(*p_34_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_awlock.bind(*p_34_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_awcache.bind(*p_34_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_awprot.bind(*p_34_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_awqos.bind(*p_34_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_awuser.bind(*p_34_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_awvalid.bind(*p_34_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_awready.bind(*p_34_S00_AXI_awready);
        p_34_S00_AXI_awready->set_sv_netview_offsetfromdp(12746816);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->S00_AXI_wdata.bind(*p_34_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->S00_AXI_wstrb.bind(*p_34_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wlast.bind(*p_34_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_34_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_34->S00_AXI_wuser.bind(*p_34_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wvalid.bind(*p_34_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wready.bind(*p_34_S00_AXI_wready);
        p_34_S00_AXI_wready->set_sv_netview_offsetfromdp(12747152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_bid.bind(*p_34_S00_AXI_bid);
        p_34_S00_AXI_bid->set_sv_netview_offsetfromdp(12747208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_bresp.bind(*p_34_S00_AXI_bresp);
        p_34_S00_AXI_bresp->set_sv_netview_offsetfromdp(12747264);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_buser.bind(*p_34_S00_AXI_buser);
        p_34_S00_AXI_buser->set_sv_netview_offsetfromdp(12747320);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_bvalid.bind(*p_34_S00_AXI_bvalid);
        p_34_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12747376);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_bready.bind(*p_34_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_arid.bind(*p_34_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_34_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_34->S00_AXI_araddr.bind(*p_34_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->S00_AXI_arlen.bind(*p_34_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_arsize.bind(*p_34_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_arburst.bind(*p_34_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_arlock.bind(*p_34_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_arcache.bind(*p_34_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_arprot.bind(*p_34_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_arqos.bind(*p_34_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_aruser.bind(*p_34_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_arvalid.bind(*p_34_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_arready.bind(*p_34_S00_AXI_arready);
        p_34_S00_AXI_arready->set_sv_netview_offsetfromdp(12748104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_rid.bind(*p_34_S00_AXI_rid);
        p_34_S00_AXI_rid->set_sv_netview_offsetfromdp(12748160);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->S00_AXI_rdata.bind(*p_34_S00_AXI_rdata);
        p_34_S00_AXI_rdata->set_sv_netview_offsetfromdp(12748216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_rresp.bind(*p_34_S00_AXI_rresp);
        p_34_S00_AXI_rresp->set_sv_netview_offsetfromdp(12748272);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rlast.bind(*p_34_S00_AXI_rlast);
        p_34_S00_AXI_rlast->set_sv_netview_offsetfromdp(12748328);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_34_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_34->S00_AXI_ruser.bind(*p_34_S00_AXI_ruser);
        p_34_S00_AXI_ruser->set_sv_netview_offsetfromdp(12748384);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rvalid.bind(*p_34_S00_AXI_rvalid);
        p_34_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12748440);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rready.bind(*p_34_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_34_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_34->M00_AXI_awaddr.bind(*p_34_M00_AXI_awaddr);
        p_34_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12748552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->M00_AXI_awlen.bind(*p_34_M00_AXI_awlen);
        p_34_M00_AXI_awlen->set_sv_netview_offsetfromdp(12748608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_awsize.bind(*p_34_M00_AXI_awsize);
        p_34_M00_AXI_awsize->set_sv_netview_offsetfromdp(12748664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_awburst.bind(*p_34_M00_AXI_awburst);
        p_34_M00_AXI_awburst->set_sv_netview_offsetfromdp(12748720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->M00_AXI_awlock.bind(*p_34_M00_AXI_awlock);
        p_34_M00_AXI_awlock->set_sv_netview_offsetfromdp(12748776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_awcache.bind(*p_34_M00_AXI_awcache);
        p_34_M00_AXI_awcache->set_sv_netview_offsetfromdp(12748832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_awprot.bind(*p_34_M00_AXI_awprot);
        p_34_M00_AXI_awprot->set_sv_netview_offsetfromdp(12748888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_awqos.bind(*p_34_M00_AXI_awqos);
        p_34_M00_AXI_awqos->set_sv_netview_offsetfromdp(12748944);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_awvalid.bind(*p_34_M00_AXI_awvalid);
        p_34_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12749000);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_awready.bind(*p_34_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->M00_AXI_wdata.bind(*p_34_M00_AXI_wdata);
        p_34_M00_AXI_wdata->set_sv_netview_offsetfromdp(12749112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->M00_AXI_wstrb.bind(*p_34_M00_AXI_wstrb);
        p_34_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12749168);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wlast.bind(*p_34_M00_AXI_wlast);
        p_34_M00_AXI_wlast->set_sv_netview_offsetfromdp(12749224);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wvalid.bind(*p_34_M00_AXI_wvalid);
        p_34_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12749280);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wready.bind(*p_34_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_bresp.bind(*p_34_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_bvalid.bind(*p_34_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_bready.bind(*p_34_M00_AXI_bready);
        p_34_M00_AXI_bready->set_sv_netview_offsetfromdp(12749504);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_34_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_34->M00_AXI_araddr.bind(*p_34_M00_AXI_araddr);
        p_34_M00_AXI_araddr->set_sv_netview_offsetfromdp(12749560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->M00_AXI_arlen.bind(*p_34_M00_AXI_arlen);
        p_34_M00_AXI_arlen->set_sv_netview_offsetfromdp(12749616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_arsize.bind(*p_34_M00_AXI_arsize);
        p_34_M00_AXI_arsize->set_sv_netview_offsetfromdp(12749672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_arburst.bind(*p_34_M00_AXI_arburst);
        p_34_M00_AXI_arburst->set_sv_netview_offsetfromdp(12749728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->M00_AXI_arlock.bind(*p_34_M00_AXI_arlock);
        p_34_M00_AXI_arlock->set_sv_netview_offsetfromdp(12749784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_arcache.bind(*p_34_M00_AXI_arcache);
        p_34_M00_AXI_arcache->set_sv_netview_offsetfromdp(12749840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_arprot.bind(*p_34_M00_AXI_arprot);
        p_34_M00_AXI_arprot->set_sv_netview_offsetfromdp(12749896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_arqos.bind(*p_34_M00_AXI_arqos);
        p_34_M00_AXI_arqos->set_sv_netview_offsetfromdp(12749952);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_arvalid.bind(*p_34_M00_AXI_arvalid);
        p_34_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12750008);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_arready.bind(*p_34_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->M00_AXI_rdata.bind(*p_34_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_rresp.bind(*p_34_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rlast.bind(*p_34_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rvalid.bind(*p_34_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rready.bind(*p_34_M00_AXI_rready);
        p_34_M00_AXI_rready->set_sv_netview_offsetfromdp(12750344);
        sc_inst_35 = new bd_d216_interconnect_PLRAM_MEM04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem04");
        sc_inst_35->xsim_set_dbg_index(2974);
        xsim_sc_channel<0, bool > *p_35_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_35->aclk.bind(*p_35_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aclk);
        xsim_sc_channel<0, bool > *p_35_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_35->aresetn.bind(*p_35_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awid.bind(*p_35_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->S00_AXI_awaddr.bind(*p_35_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_awlen.bind(*p_35_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awsize.bind(*p_35_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_awburst.bind(*p_35_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awlock.bind(*p_35_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awcache.bind(*p_35_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awprot.bind(*p_35_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awqos.bind(*p_35_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_awuser.bind(*p_35_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awvalid.bind(*p_35_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awready.bind(*p_35_S00_AXI_awready);
        p_35_S00_AXI_awready->set_sv_netview_offsetfromdp(12751176);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->S00_AXI_wdata.bind(*p_35_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S00_AXI_wstrb.bind(*p_35_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wlast.bind(*p_35_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->S00_AXI_wuser.bind(*p_35_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wvalid.bind(*p_35_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wready.bind(*p_35_S00_AXI_wready);
        p_35_S00_AXI_wready->set_sv_netview_offsetfromdp(12751512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_bid.bind(*p_35_S00_AXI_bid);
        p_35_S00_AXI_bid->set_sv_netview_offsetfromdp(12751568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_bresp.bind(*p_35_S00_AXI_bresp);
        p_35_S00_AXI_bresp->set_sv_netview_offsetfromdp(12751624);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_buser.bind(*p_35_S00_AXI_buser);
        p_35_S00_AXI_buser->set_sv_netview_offsetfromdp(12751680);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bvalid.bind(*p_35_S00_AXI_bvalid);
        p_35_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12751736);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bready.bind(*p_35_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arid.bind(*p_35_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->S00_AXI_araddr.bind(*p_35_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_arlen.bind(*p_35_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arsize.bind(*p_35_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_arburst.bind(*p_35_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arlock.bind(*p_35_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arcache.bind(*p_35_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arprot.bind(*p_35_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arqos.bind(*p_35_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_aruser.bind(*p_35_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arvalid.bind(*p_35_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arready.bind(*p_35_S00_AXI_arready);
        p_35_S00_AXI_arready->set_sv_netview_offsetfromdp(12752464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_rid.bind(*p_35_S00_AXI_rid);
        p_35_S00_AXI_rid->set_sv_netview_offsetfromdp(12752520);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->S00_AXI_rdata.bind(*p_35_S00_AXI_rdata);
        p_35_S00_AXI_rdata->set_sv_netview_offsetfromdp(12752576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_rresp.bind(*p_35_S00_AXI_rresp);
        p_35_S00_AXI_rresp->set_sv_netview_offsetfromdp(12752632);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rlast.bind(*p_35_S00_AXI_rlast);
        p_35_S00_AXI_rlast->set_sv_netview_offsetfromdp(12752688);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->S00_AXI_ruser.bind(*p_35_S00_AXI_ruser);
        p_35_S00_AXI_ruser->set_sv_netview_offsetfromdp(12752744);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rvalid.bind(*p_35_S00_AXI_rvalid);
        p_35_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12752800);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rready.bind(*p_35_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_35_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_35->M00_AXI_awaddr.bind(*p_35_M00_AXI_awaddr);
        p_35_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12752912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_awlen.bind(*p_35_M00_AXI_awlen);
        p_35_M00_AXI_awlen->set_sv_netview_offsetfromdp(12752968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awsize.bind(*p_35_M00_AXI_awsize);
        p_35_M00_AXI_awsize->set_sv_netview_offsetfromdp(12753024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_awburst.bind(*p_35_M00_AXI_awburst);
        p_35_M00_AXI_awburst->set_sv_netview_offsetfromdp(12753080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_awlock.bind(*p_35_M00_AXI_awlock);
        p_35_M00_AXI_awlock->set_sv_netview_offsetfromdp(12753136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awcache.bind(*p_35_M00_AXI_awcache);
        p_35_M00_AXI_awcache->set_sv_netview_offsetfromdp(12753192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awprot.bind(*p_35_M00_AXI_awprot);
        p_35_M00_AXI_awprot->set_sv_netview_offsetfromdp(12753248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awqos.bind(*p_35_M00_AXI_awqos);
        p_35_M00_AXI_awqos->set_sv_netview_offsetfromdp(12753304);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awvalid.bind(*p_35_M00_AXI_awvalid);
        p_35_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12753360);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awready.bind(*p_35_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M00_AXI_wdata.bind(*p_35_M00_AXI_wdata);
        p_35_M00_AXI_wdata->set_sv_netview_offsetfromdp(12753472);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M00_AXI_wstrb.bind(*p_35_M00_AXI_wstrb);
        p_35_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12753528);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wlast.bind(*p_35_M00_AXI_wlast);
        p_35_M00_AXI_wlast->set_sv_netview_offsetfromdp(12753584);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wvalid.bind(*p_35_M00_AXI_wvalid);
        p_35_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12753640);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wready.bind(*p_35_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_bresp.bind(*p_35_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bvalid.bind(*p_35_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bready.bind(*p_35_M00_AXI_bready);
        p_35_M00_AXI_bready->set_sv_netview_offsetfromdp(12753864);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_35_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_35->M00_AXI_araddr.bind(*p_35_M00_AXI_araddr);
        p_35_M00_AXI_araddr->set_sv_netview_offsetfromdp(12753920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_arlen.bind(*p_35_M00_AXI_arlen);
        p_35_M00_AXI_arlen->set_sv_netview_offsetfromdp(12753976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arsize.bind(*p_35_M00_AXI_arsize);
        p_35_M00_AXI_arsize->set_sv_netview_offsetfromdp(12754032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_arburst.bind(*p_35_M00_AXI_arburst);
        p_35_M00_AXI_arburst->set_sv_netview_offsetfromdp(12754088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_arlock.bind(*p_35_M00_AXI_arlock);
        p_35_M00_AXI_arlock->set_sv_netview_offsetfromdp(12754144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arcache.bind(*p_35_M00_AXI_arcache);
        p_35_M00_AXI_arcache->set_sv_netview_offsetfromdp(12754200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arprot.bind(*p_35_M00_AXI_arprot);
        p_35_M00_AXI_arprot->set_sv_netview_offsetfromdp(12754256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arqos.bind(*p_35_M00_AXI_arqos);
        p_35_M00_AXI_arqos->set_sv_netview_offsetfromdp(12754312);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arvalid.bind(*p_35_M00_AXI_arvalid);
        p_35_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12754368);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arready.bind(*p_35_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M00_AXI_rdata.bind(*p_35_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_rresp.bind(*p_35_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rlast.bind(*p_35_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rvalid.bind(*p_35_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rready.bind(*p_35_M00_AXI_rready);
        p_35_M00_AXI_rready->set_sv_netview_offsetfromdp(12754704);
        sc_inst_36 = new bd_d216_interconnect_PLRAM_MEM05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem05");
        sc_inst_36->xsim_set_dbg_index(2975);
        xsim_sc_channel<0, bool > *p_36_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk.bind(*p_36_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk);
        xsim_sc_channel<0, bool > *p_36_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_36->aresetn.bind(*p_36_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awid.bind(*p_36_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_awaddr.bind(*p_36_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_awlen.bind(*p_36_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awsize.bind(*p_36_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_awburst.bind(*p_36_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awlock.bind(*p_36_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awcache.bind(*p_36_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awprot.bind(*p_36_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awqos.bind(*p_36_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_awuser.bind(*p_36_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awvalid.bind(*p_36_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awready.bind(*p_36_S00_AXI_awready);
        p_36_S00_AXI_awready->set_sv_netview_offsetfromdp(12755536);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_wdata.bind(*p_36_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->S00_AXI_wstrb.bind(*p_36_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wlast.bind(*p_36_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_wuser.bind(*p_36_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wvalid.bind(*p_36_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wready.bind(*p_36_S00_AXI_wready);
        p_36_S00_AXI_wready->set_sv_netview_offsetfromdp(12755872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_bid.bind(*p_36_S00_AXI_bid);
        p_36_S00_AXI_bid->set_sv_netview_offsetfromdp(12755928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_bresp.bind(*p_36_S00_AXI_bresp);
        p_36_S00_AXI_bresp->set_sv_netview_offsetfromdp(12755984);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_buser.bind(*p_36_S00_AXI_buser);
        p_36_S00_AXI_buser->set_sv_netview_offsetfromdp(12756040);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bvalid.bind(*p_36_S00_AXI_bvalid);
        p_36_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12756096);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bready.bind(*p_36_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arid.bind(*p_36_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_araddr.bind(*p_36_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_arlen.bind(*p_36_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arsize.bind(*p_36_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_arburst.bind(*p_36_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arlock.bind(*p_36_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arcache.bind(*p_36_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arprot.bind(*p_36_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arqos.bind(*p_36_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_aruser.bind(*p_36_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arvalid.bind(*p_36_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arready.bind(*p_36_S00_AXI_arready);
        p_36_S00_AXI_arready->set_sv_netview_offsetfromdp(12756824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_rid.bind(*p_36_S00_AXI_rid);
        p_36_S00_AXI_rid->set_sv_netview_offsetfromdp(12756880);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_rdata.bind(*p_36_S00_AXI_rdata);
        p_36_S00_AXI_rdata->set_sv_netview_offsetfromdp(12756936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_rresp.bind(*p_36_S00_AXI_rresp);
        p_36_S00_AXI_rresp->set_sv_netview_offsetfromdp(12756992);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rlast.bind(*p_36_S00_AXI_rlast);
        p_36_S00_AXI_rlast->set_sv_netview_offsetfromdp(12757048);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_ruser.bind(*p_36_S00_AXI_ruser);
        p_36_S00_AXI_ruser->set_sv_netview_offsetfromdp(12757104);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rvalid.bind(*p_36_S00_AXI_rvalid);
        p_36_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12757160);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rready.bind(*p_36_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_36_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_36->M00_AXI_awaddr.bind(*p_36_M00_AXI_awaddr);
        p_36_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12757272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_awlen.bind(*p_36_M00_AXI_awlen);
        p_36_M00_AXI_awlen->set_sv_netview_offsetfromdp(12757328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awsize.bind(*p_36_M00_AXI_awsize);
        p_36_M00_AXI_awsize->set_sv_netview_offsetfromdp(12757384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_awburst.bind(*p_36_M00_AXI_awburst);
        p_36_M00_AXI_awburst->set_sv_netview_offsetfromdp(12757440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_awlock.bind(*p_36_M00_AXI_awlock);
        p_36_M00_AXI_awlock->set_sv_netview_offsetfromdp(12757496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awcache.bind(*p_36_M00_AXI_awcache);
        p_36_M00_AXI_awcache->set_sv_netview_offsetfromdp(12757552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awprot.bind(*p_36_M00_AXI_awprot);
        p_36_M00_AXI_awprot->set_sv_netview_offsetfromdp(12757608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awqos.bind(*p_36_M00_AXI_awqos);
        p_36_M00_AXI_awqos->set_sv_netview_offsetfromdp(12757664);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awvalid.bind(*p_36_M00_AXI_awvalid);
        p_36_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12757720);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awready.bind(*p_36_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_wdata.bind(*p_36_M00_AXI_wdata);
        p_36_M00_AXI_wdata->set_sv_netview_offsetfromdp(12757832);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M00_AXI_wstrb.bind(*p_36_M00_AXI_wstrb);
        p_36_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12757888);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wlast.bind(*p_36_M00_AXI_wlast);
        p_36_M00_AXI_wlast->set_sv_netview_offsetfromdp(12757944);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wvalid.bind(*p_36_M00_AXI_wvalid);
        p_36_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12758000);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wready.bind(*p_36_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_bresp.bind(*p_36_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bvalid.bind(*p_36_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bready.bind(*p_36_M00_AXI_bready);
        p_36_M00_AXI_bready->set_sv_netview_offsetfromdp(12758224);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_36_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_36->M00_AXI_araddr.bind(*p_36_M00_AXI_araddr);
        p_36_M00_AXI_araddr->set_sv_netview_offsetfromdp(12758280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_arlen.bind(*p_36_M00_AXI_arlen);
        p_36_M00_AXI_arlen->set_sv_netview_offsetfromdp(12758336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arsize.bind(*p_36_M00_AXI_arsize);
        p_36_M00_AXI_arsize->set_sv_netview_offsetfromdp(12758392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_arburst.bind(*p_36_M00_AXI_arburst);
        p_36_M00_AXI_arburst->set_sv_netview_offsetfromdp(12758448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_arlock.bind(*p_36_M00_AXI_arlock);
        p_36_M00_AXI_arlock->set_sv_netview_offsetfromdp(12758504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arcache.bind(*p_36_M00_AXI_arcache);
        p_36_M00_AXI_arcache->set_sv_netview_offsetfromdp(12758560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arprot.bind(*p_36_M00_AXI_arprot);
        p_36_M00_AXI_arprot->set_sv_netview_offsetfromdp(12758616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arqos.bind(*p_36_M00_AXI_arqos);
        p_36_M00_AXI_arqos->set_sv_netview_offsetfromdp(12758672);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arvalid.bind(*p_36_M00_AXI_arvalid);
        p_36_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12758728);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arready.bind(*p_36_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_rdata.bind(*p_36_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_rresp.bind(*p_36_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rlast.bind(*p_36_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rvalid.bind(*p_36_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rready.bind(*p_36_M00_AXI_rready);
        p_36_M00_AXI_rready->set_sv_netview_offsetfromdp(12759064);
        sc_inst_37 = new bd_d216_interconnect_S00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_s00_axi");
        sc_inst_37->xsim_set_dbg_index(2976);
        xsim_sc_channel<0, bool > *p_37_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk.bind(*p_37_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk);
        xsim_sc_channel<0, bool > *p_37_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->aresetn.bind(*p_37_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->S00_AXI_awaddr.bind(*p_37_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_awlen.bind(*p_37_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awsize.bind(*p_37_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_awburst.bind(*p_37_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_awlock.bind(*p_37_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awcache.bind(*p_37_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awprot.bind(*p_37_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awqos.bind(*p_37_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awvalid.bind(*p_37_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awready.bind(*p_37_S00_AXI_awready);
        p_37_S00_AXI_awready->set_sv_netview_offsetfromdp(12759784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->S00_AXI_wdata.bind(*p_37_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_wstrb.bind(*p_37_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wlast.bind(*p_37_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wvalid.bind(*p_37_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wready.bind(*p_37_S00_AXI_wready);
        p_37_S00_AXI_wready->set_sv_netview_offsetfromdp(12760064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_bresp.bind(*p_37_S00_AXI_bresp);
        p_37_S00_AXI_bresp->set_sv_netview_offsetfromdp(12760120);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bvalid.bind(*p_37_S00_AXI_bvalid);
        p_37_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12760176);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bready.bind(*p_37_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->S00_AXI_araddr.bind(*p_37_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_arlen.bind(*p_37_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arsize.bind(*p_37_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_arburst.bind(*p_37_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arlock.bind(*p_37_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arcache.bind(*p_37_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arprot.bind(*p_37_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arqos.bind(*p_37_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arvalid.bind(*p_37_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arready.bind(*p_37_S00_AXI_arready);
        p_37_S00_AXI_arready->set_sv_netview_offsetfromdp(12760792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->S00_AXI_rdata.bind(*p_37_S00_AXI_rdata);
        p_37_S00_AXI_rdata->set_sv_netview_offsetfromdp(12760848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_rresp.bind(*p_37_S00_AXI_rresp);
        p_37_S00_AXI_rresp->set_sv_netview_offsetfromdp(12760904);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rlast.bind(*p_37_S00_AXI_rlast);
        p_37_S00_AXI_rlast->set_sv_netview_offsetfromdp(12760960);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rvalid.bind(*p_37_S00_AXI_rvalid);
        p_37_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12761016);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rready.bind(*p_37_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_awid.bind(*p_37_M00_AXI_awid);
        p_37_M00_AXI_awid->set_sv_netview_offsetfromdp(12761128);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M00_AXI_awaddr.bind(*p_37_M00_AXI_awaddr);
        p_37_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12761184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_awlen.bind(*p_37_M00_AXI_awlen);
        p_37_M00_AXI_awlen->set_sv_netview_offsetfromdp(12761240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awsize.bind(*p_37_M00_AXI_awsize);
        p_37_M00_AXI_awsize->set_sv_netview_offsetfromdp(12761296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_awburst.bind(*p_37_M00_AXI_awburst);
        p_37_M00_AXI_awburst->set_sv_netview_offsetfromdp(12761352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_awlock.bind(*p_37_M00_AXI_awlock);
        p_37_M00_AXI_awlock->set_sv_netview_offsetfromdp(12761408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awcache.bind(*p_37_M00_AXI_awcache);
        p_37_M00_AXI_awcache->set_sv_netview_offsetfromdp(12761464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awprot.bind(*p_37_M00_AXI_awprot);
        p_37_M00_AXI_awprot->set_sv_netview_offsetfromdp(12761520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awqos.bind(*p_37_M00_AXI_awqos);
        p_37_M00_AXI_awqos->set_sv_netview_offsetfromdp(12761576);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M00_AXI_awuser.bind(*p_37_M00_AXI_awuser);
        p_37_M00_AXI_awuser->set_sv_netview_offsetfromdp(12761632);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awvalid.bind(*p_37_M00_AXI_awvalid);
        p_37_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12761688);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awready.bind(*p_37_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_wdata.bind(*p_37_M00_AXI_wdata);
        p_37_M00_AXI_wdata->set_sv_netview_offsetfromdp(12761800);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M00_AXI_wstrb.bind(*p_37_M00_AXI_wstrb);
        p_37_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12761856);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wlast.bind(*p_37_M00_AXI_wlast);
        p_37_M00_AXI_wlast->set_sv_netview_offsetfromdp(12761912);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M00_AXI_wuser.bind(*p_37_M00_AXI_wuser);
        p_37_M00_AXI_wuser->set_sv_netview_offsetfromdp(12761968);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wvalid.bind(*p_37_M00_AXI_wvalid);
        p_37_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12762024);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wready.bind(*p_37_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_bid.bind(*p_37_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_bresp.bind(*p_37_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M00_AXI_buser.bind(*p_37_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bvalid.bind(*p_37_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bready.bind(*p_37_M00_AXI_bready);
        p_37_M00_AXI_bready->set_sv_netview_offsetfromdp(12762360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_arid.bind(*p_37_M00_AXI_arid);
        p_37_M00_AXI_arid->set_sv_netview_offsetfromdp(12762416);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M00_AXI_araddr.bind(*p_37_M00_AXI_araddr);
        p_37_M00_AXI_araddr->set_sv_netview_offsetfromdp(12762472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_arlen.bind(*p_37_M00_AXI_arlen);
        p_37_M00_AXI_arlen->set_sv_netview_offsetfromdp(12762528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arsize.bind(*p_37_M00_AXI_arsize);
        p_37_M00_AXI_arsize->set_sv_netview_offsetfromdp(12762584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_arburst.bind(*p_37_M00_AXI_arburst);
        p_37_M00_AXI_arburst->set_sv_netview_offsetfromdp(12762640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_arlock.bind(*p_37_M00_AXI_arlock);
        p_37_M00_AXI_arlock->set_sv_netview_offsetfromdp(12762696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arcache.bind(*p_37_M00_AXI_arcache);
        p_37_M00_AXI_arcache->set_sv_netview_offsetfromdp(12762752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arprot.bind(*p_37_M00_AXI_arprot);
        p_37_M00_AXI_arprot->set_sv_netview_offsetfromdp(12762808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arqos.bind(*p_37_M00_AXI_arqos);
        p_37_M00_AXI_arqos->set_sv_netview_offsetfromdp(12762864);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M00_AXI_aruser.bind(*p_37_M00_AXI_aruser);
        p_37_M00_AXI_aruser->set_sv_netview_offsetfromdp(12762920);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arvalid.bind(*p_37_M00_AXI_arvalid);
        p_37_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12762976);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arready.bind(*p_37_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_rid.bind(*p_37_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_rdata.bind(*p_37_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_rresp.bind(*p_37_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rlast.bind(*p_37_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M00_AXI_ruser.bind(*p_37_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_ruser);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rvalid.bind(*p_37_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rready.bind(*p_37_M00_AXI_rready);
        p_37_M00_AXI_rready->set_sv_netview_offsetfromdp(12763424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M01_AXI_awid.bind(*p_37_M01_AXI_awid);
        p_37_M01_AXI_awid->set_sv_netview_offsetfromdp(12763480);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M01_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M01_AXI_awaddr.bind(*p_37_M01_AXI_awaddr);
        p_37_M01_AXI_awaddr->set_sv_netview_offsetfromdp(12763536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M01_AXI_awlen.bind(*p_37_M01_AXI_awlen);
        p_37_M01_AXI_awlen->set_sv_netview_offsetfromdp(12763592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M01_AXI_awsize.bind(*p_37_M01_AXI_awsize);
        p_37_M01_AXI_awsize->set_sv_netview_offsetfromdp(12763648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M01_AXI_awburst.bind(*p_37_M01_AXI_awburst);
        p_37_M01_AXI_awburst->set_sv_netview_offsetfromdp(12763704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M01_AXI_awlock.bind(*p_37_M01_AXI_awlock);
        p_37_M01_AXI_awlock->set_sv_netview_offsetfromdp(12763760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M01_AXI_awcache.bind(*p_37_M01_AXI_awcache);
        p_37_M01_AXI_awcache->set_sv_netview_offsetfromdp(12763816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M01_AXI_awprot.bind(*p_37_M01_AXI_awprot);
        p_37_M01_AXI_awprot->set_sv_netview_offsetfromdp(12763872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M01_AXI_awqos.bind(*p_37_M01_AXI_awqos);
        p_37_M01_AXI_awqos->set_sv_netview_offsetfromdp(12763928);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M01_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M01_AXI_awuser.bind(*p_37_M01_AXI_awuser);
        p_37_M01_AXI_awuser->set_sv_netview_offsetfromdp(12763984);
        xsim_sc_channel<0, bool > *p_37_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M01_AXI_awvalid.bind(*p_37_M01_AXI_awvalid);
        p_37_M01_AXI_awvalid->set_sv_netview_offsetfromdp(12764040);
        xsim_sc_channel<0, bool > *p_37_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M01_AXI_awready.bind(*p_37_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M01_AXI_wdata.bind(*p_37_M01_AXI_wdata);
        p_37_M01_AXI_wdata->set_sv_netview_offsetfromdp(12764152);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M01_AXI_wstrb.bind(*p_37_M01_AXI_wstrb);
        p_37_M01_AXI_wstrb->set_sv_netview_offsetfromdp(12764208);
        xsim_sc_channel<0, bool > *p_37_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M01_AXI_wlast.bind(*p_37_M01_AXI_wlast);
        p_37_M01_AXI_wlast->set_sv_netview_offsetfromdp(12764264);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M01_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M01_AXI_wuser.bind(*p_37_M01_AXI_wuser);
        p_37_M01_AXI_wuser->set_sv_netview_offsetfromdp(12764320);
        xsim_sc_channel<0, bool > *p_37_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M01_AXI_wvalid.bind(*p_37_M01_AXI_wvalid);
        p_37_M01_AXI_wvalid->set_sv_netview_offsetfromdp(12764376);
        xsim_sc_channel<0, bool > *p_37_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M01_AXI_wready.bind(*p_37_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M01_AXI_bid.bind(*p_37_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M01_AXI_bresp.bind(*p_37_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M01_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M01_AXI_buser.bind(*p_37_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_37_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M01_AXI_bvalid.bind(*p_37_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M01_AXI_bready.bind(*p_37_M01_AXI_bready);
        p_37_M01_AXI_bready->set_sv_netview_offsetfromdp(12764712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M01_AXI_arid.bind(*p_37_M01_AXI_arid);
        p_37_M01_AXI_arid->set_sv_netview_offsetfromdp(12764768);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M01_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M01_AXI_araddr.bind(*p_37_M01_AXI_araddr);
        p_37_M01_AXI_araddr->set_sv_netview_offsetfromdp(12764824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M01_AXI_arlen.bind(*p_37_M01_AXI_arlen);
        p_37_M01_AXI_arlen->set_sv_netview_offsetfromdp(12764880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M01_AXI_arsize.bind(*p_37_M01_AXI_arsize);
        p_37_M01_AXI_arsize->set_sv_netview_offsetfromdp(12764936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M01_AXI_arburst.bind(*p_37_M01_AXI_arburst);
        p_37_M01_AXI_arburst->set_sv_netview_offsetfromdp(12764992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M01_AXI_arlock.bind(*p_37_M01_AXI_arlock);
        p_37_M01_AXI_arlock->set_sv_netview_offsetfromdp(12765048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M01_AXI_arcache.bind(*p_37_M01_AXI_arcache);
        p_37_M01_AXI_arcache->set_sv_netview_offsetfromdp(12765104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M01_AXI_arprot.bind(*p_37_M01_AXI_arprot);
        p_37_M01_AXI_arprot->set_sv_netview_offsetfromdp(12765160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M01_AXI_arqos.bind(*p_37_M01_AXI_arqos);
        p_37_M01_AXI_arqos->set_sv_netview_offsetfromdp(12765216);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M01_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M01_AXI_aruser.bind(*p_37_M01_AXI_aruser);
        p_37_M01_AXI_aruser->set_sv_netview_offsetfromdp(12765272);
        xsim_sc_channel<0, bool > *p_37_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M01_AXI_arvalid.bind(*p_37_M01_AXI_arvalid);
        p_37_M01_AXI_arvalid->set_sv_netview_offsetfromdp(12765328);
        xsim_sc_channel<0, bool > *p_37_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M01_AXI_arready.bind(*p_37_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M01_AXI_rid.bind(*p_37_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M01_AXI_rdata.bind(*p_37_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M01_AXI_rresp.bind(*p_37_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M01_AXI_rlast.bind(*p_37_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M01_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M01_AXI_ruser.bind(*p_37_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_ruser);
        xsim_sc_channel<0, bool > *p_37_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M01_AXI_rvalid.bind(*p_37_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M01_AXI_rready.bind(*p_37_M01_AXI_rready);
        p_37_M01_AXI_rready->set_sv_netview_offsetfromdp(12765776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M02_AXI_awid.bind(*p_37_M02_AXI_awid);
        p_37_M02_AXI_awid->set_sv_netview_offsetfromdp(12765832);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M02_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M02_AXI_awaddr.bind(*p_37_M02_AXI_awaddr);
        p_37_M02_AXI_awaddr->set_sv_netview_offsetfromdp(12765888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M02_AXI_awlen.bind(*p_37_M02_AXI_awlen);
        p_37_M02_AXI_awlen->set_sv_netview_offsetfromdp(12765944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M02_AXI_awsize.bind(*p_37_M02_AXI_awsize);
        p_37_M02_AXI_awsize->set_sv_netview_offsetfromdp(12766000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M02_AXI_awburst.bind(*p_37_M02_AXI_awburst);
        p_37_M02_AXI_awburst->set_sv_netview_offsetfromdp(12766056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M02_AXI_awlock.bind(*p_37_M02_AXI_awlock);
        p_37_M02_AXI_awlock->set_sv_netview_offsetfromdp(12766112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M02_AXI_awcache.bind(*p_37_M02_AXI_awcache);
        p_37_M02_AXI_awcache->set_sv_netview_offsetfromdp(12766168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M02_AXI_awprot.bind(*p_37_M02_AXI_awprot);
        p_37_M02_AXI_awprot->set_sv_netview_offsetfromdp(12766224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M02_AXI_awqos.bind(*p_37_M02_AXI_awqos);
        p_37_M02_AXI_awqos->set_sv_netview_offsetfromdp(12766280);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M02_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M02_AXI_awuser.bind(*p_37_M02_AXI_awuser);
        p_37_M02_AXI_awuser->set_sv_netview_offsetfromdp(12766336);
        xsim_sc_channel<0, bool > *p_37_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M02_AXI_awvalid.bind(*p_37_M02_AXI_awvalid);
        p_37_M02_AXI_awvalid->set_sv_netview_offsetfromdp(12766392);
        xsim_sc_channel<0, bool > *p_37_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M02_AXI_awready.bind(*p_37_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M02_AXI_wdata.bind(*p_37_M02_AXI_wdata);
        p_37_M02_AXI_wdata->set_sv_netview_offsetfromdp(12766504);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M02_AXI_wstrb.bind(*p_37_M02_AXI_wstrb);
        p_37_M02_AXI_wstrb->set_sv_netview_offsetfromdp(12766560);
        xsim_sc_channel<0, bool > *p_37_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M02_AXI_wlast.bind(*p_37_M02_AXI_wlast);
        p_37_M02_AXI_wlast->set_sv_netview_offsetfromdp(12766616);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M02_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M02_AXI_wuser.bind(*p_37_M02_AXI_wuser);
        p_37_M02_AXI_wuser->set_sv_netview_offsetfromdp(12766672);
        xsim_sc_channel<0, bool > *p_37_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M02_AXI_wvalid.bind(*p_37_M02_AXI_wvalid);
        p_37_M02_AXI_wvalid->set_sv_netview_offsetfromdp(12766728);
        xsim_sc_channel<0, bool > *p_37_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M02_AXI_wready.bind(*p_37_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M02_AXI_bid.bind(*p_37_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M02_AXI_bresp.bind(*p_37_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M02_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M02_AXI_buser.bind(*p_37_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_37_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M02_AXI_bvalid.bind(*p_37_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M02_AXI_bready.bind(*p_37_M02_AXI_bready);
        p_37_M02_AXI_bready->set_sv_netview_offsetfromdp(12767064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M02_AXI_arid.bind(*p_37_M02_AXI_arid);
        p_37_M02_AXI_arid->set_sv_netview_offsetfromdp(12767120);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M02_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M02_AXI_araddr.bind(*p_37_M02_AXI_araddr);
        p_37_M02_AXI_araddr->set_sv_netview_offsetfromdp(12767176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M02_AXI_arlen.bind(*p_37_M02_AXI_arlen);
        p_37_M02_AXI_arlen->set_sv_netview_offsetfromdp(12767232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M02_AXI_arsize.bind(*p_37_M02_AXI_arsize);
        p_37_M02_AXI_arsize->set_sv_netview_offsetfromdp(12767288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M02_AXI_arburst.bind(*p_37_M02_AXI_arburst);
        p_37_M02_AXI_arburst->set_sv_netview_offsetfromdp(12767344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M02_AXI_arlock.bind(*p_37_M02_AXI_arlock);
        p_37_M02_AXI_arlock->set_sv_netview_offsetfromdp(12767400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M02_AXI_arcache.bind(*p_37_M02_AXI_arcache);
        p_37_M02_AXI_arcache->set_sv_netview_offsetfromdp(12767456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M02_AXI_arprot.bind(*p_37_M02_AXI_arprot);
        p_37_M02_AXI_arprot->set_sv_netview_offsetfromdp(12767512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M02_AXI_arqos.bind(*p_37_M02_AXI_arqos);
        p_37_M02_AXI_arqos->set_sv_netview_offsetfromdp(12767568);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M02_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M02_AXI_aruser.bind(*p_37_M02_AXI_aruser);
        p_37_M02_AXI_aruser->set_sv_netview_offsetfromdp(12767624);
        xsim_sc_channel<0, bool > *p_37_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M02_AXI_arvalid.bind(*p_37_M02_AXI_arvalid);
        p_37_M02_AXI_arvalid->set_sv_netview_offsetfromdp(12767680);
        xsim_sc_channel<0, bool > *p_37_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M02_AXI_arready.bind(*p_37_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M02_AXI_rid.bind(*p_37_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M02_AXI_rdata.bind(*p_37_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M02_AXI_rresp.bind(*p_37_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M02_AXI_rlast.bind(*p_37_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M02_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M02_AXI_ruser.bind(*p_37_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_ruser);
        xsim_sc_channel<0, bool > *p_37_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M02_AXI_rvalid.bind(*p_37_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M02_AXI_rready.bind(*p_37_M02_AXI_rready);
        p_37_M02_AXI_rready->set_sv_netview_offsetfromdp(12768128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M03_AXI_awid.bind(*p_37_M03_AXI_awid);
        p_37_M03_AXI_awid->set_sv_netview_offsetfromdp(12768184);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M03_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M03_AXI_awaddr.bind(*p_37_M03_AXI_awaddr);
        p_37_M03_AXI_awaddr->set_sv_netview_offsetfromdp(12768240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M03_AXI_awlen.bind(*p_37_M03_AXI_awlen);
        p_37_M03_AXI_awlen->set_sv_netview_offsetfromdp(12768296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M03_AXI_awsize.bind(*p_37_M03_AXI_awsize);
        p_37_M03_AXI_awsize->set_sv_netview_offsetfromdp(12768352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M03_AXI_awburst.bind(*p_37_M03_AXI_awburst);
        p_37_M03_AXI_awburst->set_sv_netview_offsetfromdp(12768408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M03_AXI_awlock.bind(*p_37_M03_AXI_awlock);
        p_37_M03_AXI_awlock->set_sv_netview_offsetfromdp(12768464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M03_AXI_awcache.bind(*p_37_M03_AXI_awcache);
        p_37_M03_AXI_awcache->set_sv_netview_offsetfromdp(12768520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M03_AXI_awprot.bind(*p_37_M03_AXI_awprot);
        p_37_M03_AXI_awprot->set_sv_netview_offsetfromdp(12768576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M03_AXI_awqos.bind(*p_37_M03_AXI_awqos);
        p_37_M03_AXI_awqos->set_sv_netview_offsetfromdp(12768632);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M03_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M03_AXI_awuser.bind(*p_37_M03_AXI_awuser);
        p_37_M03_AXI_awuser->set_sv_netview_offsetfromdp(12768688);
        xsim_sc_channel<0, bool > *p_37_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M03_AXI_awvalid.bind(*p_37_M03_AXI_awvalid);
        p_37_M03_AXI_awvalid->set_sv_netview_offsetfromdp(12768744);
        xsim_sc_channel<0, bool > *p_37_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M03_AXI_awready.bind(*p_37_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M03_AXI_wdata.bind(*p_37_M03_AXI_wdata);
        p_37_M03_AXI_wdata->set_sv_netview_offsetfromdp(12768856);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M03_AXI_wstrb.bind(*p_37_M03_AXI_wstrb);
        p_37_M03_AXI_wstrb->set_sv_netview_offsetfromdp(12768912);
        xsim_sc_channel<0, bool > *p_37_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M03_AXI_wlast.bind(*p_37_M03_AXI_wlast);
        p_37_M03_AXI_wlast->set_sv_netview_offsetfromdp(12768968);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M03_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M03_AXI_wuser.bind(*p_37_M03_AXI_wuser);
        p_37_M03_AXI_wuser->set_sv_netview_offsetfromdp(12769024);
        xsim_sc_channel<0, bool > *p_37_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M03_AXI_wvalid.bind(*p_37_M03_AXI_wvalid);
        p_37_M03_AXI_wvalid->set_sv_netview_offsetfromdp(12769080);
        xsim_sc_channel<0, bool > *p_37_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M03_AXI_wready.bind(*p_37_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M03_AXI_bid.bind(*p_37_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M03_AXI_bresp.bind(*p_37_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M03_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M03_AXI_buser.bind(*p_37_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_37_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M03_AXI_bvalid.bind(*p_37_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M03_AXI_bready.bind(*p_37_M03_AXI_bready);
        p_37_M03_AXI_bready->set_sv_netview_offsetfromdp(12769416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M03_AXI_arid.bind(*p_37_M03_AXI_arid);
        p_37_M03_AXI_arid->set_sv_netview_offsetfromdp(12769472);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M03_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M03_AXI_araddr.bind(*p_37_M03_AXI_araddr);
        p_37_M03_AXI_araddr->set_sv_netview_offsetfromdp(12769528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M03_AXI_arlen.bind(*p_37_M03_AXI_arlen);
        p_37_M03_AXI_arlen->set_sv_netview_offsetfromdp(12769584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M03_AXI_arsize.bind(*p_37_M03_AXI_arsize);
        p_37_M03_AXI_arsize->set_sv_netview_offsetfromdp(12769640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M03_AXI_arburst.bind(*p_37_M03_AXI_arburst);
        p_37_M03_AXI_arburst->set_sv_netview_offsetfromdp(12769696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M03_AXI_arlock.bind(*p_37_M03_AXI_arlock);
        p_37_M03_AXI_arlock->set_sv_netview_offsetfromdp(12769752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M03_AXI_arcache.bind(*p_37_M03_AXI_arcache);
        p_37_M03_AXI_arcache->set_sv_netview_offsetfromdp(12769808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M03_AXI_arprot.bind(*p_37_M03_AXI_arprot);
        p_37_M03_AXI_arprot->set_sv_netview_offsetfromdp(12769864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M03_AXI_arqos.bind(*p_37_M03_AXI_arqos);
        p_37_M03_AXI_arqos->set_sv_netview_offsetfromdp(12769920);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M03_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M03_AXI_aruser.bind(*p_37_M03_AXI_aruser);
        p_37_M03_AXI_aruser->set_sv_netview_offsetfromdp(12769976);
        xsim_sc_channel<0, bool > *p_37_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M03_AXI_arvalid.bind(*p_37_M03_AXI_arvalid);
        p_37_M03_AXI_arvalid->set_sv_netview_offsetfromdp(12770032);
        xsim_sc_channel<0, bool > *p_37_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M03_AXI_arready.bind(*p_37_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M03_AXI_rid.bind(*p_37_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M03_AXI_rdata.bind(*p_37_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M03_AXI_rresp.bind(*p_37_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M03_AXI_rlast.bind(*p_37_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M03_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M03_AXI_ruser.bind(*p_37_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_ruser);
        xsim_sc_channel<0, bool > *p_37_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M03_AXI_rvalid.bind(*p_37_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M03_AXI_rready.bind(*p_37_M03_AXI_rready);
        p_37_M03_AXI_rready->set_sv_netview_offsetfromdp(12770480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M04_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M04_AXI_awid.bind(*p_37_M04_AXI_awid);
        p_37_M04_AXI_awid->set_sv_netview_offsetfromdp(12770536);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M04_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M04_AXI_awaddr.bind(*p_37_M04_AXI_awaddr);
        p_37_M04_AXI_awaddr->set_sv_netview_offsetfromdp(12770592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M04_AXI_awlen.bind(*p_37_M04_AXI_awlen);
        p_37_M04_AXI_awlen->set_sv_netview_offsetfromdp(12770648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M04_AXI_awsize.bind(*p_37_M04_AXI_awsize);
        p_37_M04_AXI_awsize->set_sv_netview_offsetfromdp(12770704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M04_AXI_awburst.bind(*p_37_M04_AXI_awburst);
        p_37_M04_AXI_awburst->set_sv_netview_offsetfromdp(12770760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M04_AXI_awlock.bind(*p_37_M04_AXI_awlock);
        p_37_M04_AXI_awlock->set_sv_netview_offsetfromdp(12770816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M04_AXI_awcache.bind(*p_37_M04_AXI_awcache);
        p_37_M04_AXI_awcache->set_sv_netview_offsetfromdp(12770872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M04_AXI_awprot.bind(*p_37_M04_AXI_awprot);
        p_37_M04_AXI_awprot->set_sv_netview_offsetfromdp(12770928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M04_AXI_awqos.bind(*p_37_M04_AXI_awqos);
        p_37_M04_AXI_awqos->set_sv_netview_offsetfromdp(12770984);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M04_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M04_AXI_awuser.bind(*p_37_M04_AXI_awuser);
        p_37_M04_AXI_awuser->set_sv_netview_offsetfromdp(12771040);
        xsim_sc_channel<0, bool > *p_37_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M04_AXI_awvalid.bind(*p_37_M04_AXI_awvalid);
        p_37_M04_AXI_awvalid->set_sv_netview_offsetfromdp(12771096);
        xsim_sc_channel<0, bool > *p_37_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M04_AXI_awready.bind(*p_37_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M04_AXI_wdata.bind(*p_37_M04_AXI_wdata);
        p_37_M04_AXI_wdata->set_sv_netview_offsetfromdp(12771208);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M04_AXI_wstrb.bind(*p_37_M04_AXI_wstrb);
        p_37_M04_AXI_wstrb->set_sv_netview_offsetfromdp(12771264);
        xsim_sc_channel<0, bool > *p_37_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M04_AXI_wlast.bind(*p_37_M04_AXI_wlast);
        p_37_M04_AXI_wlast->set_sv_netview_offsetfromdp(12771320);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M04_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M04_AXI_wuser.bind(*p_37_M04_AXI_wuser);
        p_37_M04_AXI_wuser->set_sv_netview_offsetfromdp(12771376);
        xsim_sc_channel<0, bool > *p_37_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M04_AXI_wvalid.bind(*p_37_M04_AXI_wvalid);
        p_37_M04_AXI_wvalid->set_sv_netview_offsetfromdp(12771432);
        xsim_sc_channel<0, bool > *p_37_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M04_AXI_wready.bind(*p_37_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M04_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M04_AXI_bid.bind(*p_37_M04_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M04_AXI_bresp.bind(*p_37_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M04_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M04_AXI_buser.bind(*p_37_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_37_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M04_AXI_bvalid.bind(*p_37_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M04_AXI_bready.bind(*p_37_M04_AXI_bready);
        p_37_M04_AXI_bready->set_sv_netview_offsetfromdp(12771768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M04_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M04_AXI_arid.bind(*p_37_M04_AXI_arid);
        p_37_M04_AXI_arid->set_sv_netview_offsetfromdp(12771824);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M04_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M04_AXI_araddr.bind(*p_37_M04_AXI_araddr);
        p_37_M04_AXI_araddr->set_sv_netview_offsetfromdp(12771880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M04_AXI_arlen.bind(*p_37_M04_AXI_arlen);
        p_37_M04_AXI_arlen->set_sv_netview_offsetfromdp(12771936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M04_AXI_arsize.bind(*p_37_M04_AXI_arsize);
        p_37_M04_AXI_arsize->set_sv_netview_offsetfromdp(12771992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M04_AXI_arburst.bind(*p_37_M04_AXI_arburst);
        p_37_M04_AXI_arburst->set_sv_netview_offsetfromdp(12772048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M04_AXI_arlock.bind(*p_37_M04_AXI_arlock);
        p_37_M04_AXI_arlock->set_sv_netview_offsetfromdp(12772104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M04_AXI_arcache.bind(*p_37_M04_AXI_arcache);
        p_37_M04_AXI_arcache->set_sv_netview_offsetfromdp(12772160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M04_AXI_arprot.bind(*p_37_M04_AXI_arprot);
        p_37_M04_AXI_arprot->set_sv_netview_offsetfromdp(12772216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M04_AXI_arqos.bind(*p_37_M04_AXI_arqos);
        p_37_M04_AXI_arqos->set_sv_netview_offsetfromdp(12772272);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M04_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M04_AXI_aruser.bind(*p_37_M04_AXI_aruser);
        p_37_M04_AXI_aruser->set_sv_netview_offsetfromdp(12772328);
        xsim_sc_channel<0, bool > *p_37_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M04_AXI_arvalid.bind(*p_37_M04_AXI_arvalid);
        p_37_M04_AXI_arvalid->set_sv_netview_offsetfromdp(12772384);
        xsim_sc_channel<0, bool > *p_37_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M04_AXI_arready.bind(*p_37_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M04_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M04_AXI_rid.bind(*p_37_M04_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M04_AXI_rdata.bind(*p_37_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M04_AXI_rresp.bind(*p_37_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M04_AXI_rlast.bind(*p_37_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M04_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M04_AXI_ruser.bind(*p_37_M04_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_ruser);
        xsim_sc_channel<0, bool > *p_37_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M04_AXI_rvalid.bind(*p_37_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M04_AXI_rready.bind(*p_37_M04_AXI_rready);
        p_37_M04_AXI_rready->set_sv_netview_offsetfromdp(12772832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M05_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M05_AXI_awid.bind(*p_37_M05_AXI_awid);
        p_37_M05_AXI_awid->set_sv_netview_offsetfromdp(12772888);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M05_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M05_AXI_awaddr.bind(*p_37_M05_AXI_awaddr);
        p_37_M05_AXI_awaddr->set_sv_netview_offsetfromdp(12772944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M05_AXI_awlen.bind(*p_37_M05_AXI_awlen);
        p_37_M05_AXI_awlen->set_sv_netview_offsetfromdp(12773000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M05_AXI_awsize.bind(*p_37_M05_AXI_awsize);
        p_37_M05_AXI_awsize->set_sv_netview_offsetfromdp(12773056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M05_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M05_AXI_awburst.bind(*p_37_M05_AXI_awburst);
        p_37_M05_AXI_awburst->set_sv_netview_offsetfromdp(12773112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M05_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M05_AXI_awlock.bind(*p_37_M05_AXI_awlock);
        p_37_M05_AXI_awlock->set_sv_netview_offsetfromdp(12773168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M05_AXI_awcache.bind(*p_37_M05_AXI_awcache);
        p_37_M05_AXI_awcache->set_sv_netview_offsetfromdp(12773224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M05_AXI_awprot.bind(*p_37_M05_AXI_awprot);
        p_37_M05_AXI_awprot->set_sv_netview_offsetfromdp(12773280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M05_AXI_awqos.bind(*p_37_M05_AXI_awqos);
        p_37_M05_AXI_awqos->set_sv_netview_offsetfromdp(12773336);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M05_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M05_AXI_awuser.bind(*p_37_M05_AXI_awuser);
        p_37_M05_AXI_awuser->set_sv_netview_offsetfromdp(12773392);
        xsim_sc_channel<0, bool > *p_37_M05_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M05_AXI_awvalid.bind(*p_37_M05_AXI_awvalid);
        p_37_M05_AXI_awvalid->set_sv_netview_offsetfromdp(12773448);
        xsim_sc_channel<0, bool > *p_37_M05_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M05_AXI_awready.bind(*p_37_M05_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M05_AXI_wdata.bind(*p_37_M05_AXI_wdata);
        p_37_M05_AXI_wdata->set_sv_netview_offsetfromdp(12773560);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M05_AXI_wstrb.bind(*p_37_M05_AXI_wstrb);
        p_37_M05_AXI_wstrb->set_sv_netview_offsetfromdp(12773616);
        xsim_sc_channel<0, bool > *p_37_M05_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M05_AXI_wlast.bind(*p_37_M05_AXI_wlast);
        p_37_M05_AXI_wlast->set_sv_netview_offsetfromdp(12773672);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M05_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M05_AXI_wuser.bind(*p_37_M05_AXI_wuser);
        p_37_M05_AXI_wuser->set_sv_netview_offsetfromdp(12773728);
        xsim_sc_channel<0, bool > *p_37_M05_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M05_AXI_wvalid.bind(*p_37_M05_AXI_wvalid);
        p_37_M05_AXI_wvalid->set_sv_netview_offsetfromdp(12773784);
        xsim_sc_channel<0, bool > *p_37_M05_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M05_AXI_wready.bind(*p_37_M05_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M05_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M05_AXI_bid.bind(*p_37_M05_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M05_AXI_bresp.bind(*p_37_M05_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M05_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M05_AXI_buser.bind(*p_37_M05_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_buser);
        xsim_sc_channel<0, bool > *p_37_M05_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M05_AXI_bvalid.bind(*p_37_M05_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M05_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M05_AXI_bready.bind(*p_37_M05_AXI_bready);
        p_37_M05_AXI_bready->set_sv_netview_offsetfromdp(12774120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M05_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M05_AXI_arid.bind(*p_37_M05_AXI_arid);
        p_37_M05_AXI_arid->set_sv_netview_offsetfromdp(12774176);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M05_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M05_AXI_araddr.bind(*p_37_M05_AXI_araddr);
        p_37_M05_AXI_araddr->set_sv_netview_offsetfromdp(12774232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M05_AXI_arlen.bind(*p_37_M05_AXI_arlen);
        p_37_M05_AXI_arlen->set_sv_netview_offsetfromdp(12774288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M05_AXI_arsize.bind(*p_37_M05_AXI_arsize);
        p_37_M05_AXI_arsize->set_sv_netview_offsetfromdp(12774344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M05_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M05_AXI_arburst.bind(*p_37_M05_AXI_arburst);
        p_37_M05_AXI_arburst->set_sv_netview_offsetfromdp(12774400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M05_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M05_AXI_arlock.bind(*p_37_M05_AXI_arlock);
        p_37_M05_AXI_arlock->set_sv_netview_offsetfromdp(12774456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M05_AXI_arcache.bind(*p_37_M05_AXI_arcache);
        p_37_M05_AXI_arcache->set_sv_netview_offsetfromdp(12774512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M05_AXI_arprot.bind(*p_37_M05_AXI_arprot);
        p_37_M05_AXI_arprot->set_sv_netview_offsetfromdp(12774568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M05_AXI_arqos.bind(*p_37_M05_AXI_arqos);
        p_37_M05_AXI_arqos->set_sv_netview_offsetfromdp(12774624);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M05_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M05_AXI_aruser.bind(*p_37_M05_AXI_aruser);
        p_37_M05_AXI_aruser->set_sv_netview_offsetfromdp(12774680);
        xsim_sc_channel<0, bool > *p_37_M05_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M05_AXI_arvalid.bind(*p_37_M05_AXI_arvalid);
        p_37_M05_AXI_arvalid->set_sv_netview_offsetfromdp(12774736);
        xsim_sc_channel<0, bool > *p_37_M05_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M05_AXI_arready.bind(*p_37_M05_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M05_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M05_AXI_rid.bind(*p_37_M05_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M05_AXI_rdata.bind(*p_37_M05_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M05_AXI_rresp.bind(*p_37_M05_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M05_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M05_AXI_rlast.bind(*p_37_M05_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M05_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M05_AXI_ruser.bind(*p_37_M05_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_ruser);
        xsim_sc_channel<0, bool > *p_37_M05_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M05_AXI_rvalid.bind(*p_37_M05_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M05_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M05_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M05_AXI_rready.bind(*p_37_M05_AXI_rready);
        p_37_M05_AXI_rready->set_sv_netview_offsetfromdp(12775184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M06_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M06_AXI_awid.bind(*p_37_M06_AXI_awid);
        p_37_M06_AXI_awid->set_sv_netview_offsetfromdp(12775240);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M06_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M06_AXI_awaddr.bind(*p_37_M06_AXI_awaddr);
        p_37_M06_AXI_awaddr->set_sv_netview_offsetfromdp(12775296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M06_AXI_awlen.bind(*p_37_M06_AXI_awlen);
        p_37_M06_AXI_awlen->set_sv_netview_offsetfromdp(12775352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M06_AXI_awsize.bind(*p_37_M06_AXI_awsize);
        p_37_M06_AXI_awsize->set_sv_netview_offsetfromdp(12775408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M06_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M06_AXI_awburst.bind(*p_37_M06_AXI_awburst);
        p_37_M06_AXI_awburst->set_sv_netview_offsetfromdp(12775464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M06_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M06_AXI_awlock.bind(*p_37_M06_AXI_awlock);
        p_37_M06_AXI_awlock->set_sv_netview_offsetfromdp(12775520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M06_AXI_awcache.bind(*p_37_M06_AXI_awcache);
        p_37_M06_AXI_awcache->set_sv_netview_offsetfromdp(12775576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M06_AXI_awprot.bind(*p_37_M06_AXI_awprot);
        p_37_M06_AXI_awprot->set_sv_netview_offsetfromdp(12775632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M06_AXI_awqos.bind(*p_37_M06_AXI_awqos);
        p_37_M06_AXI_awqos->set_sv_netview_offsetfromdp(12775688);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M06_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M06_AXI_awuser.bind(*p_37_M06_AXI_awuser);
        p_37_M06_AXI_awuser->set_sv_netview_offsetfromdp(12775744);
        xsim_sc_channel<0, bool > *p_37_M06_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M06_AXI_awvalid.bind(*p_37_M06_AXI_awvalid);
        p_37_M06_AXI_awvalid->set_sv_netview_offsetfromdp(12775800);
        xsim_sc_channel<0, bool > *p_37_M06_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M06_AXI_awready.bind(*p_37_M06_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M06_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M06_AXI_wdata.bind(*p_37_M06_AXI_wdata);
        p_37_M06_AXI_wdata->set_sv_netview_offsetfromdp(12775912);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M06_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M06_AXI_wstrb.bind(*p_37_M06_AXI_wstrb);
        p_37_M06_AXI_wstrb->set_sv_netview_offsetfromdp(12775968);
        xsim_sc_channel<0, bool > *p_37_M06_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M06_AXI_wlast.bind(*p_37_M06_AXI_wlast);
        p_37_M06_AXI_wlast->set_sv_netview_offsetfromdp(12776024);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M06_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M06_AXI_wuser.bind(*p_37_M06_AXI_wuser);
        p_37_M06_AXI_wuser->set_sv_netview_offsetfromdp(12776080);
        xsim_sc_channel<0, bool > *p_37_M06_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M06_AXI_wvalid.bind(*p_37_M06_AXI_wvalid);
        p_37_M06_AXI_wvalid->set_sv_netview_offsetfromdp(12776136);
        xsim_sc_channel<0, bool > *p_37_M06_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M06_AXI_wready.bind(*p_37_M06_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M06_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M06_AXI_bid.bind(*p_37_M06_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M06_AXI_bresp.bind(*p_37_M06_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M06_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M06_AXI_buser.bind(*p_37_M06_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_buser);
        xsim_sc_channel<0, bool > *p_37_M06_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M06_AXI_bvalid.bind(*p_37_M06_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M06_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M06_AXI_bready.bind(*p_37_M06_AXI_bready);
        p_37_M06_AXI_bready->set_sv_netview_offsetfromdp(12776472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M06_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M06_AXI_arid.bind(*p_37_M06_AXI_arid);
        p_37_M06_AXI_arid->set_sv_netview_offsetfromdp(12776528);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_M06_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->M06_AXI_araddr.bind(*p_37_M06_AXI_araddr);
        p_37_M06_AXI_araddr->set_sv_netview_offsetfromdp(12776584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M06_AXI_arlen.bind(*p_37_M06_AXI_arlen);
        p_37_M06_AXI_arlen->set_sv_netview_offsetfromdp(12776640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M06_AXI_arsize.bind(*p_37_M06_AXI_arsize);
        p_37_M06_AXI_arsize->set_sv_netview_offsetfromdp(12776696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M06_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M06_AXI_arburst.bind(*p_37_M06_AXI_arburst);
        p_37_M06_AXI_arburst->set_sv_netview_offsetfromdp(12776752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M06_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M06_AXI_arlock.bind(*p_37_M06_AXI_arlock);
        p_37_M06_AXI_arlock->set_sv_netview_offsetfromdp(12776808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M06_AXI_arcache.bind(*p_37_M06_AXI_arcache);
        p_37_M06_AXI_arcache->set_sv_netview_offsetfromdp(12776864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M06_AXI_arprot.bind(*p_37_M06_AXI_arprot);
        p_37_M06_AXI_arprot->set_sv_netview_offsetfromdp(12776920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M06_AXI_arqos.bind(*p_37_M06_AXI_arqos);
        p_37_M06_AXI_arqos->set_sv_netview_offsetfromdp(12776976);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_M06_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->M06_AXI_aruser.bind(*p_37_M06_AXI_aruser);
        p_37_M06_AXI_aruser->set_sv_netview_offsetfromdp(12777032);
        xsim_sc_channel<0, bool > *p_37_M06_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M06_AXI_arvalid.bind(*p_37_M06_AXI_arvalid);
        p_37_M06_AXI_arvalid->set_sv_netview_offsetfromdp(12777088);
        xsim_sc_channel<0, bool > *p_37_M06_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M06_AXI_arready.bind(*p_37_M06_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M06_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M06_AXI_rid.bind(*p_37_M06_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M06_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M06_AXI_rdata.bind(*p_37_M06_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M06_AXI_rresp.bind(*p_37_M06_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M06_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M06_AXI_rlast.bind(*p_37_M06_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_M06_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->M06_AXI_ruser.bind(*p_37_M06_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_ruser);
        xsim_sc_channel<0, bool > *p_37_M06_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M06_AXI_rvalid.bind(*p_37_M06_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M06_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M06_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M06_AXI_rready.bind(*p_37_M06_AXI_rready);
        p_37_M06_AXI_rready->set_sv_netview_offsetfromdp(12777536);
        sc_inst_38 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_38->xsim_set_dbg_index(2977);
        xsim_sc_channel<0, bool > *p_38_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_38->aclk.bind(*p_38_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aclk);
        xsim_sc_channel<0, bool > *p_38_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_38->aresetn.bind(*p_38_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_s_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->s_axi_awaddr.bind(*p_38_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->s_axi_awlen.bind(*p_38_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->s_axi_awsize.bind(*p_38_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_awburst.bind(*p_38_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->s_axi_awlock.bind(*p_38_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_awcache.bind(*p_38_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->s_axi_awprot.bind(*p_38_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_awregion.bind(*p_38_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_awqos.bind(*p_38_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_38_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_awvalid.bind(*p_38_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_38_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_awready.bind(*p_38_s_axi_awready);
        p_38_s_axi_awready->set_sv_netview_offsetfromdp(12778312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->s_axi_wdata.bind(*p_38_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_wstrb.bind(*p_38_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_38_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_wlast.bind(*p_38_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_38_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_wvalid.bind(*p_38_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_38_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_wready.bind(*p_38_s_axi_wready);
        p_38_s_axi_wready->set_sv_netview_offsetfromdp(12778592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_bresp.bind(*p_38_s_axi_bresp);
        p_38_s_axi_bresp->set_sv_netview_offsetfromdp(12778648);
        xsim_sc_channel<0, bool > *p_38_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_bvalid.bind(*p_38_s_axi_bvalid);
        p_38_s_axi_bvalid->set_sv_netview_offsetfromdp(12778704);
        xsim_sc_channel<0, bool > *p_38_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_bready.bind(*p_38_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_s_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->s_axi_araddr.bind(*p_38_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->s_axi_arlen.bind(*p_38_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->s_axi_arsize.bind(*p_38_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_arburst.bind(*p_38_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->s_axi_arlock.bind(*p_38_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_arcache.bind(*p_38_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->s_axi_arprot.bind(*p_38_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_arregion.bind(*p_38_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_arqos.bind(*p_38_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_38_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_arvalid.bind(*p_38_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_38_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_arready.bind(*p_38_s_axi_arready);
        p_38_s_axi_arready->set_sv_netview_offsetfromdp(12779376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->s_axi_rdata.bind(*p_38_s_axi_rdata);
        p_38_s_axi_rdata->set_sv_netview_offsetfromdp(12779432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_rresp.bind(*p_38_s_axi_rresp);
        p_38_s_axi_rresp->set_sv_netview_offsetfromdp(12779488);
        xsim_sc_channel<0, bool > *p_38_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_rlast.bind(*p_38_s_axi_rlast);
        p_38_s_axi_rlast->set_sv_netview_offsetfromdp(12779544);
        xsim_sc_channel<0, bool > *p_38_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_rvalid.bind(*p_38_s_axi_rvalid);
        p_38_s_axi_rvalid->set_sv_netview_offsetfromdp(12779600);
        xsim_sc_channel<0, bool > *p_38_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_rready.bind(*p_38_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_m_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->m_axi_awaddr.bind(*p_38_m_axi_awaddr);
        p_38_m_axi_awaddr->set_sv_netview_offsetfromdp(12779712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->m_axi_awlen.bind(*p_38_m_axi_awlen);
        p_38_m_axi_awlen->set_sv_netview_offsetfromdp(12779768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->m_axi_awsize.bind(*p_38_m_axi_awsize);
        p_38_m_axi_awsize->set_sv_netview_offsetfromdp(12779824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->m_axi_awburst.bind(*p_38_m_axi_awburst);
        p_38_m_axi_awburst->set_sv_netview_offsetfromdp(12779880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->m_axi_awlock.bind(*p_38_m_axi_awlock);
        p_38_m_axi_awlock->set_sv_netview_offsetfromdp(12779936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_awcache.bind(*p_38_m_axi_awcache);
        p_38_m_axi_awcache->set_sv_netview_offsetfromdp(12779992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->m_axi_awprot.bind(*p_38_m_axi_awprot);
        p_38_m_axi_awprot->set_sv_netview_offsetfromdp(12780048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_awregion.bind(*p_38_m_axi_awregion);
        p_38_m_axi_awregion->set_sv_netview_offsetfromdp(12780104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_awqos.bind(*p_38_m_axi_awqos);
        p_38_m_axi_awqos->set_sv_netview_offsetfromdp(12780160);
        xsim_sc_channel<0, bool > *p_38_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_awvalid.bind(*p_38_m_axi_awvalid);
        p_38_m_axi_awvalid->set_sv_netview_offsetfromdp(12780216);
        xsim_sc_channel<0, bool > *p_38_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_awready.bind(*p_38_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->m_axi_wdata.bind(*p_38_m_axi_wdata);
        p_38_m_axi_wdata->set_sv_netview_offsetfromdp(12780328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_wstrb.bind(*p_38_m_axi_wstrb);
        p_38_m_axi_wstrb->set_sv_netview_offsetfromdp(12780384);
        xsim_sc_channel<0, bool > *p_38_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_wlast.bind(*p_38_m_axi_wlast);
        p_38_m_axi_wlast->set_sv_netview_offsetfromdp(12780440);
        xsim_sc_channel<0, bool > *p_38_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_wvalid.bind(*p_38_m_axi_wvalid);
        p_38_m_axi_wvalid->set_sv_netview_offsetfromdp(12780496);
        xsim_sc_channel<0, bool > *p_38_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_wready.bind(*p_38_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->m_axi_bresp.bind(*p_38_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_38_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_bvalid.bind(*p_38_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_38_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_bready.bind(*p_38_m_axi_bready);
        p_38_m_axi_bready->set_sv_netview_offsetfromdp(12780720);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_m_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->m_axi_araddr.bind(*p_38_m_axi_araddr);
        p_38_m_axi_araddr->set_sv_netview_offsetfromdp(12780776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->m_axi_arlen.bind(*p_38_m_axi_arlen);
        p_38_m_axi_arlen->set_sv_netview_offsetfromdp(12780832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->m_axi_arsize.bind(*p_38_m_axi_arsize);
        p_38_m_axi_arsize->set_sv_netview_offsetfromdp(12780888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->m_axi_arburst.bind(*p_38_m_axi_arburst);
        p_38_m_axi_arburst->set_sv_netview_offsetfromdp(12780944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->m_axi_arlock.bind(*p_38_m_axi_arlock);
        p_38_m_axi_arlock->set_sv_netview_offsetfromdp(12781000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_arcache.bind(*p_38_m_axi_arcache);
        p_38_m_axi_arcache->set_sv_netview_offsetfromdp(12781056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->m_axi_arprot.bind(*p_38_m_axi_arprot);
        p_38_m_axi_arprot->set_sv_netview_offsetfromdp(12781112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_arregion.bind(*p_38_m_axi_arregion);
        p_38_m_axi_arregion->set_sv_netview_offsetfromdp(12781168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_arqos.bind(*p_38_m_axi_arqos);
        p_38_m_axi_arqos->set_sv_netview_offsetfromdp(12781224);
        xsim_sc_channel<0, bool > *p_38_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_arvalid.bind(*p_38_m_axi_arvalid);
        p_38_m_axi_arvalid->set_sv_netview_offsetfromdp(12781280);
        xsim_sc_channel<0, bool > *p_38_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_arready.bind(*p_38_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->m_axi_rdata.bind(*p_38_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->m_axi_rresp.bind(*p_38_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_38_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_rlast.bind(*p_38_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_38_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_rvalid.bind(*p_38_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_38_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_rready.bind(*p_38_m_axi_rready);
        p_38_m_axi_rready->set_sv_netview_offsetfromdp(12781616);
        sc_inst_39 = new bd_d216_plram_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem00");
        sc_inst_39->xsim_set_dbg_index(3236);
        xsim_sc_channel<0, bool > *p_39_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_aclk.bind(*p_39_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_39_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_aresetn.bind(*p_39_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->s_axi_awaddr.bind(*p_39_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->s_axi_awlen.bind(*p_39_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_awsize.bind(*p_39_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_awburst.bind(*p_39_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_39_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_awlock.bind(*p_39_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->s_axi_awcache.bind(*p_39_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_awprot.bind(*p_39_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_39_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_awvalid.bind(*p_39_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_39_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_awready.bind(*p_39_s_axi_awready);
        p_39_s_axi_awready->set_sv_netview_offsetfromdp(12931696);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->s_axi_wdata.bind(*p_39_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->s_axi_wstrb.bind(*p_39_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_39_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_wlast.bind(*p_39_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_39_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_wvalid.bind(*p_39_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_39_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_wready.bind(*p_39_s_axi_wready);
        p_39_s_axi_wready->set_sv_netview_offsetfromdp(12931976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_bresp.bind(*p_39_s_axi_bresp);
        p_39_s_axi_bresp->set_sv_netview_offsetfromdp(12932032);
        xsim_sc_channel<0, bool > *p_39_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_bvalid.bind(*p_39_s_axi_bvalid);
        p_39_s_axi_bvalid->set_sv_netview_offsetfromdp(12932088);
        xsim_sc_channel<0, bool > *p_39_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_bready.bind(*p_39_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->s_axi_araddr.bind(*p_39_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->s_axi_arlen.bind(*p_39_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_arsize.bind(*p_39_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_arburst.bind(*p_39_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_39_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_arlock.bind(*p_39_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->s_axi_arcache.bind(*p_39_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_arprot.bind(*p_39_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_39_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_arvalid.bind(*p_39_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_39_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_arready.bind(*p_39_s_axi_arready);
        p_39_s_axi_arready->set_sv_netview_offsetfromdp(12932648);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->s_axi_rdata.bind(*p_39_s_axi_rdata);
        p_39_s_axi_rdata->set_sv_netview_offsetfromdp(12932704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_rresp.bind(*p_39_s_axi_rresp);
        p_39_s_axi_rresp->set_sv_netview_offsetfromdp(12932760);
        xsim_sc_channel<0, bool > *p_39_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_rlast.bind(*p_39_s_axi_rlast);
        p_39_s_axi_rlast->set_sv_netview_offsetfromdp(12932816);
        xsim_sc_channel<0, bool > *p_39_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_rvalid.bind(*p_39_s_axi_rvalid);
        p_39_s_axi_rvalid->set_sv_netview_offsetfromdp(12932872);
        xsim_sc_channel<0, bool > *p_39_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_rready.bind(*p_39_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_rready);
        xsim_sc_channel<0, bool > *p_39_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_39->bram_rst_a.bind(*p_39_bram_rst_a);
        p_39_bram_rst_a->set_sv_netview_offsetfromdp(12932984);
        xsim_sc_channel<0, bool > *p_39_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_39->bram_clk_a.bind(*p_39_bram_clk_a);
        p_39_bram_clk_a->set_sv_netview_offsetfromdp(12933040);
        xsim_sc_channel<0, bool > *p_39_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_39->bram_en_a.bind(*p_39_bram_en_a);
        p_39_bram_en_a->set_sv_netview_offsetfromdp(12933096);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->bram_we_a.bind(*p_39_bram_we_a);
        p_39_bram_we_a->set_sv_netview_offsetfromdp(12933152);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->bram_addr_a.bind(*p_39_bram_addr_a);
        p_39_bram_addr_a->set_sv_netview_offsetfromdp(12933208);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->bram_wrdata_a.bind(*p_39_bram_wrdata_a);
        p_39_bram_wrdata_a->set_sv_netview_offsetfromdp(12933264);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->bram_rddata_a.bind(*p_39_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_39_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_39_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_39->bram_rst_b.bind(*p_39_bram_rst_b);
        p_39_bram_rst_b->set_sv_netview_offsetfromdp(12933376);
        xsim_sc_channel<0, bool > *p_39_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_39->bram_clk_b.bind(*p_39_bram_clk_b);
        p_39_bram_clk_b->set_sv_netview_offsetfromdp(12933432);
        xsim_sc_channel<0, bool > *p_39_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_39->bram_en_b.bind(*p_39_bram_en_b);
        p_39_bram_en_b->set_sv_netview_offsetfromdp(12933488);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->bram_we_b.bind(*p_39_bram_we_b);
        p_39_bram_we_b->set_sv_netview_offsetfromdp(12933544);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->bram_addr_b.bind(*p_39_bram_addr_b);
        p_39_bram_addr_b->set_sv_netview_offsetfromdp(12933600);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->bram_wrdata_b.bind(*p_39_bram_wrdata_b);
        p_39_bram_wrdata_b->set_sv_netview_offsetfromdp(12933656);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->bram_rddata_b.bind(*p_39_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_39_bram_rddata_b);
        sc_inst_40 = new bd_d216_plram_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem01");
        sc_inst_40->xsim_set_dbg_index(3238);
        xsim_sc_channel<0, bool > *p_40_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_aclk.bind(*p_40_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_40_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_aresetn.bind(*p_40_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->s_axi_awaddr.bind(*p_40_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->s_axi_awlen.bind(*p_40_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_awsize.bind(*p_40_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_awburst.bind(*p_40_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_40_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awlock.bind(*p_40_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_awcache.bind(*p_40_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_awprot.bind(*p_40_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_40_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awvalid.bind(*p_40_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awready.bind(*p_40_s_axi_awready);
        p_40_s_axi_awready->set_sv_netview_offsetfromdp(12995496);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->s_axi_wdata.bind(*p_40_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->s_axi_wstrb.bind(*p_40_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_40_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wlast.bind(*p_40_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_40_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wvalid.bind(*p_40_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wready.bind(*p_40_s_axi_wready);
        p_40_s_axi_wready->set_sv_netview_offsetfromdp(12995776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_bresp.bind(*p_40_s_axi_bresp);
        p_40_s_axi_bresp->set_sv_netview_offsetfromdp(12995832);
        xsim_sc_channel<0, bool > *p_40_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_bvalid.bind(*p_40_s_axi_bvalid);
        p_40_s_axi_bvalid->set_sv_netview_offsetfromdp(12995888);
        xsim_sc_channel<0, bool > *p_40_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_bready.bind(*p_40_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->s_axi_araddr.bind(*p_40_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->s_axi_arlen.bind(*p_40_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_arsize.bind(*p_40_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_arburst.bind(*p_40_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_40_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arlock.bind(*p_40_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_arcache.bind(*p_40_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_arprot.bind(*p_40_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_40_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arvalid.bind(*p_40_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arready.bind(*p_40_s_axi_arready);
        p_40_s_axi_arready->set_sv_netview_offsetfromdp(12996448);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->s_axi_rdata.bind(*p_40_s_axi_rdata);
        p_40_s_axi_rdata->set_sv_netview_offsetfromdp(12996504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_rresp.bind(*p_40_s_axi_rresp);
        p_40_s_axi_rresp->set_sv_netview_offsetfromdp(12996560);
        xsim_sc_channel<0, bool > *p_40_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rlast.bind(*p_40_s_axi_rlast);
        p_40_s_axi_rlast->set_sv_netview_offsetfromdp(12996616);
        xsim_sc_channel<0, bool > *p_40_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rvalid.bind(*p_40_s_axi_rvalid);
        p_40_s_axi_rvalid->set_sv_netview_offsetfromdp(12996672);
        xsim_sc_channel<0, bool > *p_40_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rready.bind(*p_40_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_rready);
        xsim_sc_channel<0, bool > *p_40_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_rst_a.bind(*p_40_bram_rst_a);
        p_40_bram_rst_a->set_sv_netview_offsetfromdp(12996784);
        xsim_sc_channel<0, bool > *p_40_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_clk_a.bind(*p_40_bram_clk_a);
        p_40_bram_clk_a->set_sv_netview_offsetfromdp(12996840);
        xsim_sc_channel<0, bool > *p_40_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_en_a.bind(*p_40_bram_en_a);
        p_40_bram_en_a->set_sv_netview_offsetfromdp(12996896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->bram_we_a.bind(*p_40_bram_we_a);
        p_40_bram_we_a->set_sv_netview_offsetfromdp(12996952);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->bram_addr_a.bind(*p_40_bram_addr_a);
        p_40_bram_addr_a->set_sv_netview_offsetfromdp(12997008);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->bram_wrdata_a.bind(*p_40_bram_wrdata_a);
        p_40_bram_wrdata_a->set_sv_netview_offsetfromdp(12997064);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->bram_rddata_a.bind(*p_40_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_40_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_40_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_rst_b.bind(*p_40_bram_rst_b);
        p_40_bram_rst_b->set_sv_netview_offsetfromdp(12997176);
        xsim_sc_channel<0, bool > *p_40_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_clk_b.bind(*p_40_bram_clk_b);
        p_40_bram_clk_b->set_sv_netview_offsetfromdp(12997232);
        xsim_sc_channel<0, bool > *p_40_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_en_b.bind(*p_40_bram_en_b);
        p_40_bram_en_b->set_sv_netview_offsetfromdp(12997288);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->bram_we_b.bind(*p_40_bram_we_b);
        p_40_bram_we_b->set_sv_netview_offsetfromdp(12997344);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->bram_addr_b.bind(*p_40_bram_addr_b);
        p_40_bram_addr_b->set_sv_netview_offsetfromdp(12997400);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->bram_wrdata_b.bind(*p_40_bram_wrdata_b);
        p_40_bram_wrdata_b->set_sv_netview_offsetfromdp(12997456);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->bram_rddata_b.bind(*p_40_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_40_bram_rddata_b);
        sc_inst_41 = new bd_d216_plram_mem02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem02");
        sc_inst_41->xsim_set_dbg_index(3240);
        xsim_sc_channel<0, bool > *p_41_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_aclk.bind(*p_41_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_41_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_aresetn.bind(*p_41_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->s_axi_awaddr.bind(*p_41_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->s_axi_awlen.bind(*p_41_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->s_axi_awsize.bind(*p_41_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->s_axi_awburst.bind(*p_41_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_41_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_awlock.bind(*p_41_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->s_axi_awcache.bind(*p_41_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->s_axi_awprot.bind(*p_41_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_41_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_awvalid.bind(*p_41_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_41_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_awready.bind(*p_41_s_axi_awready);
        p_41_s_axi_awready->set_sv_netview_offsetfromdp(13059296);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->s_axi_wdata.bind(*p_41_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->s_axi_wstrb.bind(*p_41_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_41_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_wlast.bind(*p_41_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_41_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_wvalid.bind(*p_41_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_41_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_wready.bind(*p_41_s_axi_wready);
        p_41_s_axi_wready->set_sv_netview_offsetfromdp(13059576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->s_axi_bresp.bind(*p_41_s_axi_bresp);
        p_41_s_axi_bresp->set_sv_netview_offsetfromdp(13059632);
        xsim_sc_channel<0, bool > *p_41_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_bvalid.bind(*p_41_s_axi_bvalid);
        p_41_s_axi_bvalid->set_sv_netview_offsetfromdp(13059688);
        xsim_sc_channel<0, bool > *p_41_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_bready.bind(*p_41_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->s_axi_araddr.bind(*p_41_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->s_axi_arlen.bind(*p_41_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->s_axi_arsize.bind(*p_41_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->s_axi_arburst.bind(*p_41_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_41_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_arlock.bind(*p_41_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->s_axi_arcache.bind(*p_41_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->s_axi_arprot.bind(*p_41_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_41_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_arvalid.bind(*p_41_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_41_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_arready.bind(*p_41_s_axi_arready);
        p_41_s_axi_arready->set_sv_netview_offsetfromdp(13060248);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->s_axi_rdata.bind(*p_41_s_axi_rdata);
        p_41_s_axi_rdata->set_sv_netview_offsetfromdp(13060304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->s_axi_rresp.bind(*p_41_s_axi_rresp);
        p_41_s_axi_rresp->set_sv_netview_offsetfromdp(13060360);
        xsim_sc_channel<0, bool > *p_41_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_rlast.bind(*p_41_s_axi_rlast);
        p_41_s_axi_rlast->set_sv_netview_offsetfromdp(13060416);
        xsim_sc_channel<0, bool > *p_41_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_rvalid.bind(*p_41_s_axi_rvalid);
        p_41_s_axi_rvalid->set_sv_netview_offsetfromdp(13060472);
        xsim_sc_channel<0, bool > *p_41_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_rready.bind(*p_41_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_rready);
        xsim_sc_channel<0, bool > *p_41_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_41->bram_rst_a.bind(*p_41_bram_rst_a);
        p_41_bram_rst_a->set_sv_netview_offsetfromdp(13060584);
        xsim_sc_channel<0, bool > *p_41_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_41->bram_clk_a.bind(*p_41_bram_clk_a);
        p_41_bram_clk_a->set_sv_netview_offsetfromdp(13060640);
        xsim_sc_channel<0, bool > *p_41_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_41->bram_en_a.bind(*p_41_bram_en_a);
        p_41_bram_en_a->set_sv_netview_offsetfromdp(13060696);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->bram_we_a.bind(*p_41_bram_we_a);
        p_41_bram_we_a->set_sv_netview_offsetfromdp(13060752);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->bram_addr_a.bind(*p_41_bram_addr_a);
        p_41_bram_addr_a->set_sv_netview_offsetfromdp(13060808);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->bram_wrdata_a.bind(*p_41_bram_wrdata_a);
        p_41_bram_wrdata_a->set_sv_netview_offsetfromdp(13060864);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->bram_rddata_a.bind(*p_41_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_41_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_41_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_41->bram_rst_b.bind(*p_41_bram_rst_b);
        p_41_bram_rst_b->set_sv_netview_offsetfromdp(13060976);
        xsim_sc_channel<0, bool > *p_41_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_41->bram_clk_b.bind(*p_41_bram_clk_b);
        p_41_bram_clk_b->set_sv_netview_offsetfromdp(13061032);
        xsim_sc_channel<0, bool > *p_41_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_41->bram_en_b.bind(*p_41_bram_en_b);
        p_41_bram_en_b->set_sv_netview_offsetfromdp(13061088);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->bram_we_b.bind(*p_41_bram_we_b);
        p_41_bram_we_b->set_sv_netview_offsetfromdp(13061144);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->bram_addr_b.bind(*p_41_bram_addr_b);
        p_41_bram_addr_b->set_sv_netview_offsetfromdp(13061200);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->bram_wrdata_b.bind(*p_41_bram_wrdata_b);
        p_41_bram_wrdata_b->set_sv_netview_offsetfromdp(13061256);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->bram_rddata_b.bind(*p_41_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_41_bram_rddata_b);
        sc_inst_42 = new bd_d216_plram_mem03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem03");
        sc_inst_42->xsim_set_dbg_index(3242);
        xsim_sc_channel<0, bool > *p_42_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_aclk.bind(*p_42_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_42_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_aresetn.bind(*p_42_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->s_axi_awaddr.bind(*p_42_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->s_axi_awlen.bind(*p_42_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_awsize.bind(*p_42_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_awburst.bind(*p_42_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_42_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awlock.bind(*p_42_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_awcache.bind(*p_42_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_awprot.bind(*p_42_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_42_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awvalid.bind(*p_42_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awready.bind(*p_42_s_axi_awready);
        p_42_s_axi_awready->set_sv_netview_offsetfromdp(13123096);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->s_axi_wdata.bind(*p_42_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->s_axi_wstrb.bind(*p_42_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_42_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wlast.bind(*p_42_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_42_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wvalid.bind(*p_42_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wready.bind(*p_42_s_axi_wready);
        p_42_s_axi_wready->set_sv_netview_offsetfromdp(13123376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_bresp.bind(*p_42_s_axi_bresp);
        p_42_s_axi_bresp->set_sv_netview_offsetfromdp(13123432);
        xsim_sc_channel<0, bool > *p_42_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bvalid.bind(*p_42_s_axi_bvalid);
        p_42_s_axi_bvalid->set_sv_netview_offsetfromdp(13123488);
        xsim_sc_channel<0, bool > *p_42_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bready.bind(*p_42_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->s_axi_araddr.bind(*p_42_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->s_axi_arlen.bind(*p_42_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_arsize.bind(*p_42_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_arburst.bind(*p_42_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_42_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arlock.bind(*p_42_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_arcache.bind(*p_42_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_arprot.bind(*p_42_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_42_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arvalid.bind(*p_42_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arready.bind(*p_42_s_axi_arready);
        p_42_s_axi_arready->set_sv_netview_offsetfromdp(13124048);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->s_axi_rdata.bind(*p_42_s_axi_rdata);
        p_42_s_axi_rdata->set_sv_netview_offsetfromdp(13124104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_rresp.bind(*p_42_s_axi_rresp);
        p_42_s_axi_rresp->set_sv_netview_offsetfromdp(13124160);
        xsim_sc_channel<0, bool > *p_42_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rlast.bind(*p_42_s_axi_rlast);
        p_42_s_axi_rlast->set_sv_netview_offsetfromdp(13124216);
        xsim_sc_channel<0, bool > *p_42_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rvalid.bind(*p_42_s_axi_rvalid);
        p_42_s_axi_rvalid->set_sv_netview_offsetfromdp(13124272);
        xsim_sc_channel<0, bool > *p_42_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rready.bind(*p_42_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_rready);
        xsim_sc_channel<0, bool > *p_42_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_42->bram_rst_a.bind(*p_42_bram_rst_a);
        p_42_bram_rst_a->set_sv_netview_offsetfromdp(13124384);
        xsim_sc_channel<0, bool > *p_42_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_42->bram_clk_a.bind(*p_42_bram_clk_a);
        p_42_bram_clk_a->set_sv_netview_offsetfromdp(13124440);
        xsim_sc_channel<0, bool > *p_42_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_42->bram_en_a.bind(*p_42_bram_en_a);
        p_42_bram_en_a->set_sv_netview_offsetfromdp(13124496);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->bram_we_a.bind(*p_42_bram_we_a);
        p_42_bram_we_a->set_sv_netview_offsetfromdp(13124552);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->bram_addr_a.bind(*p_42_bram_addr_a);
        p_42_bram_addr_a->set_sv_netview_offsetfromdp(13124608);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->bram_wrdata_a.bind(*p_42_bram_wrdata_a);
        p_42_bram_wrdata_a->set_sv_netview_offsetfromdp(13124664);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->bram_rddata_a.bind(*p_42_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_42_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_42_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_42->bram_rst_b.bind(*p_42_bram_rst_b);
        p_42_bram_rst_b->set_sv_netview_offsetfromdp(13124776);
        xsim_sc_channel<0, bool > *p_42_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_42->bram_clk_b.bind(*p_42_bram_clk_b);
        p_42_bram_clk_b->set_sv_netview_offsetfromdp(13124832);
        xsim_sc_channel<0, bool > *p_42_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_42->bram_en_b.bind(*p_42_bram_en_b);
        p_42_bram_en_b->set_sv_netview_offsetfromdp(13124888);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->bram_we_b.bind(*p_42_bram_we_b);
        p_42_bram_we_b->set_sv_netview_offsetfromdp(13124944);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->bram_addr_b.bind(*p_42_bram_addr_b);
        p_42_bram_addr_b->set_sv_netview_offsetfromdp(13125000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->bram_wrdata_b.bind(*p_42_bram_wrdata_b);
        p_42_bram_wrdata_b->set_sv_netview_offsetfromdp(13125056);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->bram_rddata_b.bind(*p_42_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_42_bram_rddata_b);
        sc_inst_43 = new bd_d216_plram_mem04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem04");
        sc_inst_43->xsim_set_dbg_index(3244);
        xsim_sc_channel<0, bool > *p_43_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_aclk.bind(*p_43_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_43_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_aresetn.bind(*p_43_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->s_axi_awaddr.bind(*p_43_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->s_axi_awlen.bind(*p_43_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_awsize.bind(*p_43_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_awburst.bind(*p_43_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_43_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awlock.bind(*p_43_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->s_axi_awcache.bind(*p_43_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_awprot.bind(*p_43_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_43_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awvalid.bind(*p_43_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awready.bind(*p_43_s_axi_awready);
        p_43_s_axi_awready->set_sv_netview_offsetfromdp(13186896);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->s_axi_wdata.bind(*p_43_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->s_axi_wstrb.bind(*p_43_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_43_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wlast.bind(*p_43_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_43_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wvalid.bind(*p_43_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wready.bind(*p_43_s_axi_wready);
        p_43_s_axi_wready->set_sv_netview_offsetfromdp(13187176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_bresp.bind(*p_43_s_axi_bresp);
        p_43_s_axi_bresp->set_sv_netview_offsetfromdp(13187232);
        xsim_sc_channel<0, bool > *p_43_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_bvalid.bind(*p_43_s_axi_bvalid);
        p_43_s_axi_bvalid->set_sv_netview_offsetfromdp(13187288);
        xsim_sc_channel<0, bool > *p_43_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_bready.bind(*p_43_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->s_axi_araddr.bind(*p_43_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->s_axi_arlen.bind(*p_43_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_arsize.bind(*p_43_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_arburst.bind(*p_43_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_43_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arlock.bind(*p_43_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->s_axi_arcache.bind(*p_43_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_arprot.bind(*p_43_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_43_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arvalid.bind(*p_43_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arready.bind(*p_43_s_axi_arready);
        p_43_s_axi_arready->set_sv_netview_offsetfromdp(13187848);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->s_axi_rdata.bind(*p_43_s_axi_rdata);
        p_43_s_axi_rdata->set_sv_netview_offsetfromdp(13187904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_rresp.bind(*p_43_s_axi_rresp);
        p_43_s_axi_rresp->set_sv_netview_offsetfromdp(13187960);
        xsim_sc_channel<0, bool > *p_43_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rlast.bind(*p_43_s_axi_rlast);
        p_43_s_axi_rlast->set_sv_netview_offsetfromdp(13188016);
        xsim_sc_channel<0, bool > *p_43_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rvalid.bind(*p_43_s_axi_rvalid);
        p_43_s_axi_rvalid->set_sv_netview_offsetfromdp(13188072);
        xsim_sc_channel<0, bool > *p_43_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rready.bind(*p_43_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_rready);
        xsim_sc_channel<0, bool > *p_43_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_rst_a.bind(*p_43_bram_rst_a);
        p_43_bram_rst_a->set_sv_netview_offsetfromdp(13188184);
        xsim_sc_channel<0, bool > *p_43_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_clk_a.bind(*p_43_bram_clk_a);
        p_43_bram_clk_a->set_sv_netview_offsetfromdp(13188240);
        xsim_sc_channel<0, bool > *p_43_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_en_a.bind(*p_43_bram_en_a);
        p_43_bram_en_a->set_sv_netview_offsetfromdp(13188296);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->bram_we_a.bind(*p_43_bram_we_a);
        p_43_bram_we_a->set_sv_netview_offsetfromdp(13188352);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->bram_addr_a.bind(*p_43_bram_addr_a);
        p_43_bram_addr_a->set_sv_netview_offsetfromdp(13188408);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_wrdata_a.bind(*p_43_bram_wrdata_a);
        p_43_bram_wrdata_a->set_sv_netview_offsetfromdp(13188464);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_rddata_a.bind(*p_43_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_43_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_43_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_rst_b.bind(*p_43_bram_rst_b);
        p_43_bram_rst_b->set_sv_netview_offsetfromdp(13188576);
        xsim_sc_channel<0, bool > *p_43_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_clk_b.bind(*p_43_bram_clk_b);
        p_43_bram_clk_b->set_sv_netview_offsetfromdp(13188632);
        xsim_sc_channel<0, bool > *p_43_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_en_b.bind(*p_43_bram_en_b);
        p_43_bram_en_b->set_sv_netview_offsetfromdp(13188688);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->bram_we_b.bind(*p_43_bram_we_b);
        p_43_bram_we_b->set_sv_netview_offsetfromdp(13188744);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->bram_addr_b.bind(*p_43_bram_addr_b);
        p_43_bram_addr_b->set_sv_netview_offsetfromdp(13188800);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_wrdata_b.bind(*p_43_bram_wrdata_b);
        p_43_bram_wrdata_b->set_sv_netview_offsetfromdp(13188856);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_rddata_b.bind(*p_43_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_43_bram_rddata_b);
        sc_inst_44 = new bd_d216_plram_mem05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem05");
        sc_inst_44->xsim_set_dbg_index(3246);
        xsim_sc_channel<0, bool > *p_44_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_aclk.bind(*p_44_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_44_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_aresetn.bind(*p_44_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->s_axi_awaddr.bind(*p_44_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->s_axi_awlen.bind(*p_44_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_awsize.bind(*p_44_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_awburst.bind(*p_44_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_44_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awlock.bind(*p_44_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_awcache.bind(*p_44_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_awprot.bind(*p_44_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_44_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awvalid.bind(*p_44_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awready.bind(*p_44_s_axi_awready);
        p_44_s_axi_awready->set_sv_netview_offsetfromdp(13250696);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->s_axi_wdata.bind(*p_44_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->s_axi_wstrb.bind(*p_44_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_44_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wlast.bind(*p_44_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_44_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wvalid.bind(*p_44_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wready.bind(*p_44_s_axi_wready);
        p_44_s_axi_wready->set_sv_netview_offsetfromdp(13250976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_bresp.bind(*p_44_s_axi_bresp);
        p_44_s_axi_bresp->set_sv_netview_offsetfromdp(13251032);
        xsim_sc_channel<0, bool > *p_44_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bvalid.bind(*p_44_s_axi_bvalid);
        p_44_s_axi_bvalid->set_sv_netview_offsetfromdp(13251088);
        xsim_sc_channel<0, bool > *p_44_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bready.bind(*p_44_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->s_axi_araddr.bind(*p_44_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->s_axi_arlen.bind(*p_44_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_arsize.bind(*p_44_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_arburst.bind(*p_44_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_44_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arlock.bind(*p_44_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_arcache.bind(*p_44_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_arprot.bind(*p_44_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_44_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arvalid.bind(*p_44_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arready.bind(*p_44_s_axi_arready);
        p_44_s_axi_arready->set_sv_netview_offsetfromdp(13251648);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->s_axi_rdata.bind(*p_44_s_axi_rdata);
        p_44_s_axi_rdata->set_sv_netview_offsetfromdp(13251704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_rresp.bind(*p_44_s_axi_rresp);
        p_44_s_axi_rresp->set_sv_netview_offsetfromdp(13251760);
        xsim_sc_channel<0, bool > *p_44_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rlast.bind(*p_44_s_axi_rlast);
        p_44_s_axi_rlast->set_sv_netview_offsetfromdp(13251816);
        xsim_sc_channel<0, bool > *p_44_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rvalid.bind(*p_44_s_axi_rvalid);
        p_44_s_axi_rvalid->set_sv_netview_offsetfromdp(13251872);
        xsim_sc_channel<0, bool > *p_44_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rready.bind(*p_44_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_rready);
        xsim_sc_channel<0, bool > *p_44_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_rst_a.bind(*p_44_bram_rst_a);
        p_44_bram_rst_a->set_sv_netview_offsetfromdp(13251984);
        xsim_sc_channel<0, bool > *p_44_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_clk_a.bind(*p_44_bram_clk_a);
        p_44_bram_clk_a->set_sv_netview_offsetfromdp(13252040);
        xsim_sc_channel<0, bool > *p_44_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_en_a.bind(*p_44_bram_en_a);
        p_44_bram_en_a->set_sv_netview_offsetfromdp(13252096);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->bram_we_a.bind(*p_44_bram_we_a);
        p_44_bram_we_a->set_sv_netview_offsetfromdp(13252152);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->bram_addr_a.bind(*p_44_bram_addr_a);
        p_44_bram_addr_a->set_sv_netview_offsetfromdp(13252208);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->bram_wrdata_a.bind(*p_44_bram_wrdata_a);
        p_44_bram_wrdata_a->set_sv_netview_offsetfromdp(13252264);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->bram_rddata_a.bind(*p_44_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_44_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_44_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_rst_b.bind(*p_44_bram_rst_b);
        p_44_bram_rst_b->set_sv_netview_offsetfromdp(13252376);
        xsim_sc_channel<0, bool > *p_44_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_clk_b.bind(*p_44_bram_clk_b);
        p_44_bram_clk_b->set_sv_netview_offsetfromdp(13252432);
        xsim_sc_channel<0, bool > *p_44_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_en_b.bind(*p_44_bram_en_b);
        p_44_bram_en_b->set_sv_netview_offsetfromdp(13252488);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->bram_we_b.bind(*p_44_bram_we_b);
        p_44_bram_we_b->set_sv_netview_offsetfromdp(13252544);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->bram_addr_b.bind(*p_44_bram_addr_b);
        p_44_bram_addr_b->set_sv_netview_offsetfromdp(13252600);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->bram_wrdata_b.bind(*p_44_bram_wrdata_b);
        p_44_bram_wrdata_b->set_sv_netview_offsetfromdp(13252656);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->bram_rddata_b.bind(*p_44_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_44_bram_rddata_b);
        sc_inst_45 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_45->xsim_set_dbg_index(55);
        sc_inst_46 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_46->xsim_set_dbg_index(56);
        xsim_sc_channel<0, bool > *p_46_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_46->aclk.bind(*p_46_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aclk);
        xsim_sc_channel<0, bool > *p_46_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_46->aresetn.bind(*p_46_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_awaddr.bind(*p_46_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_awlen.bind(*p_46_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_awburst.bind(*p_46_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_awlock.bind(*p_46_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awcache.bind(*p_46_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awprot.bind(*p_46_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awqos.bind(*p_46_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_46_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awvalid.bind(*p_46_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awready.bind(*p_46_s_axi_awready);
        p_46_s_axi_awready->set_sv_netview_offsetfromdp(13460096);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->s_axi_wdata.bind(*p_46_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_wstrb.bind(*p_46_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_46_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wlast.bind(*p_46_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_46_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wvalid.bind(*p_46_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wready.bind(*p_46_s_axi_wready);
        p_46_s_axi_wready->set_sv_netview_offsetfromdp(13460376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_bresp.bind(*p_46_s_axi_bresp);
        p_46_s_axi_bresp->set_sv_netview_offsetfromdp(13460432);
        xsim_sc_channel<0, bool > *p_46_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bvalid.bind(*p_46_s_axi_bvalid);
        p_46_s_axi_bvalid->set_sv_netview_offsetfromdp(13460488);
        xsim_sc_channel<0, bool > *p_46_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bready.bind(*p_46_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_araddr.bind(*p_46_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_arlen.bind(*p_46_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_arburst.bind(*p_46_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_arlock.bind(*p_46_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arcache.bind(*p_46_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arprot.bind(*p_46_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arqos.bind(*p_46_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_46_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arvalid.bind(*p_46_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arready.bind(*p_46_s_axi_arready);
        p_46_s_axi_arready->set_sv_netview_offsetfromdp(13461048);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->s_axi_rdata.bind(*p_46_s_axi_rdata);
        p_46_s_axi_rdata->set_sv_netview_offsetfromdp(13461104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_rresp.bind(*p_46_s_axi_rresp);
        p_46_s_axi_rresp->set_sv_netview_offsetfromdp(13461160);
        xsim_sc_channel<0, bool > *p_46_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rlast.bind(*p_46_s_axi_rlast);
        p_46_s_axi_rlast->set_sv_netview_offsetfromdp(13461216);
        xsim_sc_channel<0, bool > *p_46_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rvalid.bind(*p_46_s_axi_rvalid);
        p_46_s_axi_rvalid->set_sv_netview_offsetfromdp(13461272);
        xsim_sc_channel<0, bool > *p_46_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rready.bind(*p_46_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->m_axi_awaddr.bind(*p_46_m_axi_awaddr);
        p_46_m_axi_awaddr->set_sv_netview_offsetfromdp(13461384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->m_axi_awlen.bind(*p_46_m_axi_awlen);
        p_46_m_axi_awlen->set_sv_netview_offsetfromdp(13461440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_awburst.bind(*p_46_m_axi_awburst);
        p_46_m_axi_awburst->set_sv_netview_offsetfromdp(13461496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->m_axi_awlock.bind(*p_46_m_axi_awlock);
        p_46_m_axi_awlock->set_sv_netview_offsetfromdp(13461552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awcache.bind(*p_46_m_axi_awcache);
        p_46_m_axi_awcache->set_sv_netview_offsetfromdp(13461608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_awprot.bind(*p_46_m_axi_awprot);
        p_46_m_axi_awprot->set_sv_netview_offsetfromdp(13461664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awqos.bind(*p_46_m_axi_awqos);
        p_46_m_axi_awqos->set_sv_netview_offsetfromdp(13461720);
        xsim_sc_channel<0, bool > *p_46_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_awvalid.bind(*p_46_m_axi_awvalid);
        p_46_m_axi_awvalid->set_sv_netview_offsetfromdp(13461776);
        xsim_sc_channel<0, bool > *p_46_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_awready.bind(*p_46_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->m_axi_wdata.bind(*p_46_m_axi_wdata);
        p_46_m_axi_wdata->set_sv_netview_offsetfromdp(13461888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->m_axi_wstrb.bind(*p_46_m_axi_wstrb);
        p_46_m_axi_wstrb->set_sv_netview_offsetfromdp(13461944);
        xsim_sc_channel<0, bool > *p_46_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wlast.bind(*p_46_m_axi_wlast);
        p_46_m_axi_wlast->set_sv_netview_offsetfromdp(13462000);
        xsim_sc_channel<0, bool > *p_46_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wvalid.bind(*p_46_m_axi_wvalid);
        p_46_m_axi_wvalid->set_sv_netview_offsetfromdp(13462056);
        xsim_sc_channel<0, bool > *p_46_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wready.bind(*p_46_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_bresp.bind(*p_46_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_46_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_bvalid.bind(*p_46_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_46_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_bready.bind(*p_46_m_axi_bready);
        p_46_m_axi_bready->set_sv_netview_offsetfromdp(13462280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->m_axi_araddr.bind(*p_46_m_axi_araddr);
        p_46_m_axi_araddr->set_sv_netview_offsetfromdp(13462336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->m_axi_arlen.bind(*p_46_m_axi_arlen);
        p_46_m_axi_arlen->set_sv_netview_offsetfromdp(13462392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_arburst.bind(*p_46_m_axi_arburst);
        p_46_m_axi_arburst->set_sv_netview_offsetfromdp(13462448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->m_axi_arlock.bind(*p_46_m_axi_arlock);
        p_46_m_axi_arlock->set_sv_netview_offsetfromdp(13462504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arcache.bind(*p_46_m_axi_arcache);
        p_46_m_axi_arcache->set_sv_netview_offsetfromdp(13462560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_arprot.bind(*p_46_m_axi_arprot);
        p_46_m_axi_arprot->set_sv_netview_offsetfromdp(13462616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arqos.bind(*p_46_m_axi_arqos);
        p_46_m_axi_arqos->set_sv_netview_offsetfromdp(13462672);
        xsim_sc_channel<0, bool > *p_46_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_arvalid.bind(*p_46_m_axi_arvalid);
        p_46_m_axi_arvalid->set_sv_netview_offsetfromdp(13462728);
        xsim_sc_channel<0, bool > *p_46_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_arready.bind(*p_46_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->m_axi_rdata.bind(*p_46_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_rresp.bind(*p_46_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_46_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rlast.bind(*p_46_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_46_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rvalid.bind(*p_46_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_46_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rready.bind(*p_46_m_axi_rready);
        p_46_m_axi_rready->set_sv_netview_offsetfromdp(13463064);
        sc_inst_47 = new pfm_dynamic_m01_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_47->xsim_set_dbg_index(3604);
        xsim_sc_channel<0, bool > *p_47_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_47->aclk.bind(*p_47_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_47_aclk);
        xsim_sc_channel<0, bool > *p_47_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_47->aresetn.bind(*p_47_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_47_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->s_axi_awaddr.bind(*p_47_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_awprot.bind(*p_47_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_47_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awvalid.bind(*p_47_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awready.bind(*p_47_s_axi_awready);
        p_47_s_axi_awready->set_sv_netview_offsetfromdp(13739600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->s_axi_wdata.bind(*p_47_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->s_axi_wstrb.bind(*p_47_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_47_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wvalid.bind(*p_47_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wready.bind(*p_47_s_axi_wready);
        p_47_s_axi_wready->set_sv_netview_offsetfromdp(13739824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_bresp.bind(*p_47_s_axi_bresp);
        p_47_s_axi_bresp->set_sv_netview_offsetfromdp(13739880);
        xsim_sc_channel<0, bool > *p_47_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_bvalid.bind(*p_47_s_axi_bvalid);
        p_47_s_axi_bvalid->set_sv_netview_offsetfromdp(13739936);
        xsim_sc_channel<0, bool > *p_47_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_bready.bind(*p_47_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->s_axi_araddr.bind(*p_47_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_arprot.bind(*p_47_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_47_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arvalid.bind(*p_47_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arready.bind(*p_47_s_axi_arready);
        p_47_s_axi_arready->set_sv_netview_offsetfromdp(13740216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->s_axi_rdata.bind(*p_47_s_axi_rdata);
        p_47_s_axi_rdata->set_sv_netview_offsetfromdp(13740272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_rresp.bind(*p_47_s_axi_rresp);
        p_47_s_axi_rresp->set_sv_netview_offsetfromdp(13740328);
        xsim_sc_channel<0, bool > *p_47_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rvalid.bind(*p_47_s_axi_rvalid);
        p_47_s_axi_rvalid->set_sv_netview_offsetfromdp(13740384);
        xsim_sc_channel<0, bool > *p_47_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rready.bind(*p_47_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->m_axi_awaddr.bind(*p_47_m_axi_awaddr);
        p_47_m_axi_awaddr->set_sv_netview_offsetfromdp(13740496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->m_axi_awprot.bind(*p_47_m_axi_awprot);
        p_47_m_axi_awprot->set_sv_netview_offsetfromdp(13740552);
        xsim_sc_channel<0, bool > *p_47_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_awvalid.bind(*p_47_m_axi_awvalid);
        p_47_m_axi_awvalid->set_sv_netview_offsetfromdp(13740608);
        xsim_sc_channel<0, bool > *p_47_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_awready.bind(*p_47_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->m_axi_wdata.bind(*p_47_m_axi_wdata);
        p_47_m_axi_wdata->set_sv_netview_offsetfromdp(13740720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->m_axi_wstrb.bind(*p_47_m_axi_wstrb);
        p_47_m_axi_wstrb->set_sv_netview_offsetfromdp(13740776);
        xsim_sc_channel<0, bool > *p_47_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_wvalid.bind(*p_47_m_axi_wvalid);
        p_47_m_axi_wvalid->set_sv_netview_offsetfromdp(13740832);
        xsim_sc_channel<0, bool > *p_47_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_wready.bind(*p_47_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->m_axi_bresp.bind(*p_47_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_47_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_bvalid.bind(*p_47_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_47_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_bready.bind(*p_47_m_axi_bready);
        p_47_m_axi_bready->set_sv_netview_offsetfromdp(13741056);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->m_axi_araddr.bind(*p_47_m_axi_araddr);
        p_47_m_axi_araddr->set_sv_netview_offsetfromdp(13741112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->m_axi_arprot.bind(*p_47_m_axi_arprot);
        p_47_m_axi_arprot->set_sv_netview_offsetfromdp(13741168);
        xsim_sc_channel<0, bool > *p_47_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_arvalid.bind(*p_47_m_axi_arvalid);
        p_47_m_axi_arvalid->set_sv_netview_offsetfromdp(13741224);
        xsim_sc_channel<0, bool > *p_47_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_arready.bind(*p_47_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->m_axi_rdata.bind(*p_47_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->m_axi_rresp.bind(*p_47_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_47_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_rvalid.bind(*p_47_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_47_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_rready.bind(*p_47_m_axi_rready);
        p_47_m_axi_rready->set_sv_netview_offsetfromdp(13741504);
        sc_inst_48 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.auto_cc");
        sc_inst_48->xsim_set_dbg_index(3645);
        xsim_sc_channel<0, bool > *p_48_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aclk.bind(*p_48_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_48_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aresetn.bind(*p_48_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aresetn);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_48_s_axi_awaddr = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_48->s_axi_awaddr.bind(*p_48_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awprot.bind(*p_48_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awvalid.bind(*p_48_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awready.bind(*p_48_s_axi_awready);
        p_48_s_axi_awready->set_sv_netview_offsetfromdp(13778528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_wdata.bind(*p_48_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_wstrb.bind(*p_48_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_48_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wvalid.bind(*p_48_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wready.bind(*p_48_s_axi_wready);
        p_48_s_axi_wready->set_sv_netview_offsetfromdp(13778752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_bresp.bind(*p_48_s_axi_bresp);
        p_48_s_axi_bresp->set_sv_netview_offsetfromdp(13778808);
        xsim_sc_channel<0, bool > *p_48_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bvalid.bind(*p_48_s_axi_bvalid);
        p_48_s_axi_bvalid->set_sv_netview_offsetfromdp(13778864);
        xsim_sc_channel<0, bool > *p_48_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bready.bind(*p_48_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_bready);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_48_s_axi_araddr = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_48->s_axi_araddr.bind(*p_48_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arprot.bind(*p_48_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arvalid.bind(*p_48_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arready.bind(*p_48_s_axi_arready);
        p_48_s_axi_arready->set_sv_netview_offsetfromdp(13779144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_rdata.bind(*p_48_s_axi_rdata);
        p_48_s_axi_rdata->set_sv_netview_offsetfromdp(13779200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_rresp.bind(*p_48_s_axi_rresp);
        p_48_s_axi_rresp->set_sv_netview_offsetfromdp(13779256);
        xsim_sc_channel<0, bool > *p_48_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rvalid.bind(*p_48_s_axi_rvalid);
        p_48_s_axi_rvalid->set_sv_netview_offsetfromdp(13779312);
        xsim_sc_channel<0, bool > *p_48_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rready.bind(*p_48_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_rready);
        xsim_sc_channel<0, bool > *p_48_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_aclk.bind(*p_48_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_48_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_aresetn.bind(*p_48_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_aresetn);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_48_m_axi_awaddr = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_48->m_axi_awaddr.bind(*p_48_m_axi_awaddr);
        p_48_m_axi_awaddr->set_sv_netview_offsetfromdp(13779536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_awprot.bind(*p_48_m_axi_awprot);
        p_48_m_axi_awprot->set_sv_netview_offsetfromdp(13779592);
        xsim_sc_channel<0, bool > *p_48_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awvalid.bind(*p_48_m_axi_awvalid);
        p_48_m_axi_awvalid->set_sv_netview_offsetfromdp(13779648);
        xsim_sc_channel<0, bool > *p_48_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awready.bind(*p_48_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_wdata.bind(*p_48_m_axi_wdata);
        p_48_m_axi_wdata->set_sv_netview_offsetfromdp(13779760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_wstrb.bind(*p_48_m_axi_wstrb);
        p_48_m_axi_wstrb->set_sv_netview_offsetfromdp(13779816);
        xsim_sc_channel<0, bool > *p_48_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wvalid.bind(*p_48_m_axi_wvalid);
        p_48_m_axi_wvalid->set_sv_netview_offsetfromdp(13779872);
        xsim_sc_channel<0, bool > *p_48_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wready.bind(*p_48_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_bresp.bind(*p_48_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bvalid.bind(*p_48_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bready.bind(*p_48_m_axi_bready);
        p_48_m_axi_bready->set_sv_netview_offsetfromdp(13780096);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_48_m_axi_araddr = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_48->m_axi_araddr.bind(*p_48_m_axi_araddr);
        p_48_m_axi_araddr->set_sv_netview_offsetfromdp(13780152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_arprot.bind(*p_48_m_axi_arprot);
        p_48_m_axi_arprot->set_sv_netview_offsetfromdp(13780208);
        xsim_sc_channel<0, bool > *p_48_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arvalid.bind(*p_48_m_axi_arvalid);
        p_48_m_axi_arvalid->set_sv_netview_offsetfromdp(13780264);
        xsim_sc_channel<0, bool > *p_48_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arready.bind(*p_48_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_rdata.bind(*p_48_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_rresp.bind(*p_48_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rvalid.bind(*p_48_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rready.bind(*p_48_m_axi_rready);
        p_48_m_axi_rready->set_sv_netview_offsetfromdp(13780544);
        sc_inst_49 = new pfm_dynamic_m02_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.m02_regslice");
        sc_inst_49->xsim_set_dbg_index(3646);
        xsim_sc_channel<0, bool > *p_49_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_49->aclk.bind(*p_49_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_49_aclk);
        xsim_sc_channel<0, bool > *p_49_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_49->aresetn.bind(*p_49_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_49_aresetn);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_49_s_axi_awaddr = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_49->s_axi_awaddr.bind(*p_49_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_awprot.bind(*p_49_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_49_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awvalid.bind(*p_49_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awready.bind(*p_49_s_axi_awready);
        p_49_s_axi_awready->set_sv_netview_offsetfromdp(13780928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->s_axi_wdata.bind(*p_49_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_wstrb.bind(*p_49_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_49_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wvalid.bind(*p_49_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wready.bind(*p_49_s_axi_wready);
        p_49_s_axi_wready->set_sv_netview_offsetfromdp(13781152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_bresp.bind(*p_49_s_axi_bresp);
        p_49_s_axi_bresp->set_sv_netview_offsetfromdp(13781208);
        xsim_sc_channel<0, bool > *p_49_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bvalid.bind(*p_49_s_axi_bvalid);
        p_49_s_axi_bvalid->set_sv_netview_offsetfromdp(13781264);
        xsim_sc_channel<0, bool > *p_49_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bready.bind(*p_49_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_bready);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_49_s_axi_araddr = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_49->s_axi_araddr.bind(*p_49_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_arprot.bind(*p_49_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_49_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arvalid.bind(*p_49_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arready.bind(*p_49_s_axi_arready);
        p_49_s_axi_arready->set_sv_netview_offsetfromdp(13781544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->s_axi_rdata.bind(*p_49_s_axi_rdata);
        p_49_s_axi_rdata->set_sv_netview_offsetfromdp(13781600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_rresp.bind(*p_49_s_axi_rresp);
        p_49_s_axi_rresp->set_sv_netview_offsetfromdp(13781656);
        xsim_sc_channel<0, bool > *p_49_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rvalid.bind(*p_49_s_axi_rvalid);
        p_49_s_axi_rvalid->set_sv_netview_offsetfromdp(13781712);
        xsim_sc_channel<0, bool > *p_49_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rready.bind(*p_49_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_rready);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_49_m_axi_awaddr = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_49->m_axi_awaddr.bind(*p_49_m_axi_awaddr);
        p_49_m_axi_awaddr->set_sv_netview_offsetfromdp(13781824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->m_axi_awprot.bind(*p_49_m_axi_awprot);
        p_49_m_axi_awprot->set_sv_netview_offsetfromdp(13781880);
        xsim_sc_channel<0, bool > *p_49_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_awvalid.bind(*p_49_m_axi_awvalid);
        p_49_m_axi_awvalid->set_sv_netview_offsetfromdp(13781936);
        xsim_sc_channel<0, bool > *p_49_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_awready.bind(*p_49_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->m_axi_wdata.bind(*p_49_m_axi_wdata);
        p_49_m_axi_wdata->set_sv_netview_offsetfromdp(13782048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->m_axi_wstrb.bind(*p_49_m_axi_wstrb);
        p_49_m_axi_wstrb->set_sv_netview_offsetfromdp(13782104);
        xsim_sc_channel<0, bool > *p_49_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_wvalid.bind(*p_49_m_axi_wvalid);
        p_49_m_axi_wvalid->set_sv_netview_offsetfromdp(13782160);
        xsim_sc_channel<0, bool > *p_49_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_wready.bind(*p_49_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->m_axi_bresp.bind(*p_49_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_49_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_bvalid.bind(*p_49_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_49_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_bready.bind(*p_49_m_axi_bready);
        p_49_m_axi_bready->set_sv_netview_offsetfromdp(13782384);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_49_m_axi_araddr = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_49->m_axi_araddr.bind(*p_49_m_axi_araddr);
        p_49_m_axi_araddr->set_sv_netview_offsetfromdp(13782440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->m_axi_arprot.bind(*p_49_m_axi_arprot);
        p_49_m_axi_arprot->set_sv_netview_offsetfromdp(13782496);
        xsim_sc_channel<0, bool > *p_49_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_arvalid.bind(*p_49_m_axi_arvalid);
        p_49_m_axi_arvalid->set_sv_netview_offsetfromdp(13782552);
        xsim_sc_channel<0, bool > *p_49_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_arready.bind(*p_49_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->m_axi_rdata.bind(*p_49_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->m_axi_rresp.bind(*p_49_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_49_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_rvalid.bind(*p_49_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_49_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_rready.bind(*p_49_m_axi_rready);
        p_49_m_axi_rready->set_sv_netview_offsetfromdp(13782832);
        sc_inst_50 = new pfm_dynamic_xbar_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_50->xsim_set_dbg_index(1359);
        xsim_sc_channel<0, bool > *p_50_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->aclk.bind(*p_50_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_aclk);
        xsim_sc_channel<0, bool > *p_50_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->aresetn.bind(*p_50_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->s_axi_awaddr.bind(*p_50_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awprot.bind(*p_50_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->s_axi_awvalid.bind(*p_50_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->s_axi_awready.bind(*p_50_s_axi_awready);
        p_50_s_axi_awready->set_sv_netview_offsetfromdp(13793392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_wdata.bind(*p_50_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_wstrb.bind(*p_50_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->s_axi_wvalid.bind(*p_50_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->s_axi_wready.bind(*p_50_s_axi_wready);
        p_50_s_axi_wready->set_sv_netview_offsetfromdp(13793616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_bresp.bind(*p_50_s_axi_bresp);
        p_50_s_axi_bresp->set_sv_netview_offsetfromdp(13793672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->s_axi_bvalid.bind(*p_50_s_axi_bvalid);
        p_50_s_axi_bvalid->set_sv_netview_offsetfromdp(13793728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->s_axi_bready.bind(*p_50_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->s_axi_araddr.bind(*p_50_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arprot.bind(*p_50_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->s_axi_arvalid.bind(*p_50_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->s_axi_arready.bind(*p_50_s_axi_arready);
        p_50_s_axi_arready->set_sv_netview_offsetfromdp(13794008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_rdata.bind(*p_50_s_axi_rdata);
        p_50_s_axi_rdata->set_sv_netview_offsetfromdp(13794064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_rresp.bind(*p_50_s_axi_rresp);
        p_50_s_axi_rresp->set_sv_netview_offsetfromdp(13794120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->s_axi_rvalid.bind(*p_50_s_axi_rvalid);
        p_50_s_axi_rvalid->set_sv_netview_offsetfromdp(13794176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->s_axi_rready.bind(*p_50_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_50_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_50->m_axi_awaddr.bind(*p_50_m_axi_awaddr);
        p_50_m_axi_awaddr->set_sv_netview_offsetfromdp(13794288);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_50_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_50->m_axi_awprot.bind(*p_50_m_axi_awprot);
        p_50_m_axi_awprot->set_sv_netview_offsetfromdp(13794344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_awvalid.bind(*p_50_m_axi_awvalid);
        p_50_m_axi_awvalid->set_sv_netview_offsetfromdp(13794400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_awready.bind(*p_50_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_50_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_50->m_axi_wdata.bind(*p_50_m_axi_wdata);
        p_50_m_axi_wdata->set_sv_netview_offsetfromdp(13794512);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_50_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_50->m_axi_wstrb.bind(*p_50_m_axi_wstrb);
        p_50_m_axi_wstrb->set_sv_netview_offsetfromdp(13794568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_wvalid.bind(*p_50_m_axi_wvalid);
        p_50_m_axi_wvalid->set_sv_netview_offsetfromdp(13794624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_wready.bind(*p_50_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_50_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_50->m_axi_bresp.bind(*p_50_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_bvalid.bind(*p_50_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_bready.bind(*p_50_m_axi_bready);
        p_50_m_axi_bready->set_sv_netview_offsetfromdp(13794848);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_50_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_50->m_axi_araddr.bind(*p_50_m_axi_araddr);
        p_50_m_axi_araddr->set_sv_netview_offsetfromdp(13794904);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_50_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_50->m_axi_arprot.bind(*p_50_m_axi_arprot);
        p_50_m_axi_arprot->set_sv_netview_offsetfromdp(13794960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_arvalid.bind(*p_50_m_axi_arvalid);
        p_50_m_axi_arvalid->set_sv_netview_offsetfromdp(13795016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_arready.bind(*p_50_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_50_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_50->m_axi_rdata.bind(*p_50_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_50_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_50->m_axi_rresp.bind(*p_50_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_rvalid.bind(*p_50_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_rready.bind(*p_50_m_axi_rready);
        p_50_m_axi_rready->set_sv_netview_offsetfromdp(13795296);
        sc_inst_51 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_51->xsim_set_dbg_index(64);
        xsim_sc_channel<0, bool > *p_51_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->aclk.bind(*p_51_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aclk);
        xsim_sc_channel<0, bool > *p_51_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->aresetn.bind(*p_51_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->S00_AXI_awid.bind(*p_51_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->S00_AXI_awaddr.bind(*p_51_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->S00_AXI_awlen.bind(*p_51_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->S00_AXI_awsize.bind(*p_51_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->S00_AXI_awburst.bind(*p_51_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->S00_AXI_awlock.bind(*p_51_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->S00_AXI_awcache.bind(*p_51_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->S00_AXI_awprot.bind(*p_51_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->S00_AXI_awqos.bind(*p_51_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_51_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->S00_AXI_awvalid.bind(*p_51_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_51_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->S00_AXI_awready.bind(*p_51_S00_AXI_awready);
        p_51_S00_AXI_awready->set_sv_netview_offsetfromdp(15052000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->S00_AXI_wdata.bind(*p_51_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->S00_AXI_wstrb.bind(*p_51_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_51_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->S00_AXI_wlast.bind(*p_51_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_51_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->S00_AXI_wvalid.bind(*p_51_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_51_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->S00_AXI_wready.bind(*p_51_S00_AXI_wready);
        p_51_S00_AXI_wready->set_sv_netview_offsetfromdp(15052280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->S00_AXI_bid.bind(*p_51_S00_AXI_bid);
        p_51_S00_AXI_bid->set_sv_netview_offsetfromdp(15052336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->S00_AXI_bresp.bind(*p_51_S00_AXI_bresp);
        p_51_S00_AXI_bresp->set_sv_netview_offsetfromdp(15052392);
        xsim_sc_channel<0, bool > *p_51_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->S00_AXI_bvalid.bind(*p_51_S00_AXI_bvalid);
        p_51_S00_AXI_bvalid->set_sv_netview_offsetfromdp(15052448);
        xsim_sc_channel<0, bool > *p_51_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->S00_AXI_bready.bind(*p_51_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->S00_AXI_arid.bind(*p_51_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->S00_AXI_araddr.bind(*p_51_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->S00_AXI_arlen.bind(*p_51_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->S00_AXI_arsize.bind(*p_51_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->S00_AXI_arburst.bind(*p_51_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->S00_AXI_arlock.bind(*p_51_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->S00_AXI_arcache.bind(*p_51_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->S00_AXI_arprot.bind(*p_51_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->S00_AXI_arqos.bind(*p_51_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_51_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->S00_AXI_arvalid.bind(*p_51_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_51_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->S00_AXI_arready.bind(*p_51_S00_AXI_arready);
        p_51_S00_AXI_arready->set_sv_netview_offsetfromdp(15053120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->S00_AXI_rid.bind(*p_51_S00_AXI_rid);
        p_51_S00_AXI_rid->set_sv_netview_offsetfromdp(15053176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->S00_AXI_rdata.bind(*p_51_S00_AXI_rdata);
        p_51_S00_AXI_rdata->set_sv_netview_offsetfromdp(15053232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->S00_AXI_rresp.bind(*p_51_S00_AXI_rresp);
        p_51_S00_AXI_rresp->set_sv_netview_offsetfromdp(15053288);
        xsim_sc_channel<0, bool > *p_51_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->S00_AXI_rlast.bind(*p_51_S00_AXI_rlast);
        p_51_S00_AXI_rlast->set_sv_netview_offsetfromdp(15053344);
        xsim_sc_channel<0, bool > *p_51_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->S00_AXI_rvalid.bind(*p_51_S00_AXI_rvalid);
        p_51_S00_AXI_rvalid->set_sv_netview_offsetfromdp(15053400);
        xsim_sc_channel<0, bool > *p_51_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->S00_AXI_rready.bind(*p_51_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_51_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_51->M00_AXI_awaddr.bind(*p_51_M00_AXI_awaddr);
        p_51_M00_AXI_awaddr->set_sv_netview_offsetfromdp(15053512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->M00_AXI_awlen.bind(*p_51_M00_AXI_awlen);
        p_51_M00_AXI_awlen->set_sv_netview_offsetfromdp(15053568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->M00_AXI_awsize.bind(*p_51_M00_AXI_awsize);
        p_51_M00_AXI_awsize->set_sv_netview_offsetfromdp(15053624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->M00_AXI_awburst.bind(*p_51_M00_AXI_awburst);
        p_51_M00_AXI_awburst->set_sv_netview_offsetfromdp(15053680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->M00_AXI_awlock.bind(*p_51_M00_AXI_awlock);
        p_51_M00_AXI_awlock->set_sv_netview_offsetfromdp(15053736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M00_AXI_awcache.bind(*p_51_M00_AXI_awcache);
        p_51_M00_AXI_awcache->set_sv_netview_offsetfromdp(15053792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->M00_AXI_awprot.bind(*p_51_M00_AXI_awprot);
        p_51_M00_AXI_awprot->set_sv_netview_offsetfromdp(15053848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M00_AXI_awqos.bind(*p_51_M00_AXI_awqos);
        p_51_M00_AXI_awqos->set_sv_netview_offsetfromdp(15053904);
        xsim_sc_channel<0, bool > *p_51_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M00_AXI_awvalid.bind(*p_51_M00_AXI_awvalid);
        p_51_M00_AXI_awvalid->set_sv_netview_offsetfromdp(15053960);
        xsim_sc_channel<0, bool > *p_51_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M00_AXI_awready.bind(*p_51_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->M00_AXI_wdata.bind(*p_51_M00_AXI_wdata);
        p_51_M00_AXI_wdata->set_sv_netview_offsetfromdp(15054072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M00_AXI_wstrb.bind(*p_51_M00_AXI_wstrb);
        p_51_M00_AXI_wstrb->set_sv_netview_offsetfromdp(15054128);
        xsim_sc_channel<0, bool > *p_51_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->M00_AXI_wlast.bind(*p_51_M00_AXI_wlast);
        p_51_M00_AXI_wlast->set_sv_netview_offsetfromdp(15054184);
        xsim_sc_channel<0, bool > *p_51_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M00_AXI_wvalid.bind(*p_51_M00_AXI_wvalid);
        p_51_M00_AXI_wvalid->set_sv_netview_offsetfromdp(15054240);
        xsim_sc_channel<0, bool > *p_51_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M00_AXI_wready.bind(*p_51_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->M00_AXI_bresp.bind(*p_51_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_51_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M00_AXI_bvalid.bind(*p_51_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_51_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M00_AXI_bready.bind(*p_51_M00_AXI_bready);
        p_51_M00_AXI_bready->set_sv_netview_offsetfromdp(15054464);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_51_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_51->M00_AXI_araddr.bind(*p_51_M00_AXI_araddr);
        p_51_M00_AXI_araddr->set_sv_netview_offsetfromdp(15054520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->M00_AXI_arlen.bind(*p_51_M00_AXI_arlen);
        p_51_M00_AXI_arlen->set_sv_netview_offsetfromdp(15054576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->M00_AXI_arsize.bind(*p_51_M00_AXI_arsize);
        p_51_M00_AXI_arsize->set_sv_netview_offsetfromdp(15054632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->M00_AXI_arburst.bind(*p_51_M00_AXI_arburst);
        p_51_M00_AXI_arburst->set_sv_netview_offsetfromdp(15054688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->M00_AXI_arlock.bind(*p_51_M00_AXI_arlock);
        p_51_M00_AXI_arlock->set_sv_netview_offsetfromdp(15054744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M00_AXI_arcache.bind(*p_51_M00_AXI_arcache);
        p_51_M00_AXI_arcache->set_sv_netview_offsetfromdp(15054800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->M00_AXI_arprot.bind(*p_51_M00_AXI_arprot);
        p_51_M00_AXI_arprot->set_sv_netview_offsetfromdp(15054856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M00_AXI_arqos.bind(*p_51_M00_AXI_arqos);
        p_51_M00_AXI_arqos->set_sv_netview_offsetfromdp(15054912);
        xsim_sc_channel<0, bool > *p_51_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M00_AXI_arvalid.bind(*p_51_M00_AXI_arvalid);
        p_51_M00_AXI_arvalid->set_sv_netview_offsetfromdp(15054968);
        xsim_sc_channel<0, bool > *p_51_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M00_AXI_arready.bind(*p_51_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->M00_AXI_rdata.bind(*p_51_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->M00_AXI_rresp.bind(*p_51_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_51_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->M00_AXI_rlast.bind(*p_51_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_51_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M00_AXI_rvalid.bind(*p_51_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_51_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M00_AXI_rready.bind(*p_51_M00_AXI_rready);
        p_51_M00_AXI_rready->set_sv_netview_offsetfromdp(15055304);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_51_M01_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_51->M01_AXI_awaddr.bind(*p_51_M01_AXI_awaddr);
        p_51_M01_AXI_awaddr->set_sv_netview_offsetfromdp(15055360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->M01_AXI_awlen.bind(*p_51_M01_AXI_awlen);
        p_51_M01_AXI_awlen->set_sv_netview_offsetfromdp(15055416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->M01_AXI_awsize.bind(*p_51_M01_AXI_awsize);
        p_51_M01_AXI_awsize->set_sv_netview_offsetfromdp(15055472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->M01_AXI_awburst.bind(*p_51_M01_AXI_awburst);
        p_51_M01_AXI_awburst->set_sv_netview_offsetfromdp(15055528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->M01_AXI_awlock.bind(*p_51_M01_AXI_awlock);
        p_51_M01_AXI_awlock->set_sv_netview_offsetfromdp(15055584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M01_AXI_awcache.bind(*p_51_M01_AXI_awcache);
        p_51_M01_AXI_awcache->set_sv_netview_offsetfromdp(15055640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->M01_AXI_awprot.bind(*p_51_M01_AXI_awprot);
        p_51_M01_AXI_awprot->set_sv_netview_offsetfromdp(15055696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M01_AXI_awqos.bind(*p_51_M01_AXI_awqos);
        p_51_M01_AXI_awqos->set_sv_netview_offsetfromdp(15055752);
        xsim_sc_channel<0, bool > *p_51_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M01_AXI_awvalid.bind(*p_51_M01_AXI_awvalid);
        p_51_M01_AXI_awvalid->set_sv_netview_offsetfromdp(15055808);
        xsim_sc_channel<0, bool > *p_51_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M01_AXI_awready.bind(*p_51_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->M01_AXI_wdata.bind(*p_51_M01_AXI_wdata);
        p_51_M01_AXI_wdata->set_sv_netview_offsetfromdp(15055920);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->M01_AXI_wstrb.bind(*p_51_M01_AXI_wstrb);
        p_51_M01_AXI_wstrb->set_sv_netview_offsetfromdp(15055976);
        xsim_sc_channel<0, bool > *p_51_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->M01_AXI_wlast.bind(*p_51_M01_AXI_wlast);
        p_51_M01_AXI_wlast->set_sv_netview_offsetfromdp(15056032);
        xsim_sc_channel<0, bool > *p_51_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M01_AXI_wvalid.bind(*p_51_M01_AXI_wvalid);
        p_51_M01_AXI_wvalid->set_sv_netview_offsetfromdp(15056088);
        xsim_sc_channel<0, bool > *p_51_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M01_AXI_wready.bind(*p_51_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->M01_AXI_bresp.bind(*p_51_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_51_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M01_AXI_bvalid.bind(*p_51_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_51_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M01_AXI_bready.bind(*p_51_M01_AXI_bready);
        p_51_M01_AXI_bready->set_sv_netview_offsetfromdp(15056312);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_51_M01_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_51->M01_AXI_araddr.bind(*p_51_M01_AXI_araddr);
        p_51_M01_AXI_araddr->set_sv_netview_offsetfromdp(15056368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->M01_AXI_arlen.bind(*p_51_M01_AXI_arlen);
        p_51_M01_AXI_arlen->set_sv_netview_offsetfromdp(15056424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->M01_AXI_arsize.bind(*p_51_M01_AXI_arsize);
        p_51_M01_AXI_arsize->set_sv_netview_offsetfromdp(15056480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->M01_AXI_arburst.bind(*p_51_M01_AXI_arburst);
        p_51_M01_AXI_arburst->set_sv_netview_offsetfromdp(15056536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->M01_AXI_arlock.bind(*p_51_M01_AXI_arlock);
        p_51_M01_AXI_arlock->set_sv_netview_offsetfromdp(15056592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M01_AXI_arcache.bind(*p_51_M01_AXI_arcache);
        p_51_M01_AXI_arcache->set_sv_netview_offsetfromdp(15056648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->M01_AXI_arprot.bind(*p_51_M01_AXI_arprot);
        p_51_M01_AXI_arprot->set_sv_netview_offsetfromdp(15056704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M01_AXI_arqos.bind(*p_51_M01_AXI_arqos);
        p_51_M01_AXI_arqos->set_sv_netview_offsetfromdp(15056760);
        xsim_sc_channel<0, bool > *p_51_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M01_AXI_arvalid.bind(*p_51_M01_AXI_arvalid);
        p_51_M01_AXI_arvalid->set_sv_netview_offsetfromdp(15056816);
        xsim_sc_channel<0, bool > *p_51_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M01_AXI_arready.bind(*p_51_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->M01_AXI_rdata.bind(*p_51_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->M01_AXI_rresp.bind(*p_51_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_51_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->M01_AXI_rlast.bind(*p_51_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_51_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M01_AXI_rvalid.bind(*p_51_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_51_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M01_AXI_rready.bind(*p_51_M01_AXI_rready);
        p_51_M01_AXI_rready->set_sv_netview_offsetfromdp(15057152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_M02_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->M02_AXI_awaddr.bind(*p_51_M02_AXI_awaddr);
        p_51_M02_AXI_awaddr->set_sv_netview_offsetfromdp(15057208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->M02_AXI_awlen.bind(*p_51_M02_AXI_awlen);
        p_51_M02_AXI_awlen->set_sv_netview_offsetfromdp(15057264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->M02_AXI_awsize.bind(*p_51_M02_AXI_awsize);
        p_51_M02_AXI_awsize->set_sv_netview_offsetfromdp(15057320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->M02_AXI_awburst.bind(*p_51_M02_AXI_awburst);
        p_51_M02_AXI_awburst->set_sv_netview_offsetfromdp(15057376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->M02_AXI_awlock.bind(*p_51_M02_AXI_awlock);
        p_51_M02_AXI_awlock->set_sv_netview_offsetfromdp(15057432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M02_AXI_awcache.bind(*p_51_M02_AXI_awcache);
        p_51_M02_AXI_awcache->set_sv_netview_offsetfromdp(15057488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->M02_AXI_awprot.bind(*p_51_M02_AXI_awprot);
        p_51_M02_AXI_awprot->set_sv_netview_offsetfromdp(15057544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M02_AXI_awqos.bind(*p_51_M02_AXI_awqos);
        p_51_M02_AXI_awqos->set_sv_netview_offsetfromdp(15057600);
        xsim_sc_channel<0, bool > *p_51_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M02_AXI_awvalid.bind(*p_51_M02_AXI_awvalid);
        p_51_M02_AXI_awvalid->set_sv_netview_offsetfromdp(15057656);
        xsim_sc_channel<0, bool > *p_51_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M02_AXI_awready.bind(*p_51_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M02_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_M02_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->M02_AXI_wdata.bind(*p_51_M02_AXI_wdata);
        p_51_M02_AXI_wdata->set_sv_netview_offsetfromdp(15057768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_M02_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->M02_AXI_wstrb.bind(*p_51_M02_AXI_wstrb);
        p_51_M02_AXI_wstrb->set_sv_netview_offsetfromdp(15057824);
        xsim_sc_channel<0, bool > *p_51_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->M02_AXI_wlast.bind(*p_51_M02_AXI_wlast);
        p_51_M02_AXI_wlast->set_sv_netview_offsetfromdp(15057880);
        xsim_sc_channel<0, bool > *p_51_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M02_AXI_wvalid.bind(*p_51_M02_AXI_wvalid);
        p_51_M02_AXI_wvalid->set_sv_netview_offsetfromdp(15057936);
        xsim_sc_channel<0, bool > *p_51_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M02_AXI_wready.bind(*p_51_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->M02_AXI_bresp.bind(*p_51_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_51_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M02_AXI_bvalid.bind(*p_51_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_51_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M02_AXI_bready.bind(*p_51_M02_AXI_bready);
        p_51_M02_AXI_bready->set_sv_netview_offsetfromdp(15058160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_M02_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->M02_AXI_araddr.bind(*p_51_M02_AXI_araddr);
        p_51_M02_AXI_araddr->set_sv_netview_offsetfromdp(15058216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->M02_AXI_arlen.bind(*p_51_M02_AXI_arlen);
        p_51_M02_AXI_arlen->set_sv_netview_offsetfromdp(15058272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->M02_AXI_arsize.bind(*p_51_M02_AXI_arsize);
        p_51_M02_AXI_arsize->set_sv_netview_offsetfromdp(15058328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->M02_AXI_arburst.bind(*p_51_M02_AXI_arburst);
        p_51_M02_AXI_arburst->set_sv_netview_offsetfromdp(15058384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->M02_AXI_arlock.bind(*p_51_M02_AXI_arlock);
        p_51_M02_AXI_arlock->set_sv_netview_offsetfromdp(15058440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M02_AXI_arcache.bind(*p_51_M02_AXI_arcache);
        p_51_M02_AXI_arcache->set_sv_netview_offsetfromdp(15058496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->M02_AXI_arprot.bind(*p_51_M02_AXI_arprot);
        p_51_M02_AXI_arprot->set_sv_netview_offsetfromdp(15058552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->M02_AXI_arqos.bind(*p_51_M02_AXI_arqos);
        p_51_M02_AXI_arqos->set_sv_netview_offsetfromdp(15058608);
        xsim_sc_channel<0, bool > *p_51_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M02_AXI_arvalid.bind(*p_51_M02_AXI_arvalid);
        p_51_M02_AXI_arvalid->set_sv_netview_offsetfromdp(15058664);
        xsim_sc_channel<0, bool > *p_51_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M02_AXI_arready.bind(*p_51_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M02_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_M02_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->M02_AXI_rdata.bind(*p_51_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->M02_AXI_rresp.bind(*p_51_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_51_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->M02_AXI_rlast.bind(*p_51_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_51_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->M02_AXI_rvalid.bind(*p_51_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_51_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->M02_AXI_rready.bind(*p_51_M02_AXI_rready);
        p_51_M02_AXI_rready->set_sv_netview_offsetfromdp(15059000);
        sc_inst_52 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_52->xsim_set_dbg_index(40);
        sc_inst_53 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_53->xsim_set_dbg_index(209);
        xsim_sc_channel<0, bool > *p_53_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->aclk.bind(*p_53_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_aclk);
        xsim_sc_channel<0, bool > *p_53_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->aresetn.bind(*p_53_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_awaddr.bind(*p_53_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_awlen.bind(*p_53_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_awburst.bind(*p_53_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->s_axi_awlock.bind(*p_53_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awcache.bind(*p_53_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awprot.bind(*p_53_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awqos.bind(*p_53_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_awuser.bind(*p_53_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_53_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awvalid.bind(*p_53_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awready.bind(*p_53_s_axi_awready);
        p_53_s_axi_awready->set_sv_netview_offsetfromdp(15238856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_wdata.bind(*p_53_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_wstrb.bind(*p_53_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_53_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wlast.bind(*p_53_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_53_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wvalid.bind(*p_53_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wready.bind(*p_53_s_axi_wready);
        p_53_s_axi_wready->set_sv_netview_offsetfromdp(15239136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_bresp.bind(*p_53_s_axi_bresp);
        p_53_s_axi_bresp->set_sv_netview_offsetfromdp(15239192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->s_axi_buser.bind(*p_53_s_axi_buser);
        p_53_s_axi_buser->set_sv_netview_offsetfromdp(15239248);
        xsim_sc_channel<0, bool > *p_53_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bvalid.bind(*p_53_s_axi_bvalid);
        p_53_s_axi_bvalid->set_sv_netview_offsetfromdp(15239304);
        xsim_sc_channel<0, bool > *p_53_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bready.bind(*p_53_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_araddr.bind(*p_53_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_arlen.bind(*p_53_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_arburst.bind(*p_53_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->s_axi_arlock.bind(*p_53_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arcache.bind(*p_53_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arprot.bind(*p_53_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arqos.bind(*p_53_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_aruser.bind(*p_53_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_53_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arvalid.bind(*p_53_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arready.bind(*p_53_s_axi_arready);
        p_53_s_axi_arready->set_sv_netview_offsetfromdp(15239920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_rdata.bind(*p_53_s_axi_rdata);
        p_53_s_axi_rdata->set_sv_netview_offsetfromdp(15239976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_rresp.bind(*p_53_s_axi_rresp);
        p_53_s_axi_rresp->set_sv_netview_offsetfromdp(15240032);
        xsim_sc_channel<0, bool > *p_53_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rlast.bind(*p_53_s_axi_rlast);
        p_53_s_axi_rlast->set_sv_netview_offsetfromdp(15240088);
        xsim_sc_channel<0, bool > *p_53_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rvalid.bind(*p_53_s_axi_rvalid);
        p_53_s_axi_rvalid->set_sv_netview_offsetfromdp(15240144);
        xsim_sc_channel<0, bool > *p_53_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rready.bind(*p_53_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_awaddr.bind(*p_53_m_axi_awaddr);
        p_53_m_axi_awaddr->set_sv_netview_offsetfromdp(15240256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->m_axi_awlen.bind(*p_53_m_axi_awlen);
        p_53_m_axi_awlen->set_sv_netview_offsetfromdp(15240312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_awburst.bind(*p_53_m_axi_awburst);
        p_53_m_axi_awburst->set_sv_netview_offsetfromdp(15240368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_axi_awlock.bind(*p_53_m_axi_awlock);
        p_53_m_axi_awlock->set_sv_netview_offsetfromdp(15240424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_awcache.bind(*p_53_m_axi_awcache);
        p_53_m_axi_awcache->set_sv_netview_offsetfromdp(15240480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_awprot.bind(*p_53_m_axi_awprot);
        p_53_m_axi_awprot->set_sv_netview_offsetfromdp(15240536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_awqos.bind(*p_53_m_axi_awqos);
        p_53_m_axi_awqos->set_sv_netview_offsetfromdp(15240592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_awuser.bind(*p_53_m_axi_awuser);
        p_53_m_axi_awuser->set_sv_netview_offsetfromdp(15240648);
        xsim_sc_channel<0, bool > *p_53_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awvalid.bind(*p_53_m_axi_awvalid);
        p_53_m_axi_awvalid->set_sv_netview_offsetfromdp(15240704);
        xsim_sc_channel<0, bool > *p_53_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awready.bind(*p_53_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_wdata.bind(*p_53_m_axi_wdata);
        p_53_m_axi_wdata->set_sv_netview_offsetfromdp(15240816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_wstrb.bind(*p_53_m_axi_wstrb);
        p_53_m_axi_wstrb->set_sv_netview_offsetfromdp(15240872);
        xsim_sc_channel<0, bool > *p_53_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wlast.bind(*p_53_m_axi_wlast);
        p_53_m_axi_wlast->set_sv_netview_offsetfromdp(15240928);
        xsim_sc_channel<0, bool > *p_53_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wvalid.bind(*p_53_m_axi_wvalid);
        p_53_m_axi_wvalid->set_sv_netview_offsetfromdp(15240984);
        xsim_sc_channel<0, bool > *p_53_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wready.bind(*p_53_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_bresp.bind(*p_53_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_axi_buser.bind(*p_53_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_buser);
        xsim_sc_channel<0, bool > *p_53_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bvalid.bind(*p_53_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bready.bind(*p_53_m_axi_bready);
        p_53_m_axi_bready->set_sv_netview_offsetfromdp(15241264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_araddr.bind(*p_53_m_axi_araddr);
        p_53_m_axi_araddr->set_sv_netview_offsetfromdp(15241320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->m_axi_arlen.bind(*p_53_m_axi_arlen);
        p_53_m_axi_arlen->set_sv_netview_offsetfromdp(15241376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_arburst.bind(*p_53_m_axi_arburst);
        p_53_m_axi_arburst->set_sv_netview_offsetfromdp(15241432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_axi_arlock.bind(*p_53_m_axi_arlock);
        p_53_m_axi_arlock->set_sv_netview_offsetfromdp(15241488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_arcache.bind(*p_53_m_axi_arcache);
        p_53_m_axi_arcache->set_sv_netview_offsetfromdp(15241544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_arprot.bind(*p_53_m_axi_arprot);
        p_53_m_axi_arprot->set_sv_netview_offsetfromdp(15241600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_arqos.bind(*p_53_m_axi_arqos);
        p_53_m_axi_arqos->set_sv_netview_offsetfromdp(15241656);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_aruser.bind(*p_53_m_axi_aruser);
        p_53_m_axi_aruser->set_sv_netview_offsetfromdp(15241712);
        xsim_sc_channel<0, bool > *p_53_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arvalid.bind(*p_53_m_axi_arvalid);
        p_53_m_axi_arvalid->set_sv_netview_offsetfromdp(15241768);
        xsim_sc_channel<0, bool > *p_53_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arready.bind(*p_53_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_rdata.bind(*p_53_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_rresp.bind(*p_53_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rlast.bind(*p_53_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_53_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rvalid.bind(*p_53_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rready.bind(*p_53_m_axi_rready);
        p_53_m_axi_rready->set_sv_netview_offsetfromdp(15242104);
        sc_inst_54 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_54->xsim_set_dbg_index(604);
        xsim_sc_channel<0, bool > *p_54_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_54->aclk.bind(*p_54_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aclk);
        xsim_sc_channel<0, bool > *p_54_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_54->aresetn.bind(*p_54_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_54_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_54->s_axi_awaddr.bind(*p_54_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_54_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_54->s_axi_awprot.bind(*p_54_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_awvalid.bind(*p_54_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_awready.bind(*p_54_s_axi_awready);
        p_54_s_axi_awready->set_sv_netview_offsetfromdp(15357240);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_wdata.bind(*p_54_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->s_axi_wstrb.bind(*p_54_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_wvalid.bind(*p_54_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_wready.bind(*p_54_s_axi_wready);
        p_54_s_axi_wready->set_sv_netview_offsetfromdp(15357464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_bresp.bind(*p_54_s_axi_bresp);
        p_54_s_axi_bresp->set_sv_netview_offsetfromdp(15357520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_bvalid.bind(*p_54_s_axi_bvalid);
        p_54_s_axi_bvalid->set_sv_netview_offsetfromdp(15357576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_bready.bind(*p_54_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_54_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_54->s_axi_araddr.bind(*p_54_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_54_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_54->s_axi_arprot.bind(*p_54_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_arvalid.bind(*p_54_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_arready.bind(*p_54_s_axi_arready);
        p_54_s_axi_arready->set_sv_netview_offsetfromdp(15357856);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_rdata.bind(*p_54_s_axi_rdata);
        p_54_s_axi_rdata->set_sv_netview_offsetfromdp(15357912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_rresp.bind(*p_54_s_axi_rresp);
        p_54_s_axi_rresp->set_sv_netview_offsetfromdp(15357968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_rvalid.bind(*p_54_s_axi_rvalid);
        p_54_s_axi_rvalid->set_sv_netview_offsetfromdp(15358024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_rready.bind(*p_54_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_54_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_54->m_axi_awaddr.bind(*p_54_m_axi_awaddr);
        p_54_m_axi_awaddr->set_sv_netview_offsetfromdp(15358136);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_54_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_54->m_axi_awprot.bind(*p_54_m_axi_awprot);
        p_54_m_axi_awprot->set_sv_netview_offsetfromdp(15358192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_awvalid.bind(*p_54_m_axi_awvalid);
        p_54_m_axi_awvalid->set_sv_netview_offsetfromdp(15358248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_awready.bind(*p_54_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_54_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_54->m_axi_wdata.bind(*p_54_m_axi_wdata);
        p_54_m_axi_wdata->set_sv_netview_offsetfromdp(15358360);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_54_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_54->m_axi_wstrb.bind(*p_54_m_axi_wstrb);
        p_54_m_axi_wstrb->set_sv_netview_offsetfromdp(15358416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_wvalid.bind(*p_54_m_axi_wvalid);
        p_54_m_axi_wvalid->set_sv_netview_offsetfromdp(15358472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_wready.bind(*p_54_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->m_axi_bresp.bind(*p_54_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_bvalid.bind(*p_54_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_bready.bind(*p_54_m_axi_bready);
        p_54_m_axi_bready->set_sv_netview_offsetfromdp(15358696);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_54_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_54->m_axi_araddr.bind(*p_54_m_axi_araddr);
        p_54_m_axi_araddr->set_sv_netview_offsetfromdp(15358752);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_54_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_54->m_axi_arprot.bind(*p_54_m_axi_arprot);
        p_54_m_axi_arprot->set_sv_netview_offsetfromdp(15358808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_arvalid.bind(*p_54_m_axi_arvalid);
        p_54_m_axi_arvalid->set_sv_netview_offsetfromdp(15358864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_arready.bind(*p_54_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_54_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_54->m_axi_rdata.bind(*p_54_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->m_axi_rresp.bind(*p_54_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_rvalid.bind(*p_54_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_rready.bind(*p_54_m_axi_rready);
        p_54_m_axi_rready->set_sv_netview_offsetfromdp(15359144);
        sc_inst_55 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_55->xsim_set_dbg_index(213);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_55_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_55->interrupt_cu.bind(*p_55_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_55_interrupt_cu);
        xsim_sc_channel<0, bool > *p_55_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_55->interrupt_m2m.bind(*p_55_interrupt_m2m);
        p_55_interrupt_m2m->set_sv_netview_offsetfromdp(15361032);
        xsim_sc_channel<0, bool > *p_55_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_ctrl_user_aresetn.bind(*p_55_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_aresetn.bind(*p_55_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_55_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->maxi_lite_mb_aresetn.bind(*p_55_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_55_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_data_m2m_aresetn.bind(*p_55_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_55_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_ctrl_user_aclk.bind(*p_55_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_aclk.bind(*p_55_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_55_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->maxi_lite_mb_aclk.bind(*p_55_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_55_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_data_m2m_aclk.bind(*p_55_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->s_axi_data_p2p_awaddr.bind(*p_55_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->s_axi_data_p2p_awlen.bind(*p_55_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_data_p2p_awsize.bind(*p_55_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_data_p2p_awburst.bind(*p_55_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_awlock.bind(*p_55_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_data_p2p_awcache.bind(*p_55_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_data_p2p_awprot.bind(*p_55_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_data_p2p_awregion.bind(*p_55_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_data_p2p_awqos.bind(*p_55_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_data_p2p_awuser.bind(*p_55_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_awvalid.bind(*p_55_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_awready.bind(*p_55_s_axi_data_p2p_awready);
        p_55_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(15362152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_data_p2p_wdata.bind(*p_55_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_data_p2p_wstrb.bind(*p_55_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_wlast.bind(*p_55_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_wvalid.bind(*p_55_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_wready.bind(*p_55_s_axi_data_p2p_wready);
        p_55_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(15362432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_data_p2p_bresp.bind(*p_55_s_axi_data_p2p_bresp);
        p_55_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(15362488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_s_axi_data_p2p_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->s_axi_data_p2p_buser.bind(*p_55_s_axi_data_p2p_buser);
        p_55_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(15362544);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_bvalid.bind(*p_55_s_axi_data_p2p_bvalid);
        p_55_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(15362600);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_bready.bind(*p_55_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->s_axi_data_p2p_araddr.bind(*p_55_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->s_axi_data_p2p_arlen.bind(*p_55_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_data_p2p_arsize.bind(*p_55_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_data_p2p_arburst.bind(*p_55_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_arlock.bind(*p_55_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_data_p2p_arcache.bind(*p_55_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_data_p2p_arprot.bind(*p_55_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_data_p2p_arregion.bind(*p_55_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_data_p2p_arqos.bind(*p_55_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_data_p2p_aruser.bind(*p_55_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_arvalid.bind(*p_55_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_arready.bind(*p_55_s_axi_data_p2p_arready);
        p_55_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(15363328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_data_p2p_rdata.bind(*p_55_s_axi_data_p2p_rdata);
        p_55_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(15363384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_data_p2p_rresp.bind(*p_55_s_axi_data_p2p_rresp);
        p_55_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(15363440);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_rlast.bind(*p_55_s_axi_data_p2p_rlast);
        p_55_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(15363496);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_rvalid.bind(*p_55_s_axi_data_p2p_rvalid);
        p_55_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(15363552);
        xsim_sc_channel<0, bool > *p_55_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_data_p2p_rready.bind(*p_55_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->maxi_lite_mb_awaddr.bind(*p_55_maxi_lite_mb_awaddr);
        p_55_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(15363664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->maxi_lite_mb_awprot.bind(*p_55_maxi_lite_mb_awprot);
        p_55_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(15363720);
        xsim_sc_channel<0, bool > *p_55_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->maxi_lite_mb_awvalid.bind(*p_55_maxi_lite_mb_awvalid);
        p_55_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(15363776);
        xsim_sc_channel<0, bool > *p_55_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->maxi_lite_mb_awready.bind(*p_55_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->maxi_lite_mb_wdata.bind(*p_55_maxi_lite_mb_wdata);
        p_55_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(15363888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->maxi_lite_mb_wstrb.bind(*p_55_maxi_lite_mb_wstrb);
        p_55_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(15363944);
        xsim_sc_channel<0, bool > *p_55_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->maxi_lite_mb_wvalid.bind(*p_55_maxi_lite_mb_wvalid);
        p_55_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(15364000);
        xsim_sc_channel<0, bool > *p_55_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->maxi_lite_mb_wready.bind(*p_55_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->maxi_lite_mb_bresp.bind(*p_55_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_55_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->maxi_lite_mb_bvalid.bind(*p_55_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_55_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->maxi_lite_mb_bready.bind(*p_55_maxi_lite_mb_bready);
        p_55_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(15364224);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->maxi_lite_mb_araddr.bind(*p_55_maxi_lite_mb_araddr);
        p_55_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(15364280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->maxi_lite_mb_arprot.bind(*p_55_maxi_lite_mb_arprot);
        p_55_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(15364336);
        xsim_sc_channel<0, bool > *p_55_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->maxi_lite_mb_arvalid.bind(*p_55_maxi_lite_mb_arvalid);
        p_55_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(15364392);
        xsim_sc_channel<0, bool > *p_55_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->maxi_lite_mb_arready.bind(*p_55_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->maxi_lite_mb_rdata.bind(*p_55_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->maxi_lite_mb_rresp.bind(*p_55_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_55_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->maxi_lite_mb_rvalid.bind(*p_55_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_55_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->maxi_lite_mb_rready.bind(*p_55_maxi_lite_mb_rready);
        p_55_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(15364672);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->s_axi_ctrl_user_awaddr.bind(*p_55_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_ctrl_user_awprot.bind(*p_55_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_ctrl_user_awvalid.bind(*p_55_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_ctrl_user_awready.bind(*p_55_s_axi_ctrl_user_awready);
        p_55_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(15364896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_ctrl_user_wdata.bind(*p_55_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_ctrl_user_wstrb.bind(*p_55_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_55_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_ctrl_user_wvalid.bind(*p_55_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_ctrl_user_wready.bind(*p_55_s_axi_ctrl_user_wready);
        p_55_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(15365120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_ctrl_user_bresp.bind(*p_55_s_axi_ctrl_user_bresp);
        p_55_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(15365176);
        xsim_sc_channel<0, bool > *p_55_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_ctrl_user_bvalid.bind(*p_55_s_axi_ctrl_user_bvalid);
        p_55_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(15365232);
        xsim_sc_channel<0, bool > *p_55_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_ctrl_user_bready.bind(*p_55_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->s_axi_ctrl_user_araddr.bind(*p_55_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_ctrl_user_arprot.bind(*p_55_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_ctrl_user_arvalid.bind(*p_55_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_ctrl_user_arready.bind(*p_55_s_axi_ctrl_user_arready);
        p_55_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(15365512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_ctrl_user_rdata.bind(*p_55_s_axi_ctrl_user_rdata);
        p_55_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(15365568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_ctrl_user_rresp.bind(*p_55_s_axi_ctrl_user_rresp);
        p_55_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(15365624);
        xsim_sc_channel<0, bool > *p_55_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_ctrl_user_rvalid.bind(*p_55_s_axi_ctrl_user_rvalid);
        p_55_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(15365680);
        xsim_sc_channel<0, bool > *p_55_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_ctrl_user_rready.bind(*p_55_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_ctrl_user_rready);
        sc_inst_56 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_56->xsim_set_dbg_index(214);
        xsim_sc_channel<0, bool > *p_56_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_aclk.bind(*p_56_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_56_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_aresetn.bind(*p_56_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_56_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_aximm_aclk.bind(*p_56_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_56_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_aximm_aresetn.bind(*p_56_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_56_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_AWVALID.bind(*p_56_m_aximm_AWVALID);
        p_56_m_aximm_AWVALID->set_sv_netview_offsetfromdp(15366064);
        xsim_sc_channel<0, bool > *p_56_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_AWREADY.bind(*p_56_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->m_aximm_AWADDR.bind(*p_56_m_aximm_AWADDR);
        p_56_m_aximm_AWADDR->set_sv_netview_offsetfromdp(15366176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->m_aximm_AWID.bind(*p_56_m_aximm_AWID);
        p_56_m_aximm_AWID->set_sv_netview_offsetfromdp(15366232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_56_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_56->m_aximm_AWLEN.bind(*p_56_m_aximm_AWLEN);
        p_56_m_aximm_AWLEN->set_sv_netview_offsetfromdp(15366288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->m_aximm_AWSIZE.bind(*p_56_m_aximm_AWSIZE);
        p_56_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(15366344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_aximm_AWBURST.bind(*p_56_m_aximm_AWBURST);
        p_56_m_aximm_AWBURST->set_sv_netview_offsetfromdp(15366400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->m_aximm_AWLOCK.bind(*p_56_m_aximm_AWLOCK);
        p_56_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(15366456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_aximm_AWCACHE.bind(*p_56_m_aximm_AWCACHE);
        p_56_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(15366512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->m_aximm_AWPROT.bind(*p_56_m_aximm_AWPROT);
        p_56_m_aximm_AWPROT->set_sv_netview_offsetfromdp(15366568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_aximm_AWREGION.bind(*p_56_m_aximm_AWREGION);
        p_56_m_aximm_AWREGION->set_sv_netview_offsetfromdp(15366624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_aximm_AWQOS.bind(*p_56_m_aximm_AWQOS);
        p_56_m_aximm_AWQOS->set_sv_netview_offsetfromdp(15366680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->m_aximm_AWUSER.bind(*p_56_m_aximm_AWUSER);
        p_56_m_aximm_AWUSER->set_sv_netview_offsetfromdp(15366736);
        xsim_sc_channel<0, bool > *p_56_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_WVALID.bind(*p_56_m_aximm_WVALID);
        p_56_m_aximm_WVALID->set_sv_netview_offsetfromdp(15366792);
        xsim_sc_channel<0, bool > *p_56_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_WREADY.bind(*p_56_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->m_aximm_WDATA.bind(*p_56_m_aximm_WDATA);
        p_56_m_aximm_WDATA->set_sv_netview_offsetfromdp(15366904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_aximm_WSTRB.bind(*p_56_m_aximm_WSTRB);
        p_56_m_aximm_WSTRB->set_sv_netview_offsetfromdp(15366960);
        xsim_sc_channel<0, bool > *p_56_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_WLAST.bind(*p_56_m_aximm_WLAST);
        p_56_m_aximm_WLAST->set_sv_netview_offsetfromdp(15367016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->m_aximm_WUSER.bind(*p_56_m_aximm_WUSER);
        p_56_m_aximm_WUSER->set_sv_netview_offsetfromdp(15367072);
        xsim_sc_channel<0, bool > *p_56_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_ARVALID.bind(*p_56_m_aximm_ARVALID);
        p_56_m_aximm_ARVALID->set_sv_netview_offsetfromdp(15367128);
        xsim_sc_channel<0, bool > *p_56_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_ARREADY.bind(*p_56_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->m_aximm_ARADDR.bind(*p_56_m_aximm_ARADDR);
        p_56_m_aximm_ARADDR->set_sv_netview_offsetfromdp(15367240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->m_aximm_ARID.bind(*p_56_m_aximm_ARID);
        p_56_m_aximm_ARID->set_sv_netview_offsetfromdp(15367296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_56_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_56->m_aximm_ARLEN.bind(*p_56_m_aximm_ARLEN);
        p_56_m_aximm_ARLEN->set_sv_netview_offsetfromdp(15367352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->m_aximm_ARSIZE.bind(*p_56_m_aximm_ARSIZE);
        p_56_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(15367408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_aximm_ARBURST.bind(*p_56_m_aximm_ARBURST);
        p_56_m_aximm_ARBURST->set_sv_netview_offsetfromdp(15367464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->m_aximm_ARLOCK.bind(*p_56_m_aximm_ARLOCK);
        p_56_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(15367520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_aximm_ARCACHE.bind(*p_56_m_aximm_ARCACHE);
        p_56_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(15367576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->m_aximm_ARPROT.bind(*p_56_m_aximm_ARPROT);
        p_56_m_aximm_ARPROT->set_sv_netview_offsetfromdp(15367632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_aximm_ARREGION.bind(*p_56_m_aximm_ARREGION);
        p_56_m_aximm_ARREGION->set_sv_netview_offsetfromdp(15367688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_aximm_ARQOS.bind(*p_56_m_aximm_ARQOS);
        p_56_m_aximm_ARQOS->set_sv_netview_offsetfromdp(15367744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->m_aximm_ARUSER.bind(*p_56_m_aximm_ARUSER);
        p_56_m_aximm_ARUSER->set_sv_netview_offsetfromdp(15367800);
        xsim_sc_channel<0, bool > *p_56_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_RVALID.bind(*p_56_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_56_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_RREADY.bind(*p_56_m_aximm_RREADY);
        p_56_m_aximm_RREADY->set_sv_netview_offsetfromdp(15367912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->m_aximm_RDATA.bind(*p_56_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_56_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_RLAST.bind(*p_56_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->m_aximm_RID.bind(*p_56_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_aximm_RRESP.bind(*p_56_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->m_aximm_RUSER.bind(*p_56_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_56_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_BVALID.bind(*p_56_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_56_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_aximm_BREADY.bind(*p_56_m_aximm_BREADY);
        p_56_m_aximm_BREADY->set_sv_netview_offsetfromdp(15368304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_aximm_BRESP.bind(*p_56_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->m_aximm_BID.bind(*p_56_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->m_aximm_BUSER.bind(*p_56_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_awaddr.bind(*p_56_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_56_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_56->s_axi_awlen.bind(*p_56_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_awsize.bind(*p_56_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_awburst.bind(*p_56_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->s_axi_awlock.bind(*p_56_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_awcache.bind(*p_56_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_awprot.bind(*p_56_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_awregion.bind(*p_56_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_awqos.bind(*p_56_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_awuser.bind(*p_56_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_56_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awvalid.bind(*p_56_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awready.bind(*p_56_s_axi_awready);
        p_56_s_axi_awready->set_sv_netview_offsetfromdp(15369144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_wdata.bind(*p_56_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_wstrb.bind(*p_56_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_56_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wlast.bind(*p_56_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_56_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wvalid.bind(*p_56_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wready.bind(*p_56_s_axi_wready);
        p_56_s_axi_wready->set_sv_netview_offsetfromdp(15369424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_bresp.bind(*p_56_s_axi_bresp);
        p_56_s_axi_bresp->set_sv_netview_offsetfromdp(15369480);
        xsim_sc_channel<0, bool > *p_56_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bvalid.bind(*p_56_s_axi_bvalid);
        p_56_s_axi_bvalid->set_sv_netview_offsetfromdp(15369536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->s_axi_buser.bind(*p_56_s_axi_buser);
        p_56_s_axi_buser->set_sv_netview_offsetfromdp(15369592);
        xsim_sc_channel<0, bool > *p_56_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bready.bind(*p_56_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_araddr.bind(*p_56_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_56_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_56->s_axi_arlen.bind(*p_56_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_arsize.bind(*p_56_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_arburst.bind(*p_56_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->s_axi_arlock.bind(*p_56_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_arcache.bind(*p_56_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_arprot.bind(*p_56_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_arregion.bind(*p_56_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_arqos.bind(*p_56_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_aruser.bind(*p_56_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_56_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arvalid.bind(*p_56_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arready.bind(*p_56_s_axi_arready);
        p_56_s_axi_arready->set_sv_netview_offsetfromdp(15370320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_rdata.bind(*p_56_s_axi_rdata);
        p_56_s_axi_rdata->set_sv_netview_offsetfromdp(15370376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_rresp.bind(*p_56_s_axi_rresp);
        p_56_s_axi_rresp->set_sv_netview_offsetfromdp(15370432);
        xsim_sc_channel<0, bool > *p_56_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rlast.bind(*p_56_s_axi_rlast);
        p_56_s_axi_rlast->set_sv_netview_offsetfromdp(15370488);
        xsim_sc_channel<0, bool > *p_56_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rvalid.bind(*p_56_s_axi_rvalid);
        p_56_s_axi_rvalid->set_sv_netview_offsetfromdp(15370544);
        xsim_sc_channel<0, bool > *p_56_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rready.bind(*p_56_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_rready);
        sc_inst_57 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_57->xsim_set_dbg_index(215);
        xsim_sc_channel<0, bool > *p_57_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_aclk.bind(*p_57_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_57_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_aresetn.bind(*p_57_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_57_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axictrl_aclk.bind(*p_57_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_57_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axictrl_aresetn.bind(*p_57_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_57_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_aximm_aclk.bind(*p_57_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_57_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_aximm_aresetn.bind(*p_57_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->m_axictrl_awaddr.bind(*p_57_m_axictrl_awaddr);
        p_57_m_axictrl_awaddr->set_sv_netview_offsetfromdp(15371040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axictrl_awprot.bind(*p_57_m_axictrl_awprot);
        p_57_m_axictrl_awprot->set_sv_netview_offsetfromdp(15371096);
        xsim_sc_channel<0, bool > *p_57_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axictrl_awvalid.bind(*p_57_m_axictrl_awvalid);
        p_57_m_axictrl_awvalid->set_sv_netview_offsetfromdp(15371152);
        xsim_sc_channel<0, bool > *p_57_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axictrl_awready.bind(*p_57_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axictrl_wdata.bind(*p_57_m_axictrl_wdata);
        p_57_m_axictrl_wdata->set_sv_netview_offsetfromdp(15371264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axictrl_wstrb.bind(*p_57_m_axictrl_wstrb);
        p_57_m_axictrl_wstrb->set_sv_netview_offsetfromdp(15371320);
        xsim_sc_channel<0, bool > *p_57_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axictrl_wvalid.bind(*p_57_m_axictrl_wvalid);
        p_57_m_axictrl_wvalid->set_sv_netview_offsetfromdp(15371376);
        xsim_sc_channel<0, bool > *p_57_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axictrl_wready.bind(*p_57_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_57_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axictrl_bvalid.bind(*p_57_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_57_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axictrl_bready.bind(*p_57_m_axictrl_bready);
        p_57_m_axictrl_bready->set_sv_netview_offsetfromdp(15371544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axictrl_bresp.bind(*p_57_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->m_axictrl_araddr.bind(*p_57_m_axictrl_araddr);
        p_57_m_axictrl_araddr->set_sv_netview_offsetfromdp(15371656);
        xsim_sc_channel<0, bool > *p_57_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axictrl_arvalid.bind(*p_57_m_axictrl_arvalid);
        p_57_m_axictrl_arvalid->set_sv_netview_offsetfromdp(15371712);
        xsim_sc_channel<0, bool > *p_57_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axictrl_arready.bind(*p_57_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axictrl_arprot.bind(*p_57_m_axictrl_arprot);
        p_57_m_axictrl_arprot->set_sv_netview_offsetfromdp(15371824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axictrl_rdata.bind(*p_57_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axictrl_rresp.bind(*p_57_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_57_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axictrl_rvalid.bind(*p_57_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_57_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axictrl_rready.bind(*p_57_m_axictrl_rready);
        p_57_m_axictrl_rready->set_sv_netview_offsetfromdp(15372048);
        xsim_sc_channel<0, bool > *p_57_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_AWVALID.bind(*p_57_m_aximm_AWVALID);
        p_57_m_aximm_AWVALID->set_sv_netview_offsetfromdp(15372104);
        xsim_sc_channel<0, bool > *p_57_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_AWREADY.bind(*p_57_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->m_aximm_AWADDR.bind(*p_57_m_aximm_AWADDR);
        p_57_m_aximm_AWADDR->set_sv_netview_offsetfromdp(15372216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_AWID.bind(*p_57_m_aximm_AWID);
        p_57_m_aximm_AWID->set_sv_netview_offsetfromdp(15372272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->m_aximm_AWLEN.bind(*p_57_m_aximm_AWLEN);
        p_57_m_aximm_AWLEN->set_sv_netview_offsetfromdp(15372328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_aximm_AWSIZE.bind(*p_57_m_aximm_AWSIZE);
        p_57_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(15372384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_aximm_AWBURST.bind(*p_57_m_aximm_AWBURST);
        p_57_m_aximm_AWBURST->set_sv_netview_offsetfromdp(15372440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_AWLOCK.bind(*p_57_m_aximm_AWLOCK);
        p_57_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(15372496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_AWCACHE.bind(*p_57_m_aximm_AWCACHE);
        p_57_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(15372552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_aximm_AWPROT.bind(*p_57_m_aximm_AWPROT);
        p_57_m_aximm_AWPROT->set_sv_netview_offsetfromdp(15372608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_AWREGION.bind(*p_57_m_aximm_AWREGION);
        p_57_m_aximm_AWREGION->set_sv_netview_offsetfromdp(15372664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_AWQOS.bind(*p_57_m_aximm_AWQOS);
        p_57_m_aximm_AWQOS->set_sv_netview_offsetfromdp(15372720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_aximm_AWUSER.bind(*p_57_m_aximm_AWUSER);
        p_57_m_aximm_AWUSER->set_sv_netview_offsetfromdp(15372776);
        xsim_sc_channel<0, bool > *p_57_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_WVALID.bind(*p_57_m_aximm_WVALID);
        p_57_m_aximm_WVALID->set_sv_netview_offsetfromdp(15372832);
        xsim_sc_channel<0, bool > *p_57_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_WREADY.bind(*p_57_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_aximm_WDATA.bind(*p_57_m_aximm_WDATA);
        p_57_m_aximm_WDATA->set_sv_netview_offsetfromdp(15372944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_WSTRB.bind(*p_57_m_aximm_WSTRB);
        p_57_m_aximm_WSTRB->set_sv_netview_offsetfromdp(15373000);
        xsim_sc_channel<0, bool > *p_57_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_WLAST.bind(*p_57_m_aximm_WLAST);
        p_57_m_aximm_WLAST->set_sv_netview_offsetfromdp(15373056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_aximm_WUSER.bind(*p_57_m_aximm_WUSER);
        p_57_m_aximm_WUSER->set_sv_netview_offsetfromdp(15373112);
        xsim_sc_channel<0, bool > *p_57_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_ARVALID.bind(*p_57_m_aximm_ARVALID);
        p_57_m_aximm_ARVALID->set_sv_netview_offsetfromdp(15373168);
        xsim_sc_channel<0, bool > *p_57_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_ARREADY.bind(*p_57_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->m_aximm_ARADDR.bind(*p_57_m_aximm_ARADDR);
        p_57_m_aximm_ARADDR->set_sv_netview_offsetfromdp(15373280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_ARID.bind(*p_57_m_aximm_ARID);
        p_57_m_aximm_ARID->set_sv_netview_offsetfromdp(15373336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->m_aximm_ARLEN.bind(*p_57_m_aximm_ARLEN);
        p_57_m_aximm_ARLEN->set_sv_netview_offsetfromdp(15373392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_aximm_ARSIZE.bind(*p_57_m_aximm_ARSIZE);
        p_57_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(15373448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_aximm_ARBURST.bind(*p_57_m_aximm_ARBURST);
        p_57_m_aximm_ARBURST->set_sv_netview_offsetfromdp(15373504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_ARLOCK.bind(*p_57_m_aximm_ARLOCK);
        p_57_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(15373560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_ARCACHE.bind(*p_57_m_aximm_ARCACHE);
        p_57_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(15373616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_aximm_ARPROT.bind(*p_57_m_aximm_ARPROT);
        p_57_m_aximm_ARPROT->set_sv_netview_offsetfromdp(15373672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_ARREGION.bind(*p_57_m_aximm_ARREGION);
        p_57_m_aximm_ARREGION->set_sv_netview_offsetfromdp(15373728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_ARQOS.bind(*p_57_m_aximm_ARQOS);
        p_57_m_aximm_ARQOS->set_sv_netview_offsetfromdp(15373784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_aximm_ARUSER.bind(*p_57_m_aximm_ARUSER);
        p_57_m_aximm_ARUSER->set_sv_netview_offsetfromdp(15373840);
        xsim_sc_channel<0, bool > *p_57_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_RVALID.bind(*p_57_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_57_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_RREADY.bind(*p_57_m_aximm_RREADY);
        p_57_m_aximm_RREADY->set_sv_netview_offsetfromdp(15373952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_aximm_RDATA.bind(*p_57_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_57_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_RLAST.bind(*p_57_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_RID.bind(*p_57_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_aximm_RRESP.bind(*p_57_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_aximm_RUSER.bind(*p_57_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_57_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_BVALID.bind(*p_57_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_57_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_BREADY.bind(*p_57_m_aximm_BREADY);
        p_57_m_aximm_BREADY->set_sv_netview_offsetfromdp(15374344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_aximm_BRESP.bind(*p_57_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_BID.bind(*p_57_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_BUSER.bind(*p_57_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_awaddr.bind(*p_57_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_awlen.bind(*p_57_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awsize.bind(*p_57_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_awburst.bind(*p_57_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_awlock.bind(*p_57_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awcache.bind(*p_57_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awprot.bind(*p_57_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awregion.bind(*p_57_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awqos.bind(*p_57_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_57_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awvalid.bind(*p_57_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awready.bind(*p_57_s_axi_awready);
        p_57_s_axi_awready->set_sv_netview_offsetfromdp(15375128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_wdata.bind(*p_57_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_wstrb.bind(*p_57_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_57_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wlast.bind(*p_57_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_57_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wvalid.bind(*p_57_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wready.bind(*p_57_s_axi_wready);
        p_57_s_axi_wready->set_sv_netview_offsetfromdp(15375408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_bresp.bind(*p_57_s_axi_bresp);
        p_57_s_axi_bresp->set_sv_netview_offsetfromdp(15375464);
        xsim_sc_channel<0, bool > *p_57_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bvalid.bind(*p_57_s_axi_bvalid);
        p_57_s_axi_bvalid->set_sv_netview_offsetfromdp(15375520);
        xsim_sc_channel<0, bool > *p_57_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bready.bind(*p_57_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_araddr.bind(*p_57_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_arlen.bind(*p_57_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arsize.bind(*p_57_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_arburst.bind(*p_57_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_arlock.bind(*p_57_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arcache.bind(*p_57_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arprot.bind(*p_57_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arregion.bind(*p_57_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arqos.bind(*p_57_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_57_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arvalid.bind(*p_57_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arready.bind(*p_57_s_axi_arready);
        p_57_s_axi_arready->set_sv_netview_offsetfromdp(15376192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_rdata.bind(*p_57_s_axi_rdata);
        p_57_s_axi_rdata->set_sv_netview_offsetfromdp(15376248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_rresp.bind(*p_57_s_axi_rresp);
        p_57_s_axi_rresp->set_sv_netview_offsetfromdp(15376304);
        xsim_sc_channel<0, bool > *p_57_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rlast.bind(*p_57_s_axi_rlast);
        p_57_s_axi_rlast->set_sv_netview_offsetfromdp(15376360);
        xsim_sc_channel<0, bool > *p_57_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rvalid.bind(*p_57_s_axi_rvalid);
        p_57_s_axi_rvalid->set_sv_netview_offsetfromdp(15376416);
        xsim_sc_channel<0, bool > *p_57_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rready.bind(*p_57_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_57_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_57->usr_irq_req.bind(*p_57_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_57_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_57_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_57->usr_irq_ack.bind(*p_57_usr_irq_ack);
        p_57_usr_irq_ack->set_sv_netview_offsetfromdp(15376584);
        sc_inst_58 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_58->xsim_set_dbg_index(216);
        xsim_sc_channel<0, bool > *p_58_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_58->aclk.bind(*p_58_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_58_aclk);
        xsim_sc_channel<0, bool > *p_58_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_58->aresetn.bind(*p_58_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_58_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_awid.bind(*p_58_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->S00_AXI_awaddr.bind(*p_58_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->S00_AXI_awlen.bind(*p_58_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_awsize.bind(*p_58_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_awburst.bind(*p_58_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_awlock.bind(*p_58_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_awcache.bind(*p_58_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_awprot.bind(*p_58_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_awqos.bind(*p_58_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->S00_AXI_awuser.bind(*p_58_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_awvalid.bind(*p_58_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_awready.bind(*p_58_S00_AXI_awready);
        p_58_S00_AXI_awready->set_sv_netview_offsetfromdp(15377416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->S00_AXI_wdata.bind(*p_58_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_wstrb.bind(*p_58_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_wlast.bind(*p_58_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->S00_AXI_wuser.bind(*p_58_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_wvalid.bind(*p_58_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_wready.bind(*p_58_S00_AXI_wready);
        p_58_S00_AXI_wready->set_sv_netview_offsetfromdp(15377752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_bid.bind(*p_58_S00_AXI_bid);
        p_58_S00_AXI_bid->set_sv_netview_offsetfromdp(15377808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_bresp.bind(*p_58_S00_AXI_bresp);
        p_58_S00_AXI_bresp->set_sv_netview_offsetfromdp(15377864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_buser.bind(*p_58_S00_AXI_buser);
        p_58_S00_AXI_buser->set_sv_netview_offsetfromdp(15377920);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_bvalid.bind(*p_58_S00_AXI_bvalid);
        p_58_S00_AXI_bvalid->set_sv_netview_offsetfromdp(15377976);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_bready.bind(*p_58_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_arid.bind(*p_58_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->S00_AXI_araddr.bind(*p_58_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->S00_AXI_arlen.bind(*p_58_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_arsize.bind(*p_58_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_arburst.bind(*p_58_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_arlock.bind(*p_58_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_arcache.bind(*p_58_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_arprot.bind(*p_58_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_arqos.bind(*p_58_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->S00_AXI_aruser.bind(*p_58_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_arvalid.bind(*p_58_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_arready.bind(*p_58_S00_AXI_arready);
        p_58_S00_AXI_arready->set_sv_netview_offsetfromdp(15378704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_rid.bind(*p_58_S00_AXI_rid);
        p_58_S00_AXI_rid->set_sv_netview_offsetfromdp(15378760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->S00_AXI_rdata.bind(*p_58_S00_AXI_rdata);
        p_58_S00_AXI_rdata->set_sv_netview_offsetfromdp(15378816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_rresp.bind(*p_58_S00_AXI_rresp);
        p_58_S00_AXI_rresp->set_sv_netview_offsetfromdp(15378872);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_rlast.bind(*p_58_S00_AXI_rlast);
        p_58_S00_AXI_rlast->set_sv_netview_offsetfromdp(15378928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->S00_AXI_ruser.bind(*p_58_S00_AXI_ruser);
        p_58_S00_AXI_ruser->set_sv_netview_offsetfromdp(15378984);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_rvalid.bind(*p_58_S00_AXI_rvalid);
        p_58_S00_AXI_rvalid->set_sv_netview_offsetfromdp(15379040);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_rready.bind(*p_58_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M00_AXI_awaddr.bind(*p_58_M00_AXI_awaddr);
        p_58_M00_AXI_awaddr->set_sv_netview_offsetfromdp(15379152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M00_AXI_awlen.bind(*p_58_M00_AXI_awlen);
        p_58_M00_AXI_awlen->set_sv_netview_offsetfromdp(15379208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_awsize.bind(*p_58_M00_AXI_awsize);
        p_58_M00_AXI_awsize->set_sv_netview_offsetfromdp(15379264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_awburst.bind(*p_58_M00_AXI_awburst);
        p_58_M00_AXI_awburst->set_sv_netview_offsetfromdp(15379320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M00_AXI_awlock.bind(*p_58_M00_AXI_awlock);
        p_58_M00_AXI_awlock->set_sv_netview_offsetfromdp(15379376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_awcache.bind(*p_58_M00_AXI_awcache);
        p_58_M00_AXI_awcache->set_sv_netview_offsetfromdp(15379432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_awprot.bind(*p_58_M00_AXI_awprot);
        p_58_M00_AXI_awprot->set_sv_netview_offsetfromdp(15379488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_awqos.bind(*p_58_M00_AXI_awqos);
        p_58_M00_AXI_awqos->set_sv_netview_offsetfromdp(15379544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M00_AXI_awuser.bind(*p_58_M00_AXI_awuser);
        p_58_M00_AXI_awuser->set_sv_netview_offsetfromdp(15379600);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_awvalid.bind(*p_58_M00_AXI_awvalid);
        p_58_M00_AXI_awvalid->set_sv_netview_offsetfromdp(15379656);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_awready.bind(*p_58_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M00_AXI_wdata.bind(*p_58_M00_AXI_wdata);
        p_58_M00_AXI_wdata->set_sv_netview_offsetfromdp(15379768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_wstrb.bind(*p_58_M00_AXI_wstrb);
        p_58_M00_AXI_wstrb->set_sv_netview_offsetfromdp(15379824);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_wlast.bind(*p_58_M00_AXI_wlast);
        p_58_M00_AXI_wlast->set_sv_netview_offsetfromdp(15379880);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_wvalid.bind(*p_58_M00_AXI_wvalid);
        p_58_M00_AXI_wvalid->set_sv_netview_offsetfromdp(15379936);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_wready.bind(*p_58_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_bresp.bind(*p_58_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M00_AXI_buser.bind(*p_58_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_bvalid.bind(*p_58_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_bready.bind(*p_58_M00_AXI_bready);
        p_58_M00_AXI_bready->set_sv_netview_offsetfromdp(15380216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M00_AXI_araddr.bind(*p_58_M00_AXI_araddr);
        p_58_M00_AXI_araddr->set_sv_netview_offsetfromdp(15380272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M00_AXI_arlen.bind(*p_58_M00_AXI_arlen);
        p_58_M00_AXI_arlen->set_sv_netview_offsetfromdp(15380328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_arsize.bind(*p_58_M00_AXI_arsize);
        p_58_M00_AXI_arsize->set_sv_netview_offsetfromdp(15380384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_arburst.bind(*p_58_M00_AXI_arburst);
        p_58_M00_AXI_arburst->set_sv_netview_offsetfromdp(15380440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M00_AXI_arlock.bind(*p_58_M00_AXI_arlock);
        p_58_M00_AXI_arlock->set_sv_netview_offsetfromdp(15380496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_arcache.bind(*p_58_M00_AXI_arcache);
        p_58_M00_AXI_arcache->set_sv_netview_offsetfromdp(15380552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_arprot.bind(*p_58_M00_AXI_arprot);
        p_58_M00_AXI_arprot->set_sv_netview_offsetfromdp(15380608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_arqos.bind(*p_58_M00_AXI_arqos);
        p_58_M00_AXI_arqos->set_sv_netview_offsetfromdp(15380664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M00_AXI_aruser.bind(*p_58_M00_AXI_aruser);
        p_58_M00_AXI_aruser->set_sv_netview_offsetfromdp(15380720);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_arvalid.bind(*p_58_M00_AXI_arvalid);
        p_58_M00_AXI_arvalid->set_sv_netview_offsetfromdp(15380776);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_arready.bind(*p_58_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M00_AXI_rdata.bind(*p_58_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_rresp.bind(*p_58_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_rlast.bind(*p_58_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_rvalid.bind(*p_58_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_rready.bind(*p_58_M00_AXI_rready);
        p_58_M00_AXI_rready->set_sv_netview_offsetfromdp(15381112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->M01_AXI_awaddr.bind(*p_58_M01_AXI_awaddr);
        p_58_M01_AXI_awaddr->set_sv_netview_offsetfromdp(15381168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M01_AXI_awlen.bind(*p_58_M01_AXI_awlen);
        p_58_M01_AXI_awlen->set_sv_netview_offsetfromdp(15381224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_awsize.bind(*p_58_M01_AXI_awsize);
        p_58_M01_AXI_awsize->set_sv_netview_offsetfromdp(15381280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_awburst.bind(*p_58_M01_AXI_awburst);
        p_58_M01_AXI_awburst->set_sv_netview_offsetfromdp(15381336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M01_AXI_awlock.bind(*p_58_M01_AXI_awlock);
        p_58_M01_AXI_awlock->set_sv_netview_offsetfromdp(15381392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_awcache.bind(*p_58_M01_AXI_awcache);
        p_58_M01_AXI_awcache->set_sv_netview_offsetfromdp(15381448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_awprot.bind(*p_58_M01_AXI_awprot);
        p_58_M01_AXI_awprot->set_sv_netview_offsetfromdp(15381504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_awqos.bind(*p_58_M01_AXI_awqos);
        p_58_M01_AXI_awqos->set_sv_netview_offsetfromdp(15381560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M01_AXI_awuser.bind(*p_58_M01_AXI_awuser);
        p_58_M01_AXI_awuser->set_sv_netview_offsetfromdp(15381616);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_awvalid.bind(*p_58_M01_AXI_awvalid);
        p_58_M01_AXI_awvalid->set_sv_netview_offsetfromdp(15381672);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_awready.bind(*p_58_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M01_AXI_wdata.bind(*p_58_M01_AXI_wdata);
        p_58_M01_AXI_wdata->set_sv_netview_offsetfromdp(15381784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_wstrb.bind(*p_58_M01_AXI_wstrb);
        p_58_M01_AXI_wstrb->set_sv_netview_offsetfromdp(15381840);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_wlast.bind(*p_58_M01_AXI_wlast);
        p_58_M01_AXI_wlast->set_sv_netview_offsetfromdp(15381896);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_wvalid.bind(*p_58_M01_AXI_wvalid);
        p_58_M01_AXI_wvalid->set_sv_netview_offsetfromdp(15381952);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_wready.bind(*p_58_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_bresp.bind(*p_58_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M01_AXI_buser.bind(*p_58_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_bvalid.bind(*p_58_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_bready.bind(*p_58_M01_AXI_bready);
        p_58_M01_AXI_bready->set_sv_netview_offsetfromdp(15382232);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->M01_AXI_araddr.bind(*p_58_M01_AXI_araddr);
        p_58_M01_AXI_araddr->set_sv_netview_offsetfromdp(15382288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M01_AXI_arlen.bind(*p_58_M01_AXI_arlen);
        p_58_M01_AXI_arlen->set_sv_netview_offsetfromdp(15382344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_arsize.bind(*p_58_M01_AXI_arsize);
        p_58_M01_AXI_arsize->set_sv_netview_offsetfromdp(15382400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_arburst.bind(*p_58_M01_AXI_arburst);
        p_58_M01_AXI_arburst->set_sv_netview_offsetfromdp(15382456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M01_AXI_arlock.bind(*p_58_M01_AXI_arlock);
        p_58_M01_AXI_arlock->set_sv_netview_offsetfromdp(15382512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_arcache.bind(*p_58_M01_AXI_arcache);
        p_58_M01_AXI_arcache->set_sv_netview_offsetfromdp(15382568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_arprot.bind(*p_58_M01_AXI_arprot);
        p_58_M01_AXI_arprot->set_sv_netview_offsetfromdp(15382624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_arqos.bind(*p_58_M01_AXI_arqos);
        p_58_M01_AXI_arqos->set_sv_netview_offsetfromdp(15382680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M01_AXI_aruser.bind(*p_58_M01_AXI_aruser);
        p_58_M01_AXI_aruser->set_sv_netview_offsetfromdp(15382736);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_arvalid.bind(*p_58_M01_AXI_arvalid);
        p_58_M01_AXI_arvalid->set_sv_netview_offsetfromdp(15382792);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_arready.bind(*p_58_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M01_AXI_rdata.bind(*p_58_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_rresp.bind(*p_58_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_rlast.bind(*p_58_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_rvalid.bind(*p_58_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_rready.bind(*p_58_M01_AXI_rready);
        p_58_M01_AXI_rready->set_sv_netview_offsetfromdp(15383128);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
        delete sc_inst_39;
        delete sc_inst_40;
        delete sc_inst_41;
        delete sc_inst_42;
        delete sc_inst_43;
        delete sc_inst_44;
        delete sc_inst_45;
        delete sc_inst_46;
        delete sc_inst_47;
        delete sc_inst_48;
        delete sc_inst_49;
        delete sc_inst_50;
        delete sc_inst_51;
        delete sc_inst_52;
        delete sc_inst_53;
        delete sc_inst_54;
        delete sc_inst_55;
        delete sc_inst_56;
        delete sc_inst_57;
        delete sc_inst_58;
    }
