// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2DKernel_AXIBursts2PixelStream_Pipeline_bytes2pixels (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_pixels_din,
        src_pixels_num_data_valid,
        src_pixels_fifo_cap,
        src_pixels_full_n,
        src_pixels_write,
        loopWidth,
        icmp_ln28,
        cmp34_30_i,
        cmp34_29_i,
        cmp34_28_i,
        cmp34_27_i,
        cmp34_26_i,
        cmp34_25_i,
        cmp34_24_i,
        cmp34_23_i,
        cmp34_22_i,
        cmp34_21_i,
        cmp34_20_i,
        cmp34_19_i,
        cmp34_18_i,
        cmp34_17_i,
        cmp34_16_i,
        cmp34_15_i,
        cmp34_14_i,
        cmp34_13_i,
        cmp34_12_i,
        cmp34_11_i,
        cmp34_10_i,
        cmp34_9_i,
        cmp34_8_i,
        cmp34_7_i,
        cmp34_6_i,
        cmp34_5_i,
        cmp34_4_i,
        cmp34_3_i,
        cmp34_2_i,
        cmp34_1_i,
        buff_V_address0,
        buff_V_ce0,
        buff_V_q0,
        sext_ln33,
        cmp34_i,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 32'd1;
parameter    ap_ST_fsm_pp0_stage1 = 32'd2;
parameter    ap_ST_fsm_pp0_stage2 = 32'd4;
parameter    ap_ST_fsm_pp0_stage3 = 32'd8;
parameter    ap_ST_fsm_pp0_stage4 = 32'd16;
parameter    ap_ST_fsm_pp0_stage5 = 32'd32;
parameter    ap_ST_fsm_pp0_stage6 = 32'd64;
parameter    ap_ST_fsm_pp0_stage7 = 32'd128;
parameter    ap_ST_fsm_pp0_stage8 = 32'd256;
parameter    ap_ST_fsm_pp0_stage9 = 32'd512;
parameter    ap_ST_fsm_pp0_stage10 = 32'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 32'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 32'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 32'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 32'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 32'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 32'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 32'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 32'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 32'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 32'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 32'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 32'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 32'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 32'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 32'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 32'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 32'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 32'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 32'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 32'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] src_pixels_din;
input  [6:0] src_pixels_num_data_valid;
input  [6:0] src_pixels_fifo_cap;
input   src_pixels_full_n;
output   src_pixels_write;
input  [11:0] loopWidth;
input  [0:0] icmp_ln28;
input  [0:0] cmp34_30_i;
input  [0:0] cmp34_29_i;
input  [0:0] cmp34_28_i;
input  [0:0] cmp34_27_i;
input  [0:0] cmp34_26_i;
input  [0:0] cmp34_25_i;
input  [0:0] cmp34_24_i;
input  [0:0] cmp34_23_i;
input  [0:0] cmp34_22_i;
input  [0:0] cmp34_21_i;
input  [0:0] cmp34_20_i;
input  [0:0] cmp34_19_i;
input  [0:0] cmp34_18_i;
input  [0:0] cmp34_17_i;
input  [0:0] cmp34_16_i;
input  [0:0] cmp34_15_i;
input  [0:0] cmp34_14_i;
input  [0:0] cmp34_13_i;
input  [0:0] cmp34_12_i;
input  [0:0] cmp34_11_i;
input  [0:0] cmp34_10_i;
input  [0:0] cmp34_9_i;
input  [0:0] cmp34_8_i;
input  [0:0] cmp34_7_i;
input  [0:0] cmp34_6_i;
input  [0:0] cmp34_5_i;
input  [0:0] cmp34_4_i;
input  [0:0] cmp34_3_i;
input  [0:0] cmp34_2_i;
input  [0:0] cmp34_1_i;
output  [5:0] buff_V_address0;
output   buff_V_ce0;
input  [255:0] buff_V_q0;
input  [11:0] sext_ln33;
input  [0:0] cmp34_i;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg[7:0] src_pixels_din;
reg src_pixels_write;
reg buff_V_ce0;

(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] or_ln52_31_reg_1151;
reg    ap_block_state33_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln45_fu_472_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage31;
reg   [0:0] icmp_ln45_reg_1018;
reg   [0:0] or_ln52_30_reg_1147;
reg    ap_predicate_op246_write_state32;
reg    ap_block_state32_pp0_stage31_iter0;
reg    ap_block_pp0_stage31_subdone;
reg    src_pixels_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] or_ln52_reg_1027;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] or_ln52_1_reg_1031;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln52_2_reg_1035;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln52_3_reg_1039;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln52_4_reg_1043;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln52_5_reg_1047;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg   [0:0] or_ln52_6_reg_1051;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg   [0:0] or_ln52_7_reg_1055;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg   [0:0] or_ln52_8_reg_1059;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
reg   [0:0] or_ln52_9_reg_1063;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
reg   [0:0] or_ln52_10_reg_1067;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
reg   [0:0] or_ln52_11_reg_1071;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
reg   [0:0] or_ln52_12_reg_1075;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
reg   [0:0] or_ln52_13_reg_1079;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
reg   [0:0] or_ln52_14_reg_1083;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
reg   [0:0] or_ln52_15_reg_1087;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
reg   [0:0] or_ln52_16_reg_1091;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
reg   [0:0] or_ln52_17_reg_1095;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
reg   [0:0] or_ln52_18_reg_1099;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
reg   [0:0] or_ln52_19_reg_1103;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
reg   [0:0] or_ln52_20_reg_1107;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
reg   [0:0] or_ln52_21_reg_1111;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
reg   [0:0] or_ln52_22_reg_1115;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
reg   [0:0] or_ln52_23_reg_1119;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
reg   [0:0] or_ln52_24_reg_1123;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
reg   [0:0] or_ln52_25_reg_1127;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
reg   [0:0] or_ln52_26_reg_1131;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
reg   [0:0] or_ln52_27_reg_1135;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
reg   [0:0] or_ln52_28_reg_1139;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
reg   [0:0] or_ln52_29_reg_1143;
wire    ap_block_pp0_stage31;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] or_ln52_fu_499_p2;
wire   [0:0] or_ln52_1_fu_505_p2;
wire   [0:0] or_ln52_2_fu_511_p2;
wire   [0:0] or_ln52_3_fu_517_p2;
wire   [0:0] or_ln52_4_fu_523_p2;
wire   [0:0] or_ln52_5_fu_529_p2;
wire   [0:0] or_ln52_6_fu_535_p2;
wire   [0:0] or_ln52_7_fu_541_p2;
wire   [0:0] or_ln52_8_fu_547_p2;
wire   [0:0] or_ln52_9_fu_553_p2;
wire   [0:0] or_ln52_10_fu_559_p2;
wire   [0:0] or_ln52_11_fu_565_p2;
wire   [0:0] or_ln52_12_fu_571_p2;
wire   [0:0] or_ln52_13_fu_577_p2;
wire   [0:0] or_ln52_14_fu_583_p2;
wire   [0:0] or_ln52_15_fu_589_p2;
wire   [0:0] or_ln52_16_fu_595_p2;
wire   [0:0] or_ln52_17_fu_601_p2;
wire   [0:0] or_ln52_18_fu_607_p2;
wire   [0:0] or_ln52_19_fu_613_p2;
wire   [0:0] or_ln52_20_fu_619_p2;
wire   [0:0] or_ln52_21_fu_625_p2;
wire   [0:0] or_ln52_22_fu_631_p2;
wire   [0:0] or_ln52_23_fu_637_p2;
wire   [0:0] or_ln52_24_fu_643_p2;
wire   [0:0] or_ln52_25_fu_649_p2;
wire   [0:0] or_ln52_26_fu_655_p2;
wire   [0:0] or_ln52_27_fu_661_p2;
wire   [0:0] or_ln52_28_fu_667_p2;
wire   [0:0] or_ln52_29_fu_673_p2;
wire   [0:0] or_ln52_30_fu_679_p2;
wire   [0:0] or_ln52_31_fu_685_p2;
reg   [7:0] pixel_67_reg_1155;
reg    ap_predicate_op155_write_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [7:0] pixel_68_reg_1160;
reg   [7:0] pixel_69_reg_1165;
reg   [7:0] pixel_70_reg_1170;
reg   [7:0] pixel_71_reg_1175;
reg   [7:0] pixel_72_reg_1180;
reg   [7:0] pixel_73_reg_1185;
reg   [7:0] pixel_74_reg_1190;
reg   [7:0] pixel_75_reg_1195;
reg   [7:0] pixel_76_reg_1200;
reg   [7:0] pixel_77_reg_1205;
reg   [7:0] pixel_78_reg_1210;
reg   [7:0] pixel_79_reg_1215;
reg   [7:0] pixel_80_reg_1220;
reg   [7:0] pixel_81_reg_1225;
reg   [7:0] pixel_82_reg_1230;
reg   [7:0] pixel_83_reg_1235;
reg   [7:0] pixel_84_reg_1240;
reg   [7:0] pixel_85_reg_1245;
reg   [7:0] pixel_86_reg_1250;
reg   [7:0] pixel_87_reg_1255;
reg   [7:0] pixel_88_reg_1260;
reg   [7:0] pixel_89_reg_1265;
reg   [7:0] pixel_90_reg_1270;
reg   [7:0] pixel_91_reg_1275;
reg   [7:0] pixel_92_reg_1280;
reg   [7:0] pixel_93_reg_1285;
reg   [7:0] pixel_94_reg_1290;
reg   [7:0] pixel_95_reg_1295;
reg   [7:0] pixel_96_reg_1300;
reg   [7:0] pixel_97_reg_1305;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln45_fu_484_p1;
reg   [11:0] x_fu_232;
wire   [11:0] add_ln45_fu_478_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_x_2;
wire   [7:0] pixel_fu_696_p1;
reg    ap_block_pp0_stage1_01001;
reg    ap_predicate_op188_write_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_01001;
reg    ap_predicate_op190_write_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_01001;
reg    ap_predicate_op192_write_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_01001;
reg    ap_predicate_op194_write_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_01001;
reg    ap_predicate_op196_write_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_01001;
reg    ap_predicate_op198_write_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_01001;
reg    ap_predicate_op200_write_state9;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_01001;
reg    ap_predicate_op202_write_state10;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_01001;
reg    ap_predicate_op204_write_state11;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_01001;
reg    ap_predicate_op206_write_state12;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_01001;
reg    ap_predicate_op208_write_state13;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_01001;
reg    ap_predicate_op210_write_state14;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_01001;
reg    ap_predicate_op212_write_state15;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_01001;
reg    ap_predicate_op214_write_state16;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_01001;
reg    ap_predicate_op216_write_state17;
reg    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_pp0_stage16_01001;
reg    ap_predicate_op218_write_state18;
reg    ap_block_state18_pp0_stage17_iter0;
reg    ap_block_pp0_stage17_01001;
reg    ap_predicate_op220_write_state19;
reg    ap_block_state19_pp0_stage18_iter0;
reg    ap_block_pp0_stage18_01001;
reg    ap_predicate_op222_write_state20;
reg    ap_block_state20_pp0_stage19_iter0;
reg    ap_block_pp0_stage19_01001;
reg    ap_predicate_op224_write_state21;
reg    ap_block_state21_pp0_stage20_iter0;
reg    ap_block_pp0_stage20_01001;
reg    ap_predicate_op226_write_state22;
reg    ap_block_state22_pp0_stage21_iter0;
reg    ap_block_pp0_stage21_01001;
reg    ap_predicate_op228_write_state23;
reg    ap_block_state23_pp0_stage22_iter0;
reg    ap_block_pp0_stage22_01001;
reg    ap_predicate_op230_write_state24;
reg    ap_block_state24_pp0_stage23_iter0;
reg    ap_block_pp0_stage23_01001;
reg    ap_predicate_op232_write_state25;
reg    ap_block_state25_pp0_stage24_iter0;
reg    ap_block_pp0_stage24_01001;
reg    ap_predicate_op234_write_state26;
reg    ap_block_state26_pp0_stage25_iter0;
reg    ap_block_pp0_stage25_01001;
reg    ap_predicate_op236_write_state27;
reg    ap_block_state27_pp0_stage26_iter0;
reg    ap_block_pp0_stage26_01001;
reg    ap_predicate_op238_write_state28;
reg    ap_block_state28_pp0_stage27_iter0;
reg    ap_block_pp0_stage27_01001;
reg    ap_predicate_op240_write_state29;
reg    ap_block_state29_pp0_stage28_iter0;
reg    ap_block_pp0_stage28_01001;
reg    ap_predicate_op242_write_state30;
reg    ap_block_state30_pp0_stage29_iter0;
reg    ap_block_pp0_stage29_01001;
reg    ap_predicate_op244_write_state31;
reg    ap_block_state31_pp0_stage30_iter0;
reg    ap_block_pp0_stage30_01001;
reg    ap_block_pp0_stage31_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_pp0_stage15_11001;
reg    ap_block_pp0_stage16_11001;
reg    ap_block_pp0_stage17_11001;
reg    ap_block_pp0_stage18_11001;
reg    ap_block_pp0_stage19_11001;
reg    ap_block_pp0_stage20_11001;
reg    ap_block_pp0_stage21_11001;
reg    ap_block_pp0_stage22_11001;
reg    ap_block_pp0_stage23_11001;
reg    ap_block_pp0_stage24_11001;
reg    ap_block_pp0_stage25_11001;
reg    ap_block_pp0_stage26_11001;
reg    ap_block_pp0_stage27_11001;
reg    ap_block_pp0_stage28_11001;
reg    ap_block_pp0_stage29_11001;
reg    ap_block_pp0_stage30_11001;
reg    ap_block_pp0_stage31_11001;
wire   [12:0] zext_ln45_1_fu_489_p1;
wire  signed [12:0] sext_ln33_cast_fu_460_p1;
wire   [0:0] cmp32_i_fu_493_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [31:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
reg    ap_block_pp0_stage29_subdone;
reg    ap_block_pp0_stage30_subdone;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Filter2DKernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage31_subdone) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln45_fu_472_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_232 <= add_ln45_fu_478_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_232 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln45_reg_1018 <= icmp_ln45_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_fu_472_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln52_10_reg_1067 <= or_ln52_10_fu_559_p2;
        or_ln52_11_reg_1071 <= or_ln52_11_fu_565_p2;
        or_ln52_12_reg_1075 <= or_ln52_12_fu_571_p2;
        or_ln52_13_reg_1079 <= or_ln52_13_fu_577_p2;
        or_ln52_14_reg_1083 <= or_ln52_14_fu_583_p2;
        or_ln52_15_reg_1087 <= or_ln52_15_fu_589_p2;
        or_ln52_16_reg_1091 <= or_ln52_16_fu_595_p2;
        or_ln52_17_reg_1095 <= or_ln52_17_fu_601_p2;
        or_ln52_18_reg_1099 <= or_ln52_18_fu_607_p2;
        or_ln52_19_reg_1103 <= or_ln52_19_fu_613_p2;
        or_ln52_1_reg_1031 <= or_ln52_1_fu_505_p2;
        or_ln52_20_reg_1107 <= or_ln52_20_fu_619_p2;
        or_ln52_21_reg_1111 <= or_ln52_21_fu_625_p2;
        or_ln52_22_reg_1115 <= or_ln52_22_fu_631_p2;
        or_ln52_23_reg_1119 <= or_ln52_23_fu_637_p2;
        or_ln52_24_reg_1123 <= or_ln52_24_fu_643_p2;
        or_ln52_25_reg_1127 <= or_ln52_25_fu_649_p2;
        or_ln52_26_reg_1131 <= or_ln52_26_fu_655_p2;
        or_ln52_27_reg_1135 <= or_ln52_27_fu_661_p2;
        or_ln52_28_reg_1139 <= or_ln52_28_fu_667_p2;
        or_ln52_29_reg_1143 <= or_ln52_29_fu_673_p2;
        or_ln52_2_reg_1035 <= or_ln52_2_fu_511_p2;
        or_ln52_30_reg_1147 <= or_ln52_30_fu_679_p2;
        or_ln52_31_reg_1151 <= or_ln52_31_fu_685_p2;
        or_ln52_3_reg_1039 <= or_ln52_3_fu_517_p2;
        or_ln52_4_reg_1043 <= or_ln52_4_fu_523_p2;
        or_ln52_5_reg_1047 <= or_ln52_5_fu_529_p2;
        or_ln52_6_reg_1051 <= or_ln52_6_fu_535_p2;
        or_ln52_7_reg_1055 <= or_ln52_7_fu_541_p2;
        or_ln52_8_reg_1059 <= or_ln52_8_fu_547_p2;
        or_ln52_9_reg_1063 <= or_ln52_9_fu_553_p2;
        or_ln52_reg_1027 <= or_ln52_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        pixel_67_reg_1155 <= {{buff_V_q0[15:8]}};
        pixel_68_reg_1160 <= {{buff_V_q0[23:16]}};
        pixel_69_reg_1165 <= {{buff_V_q0[31:24]}};
        pixel_70_reg_1170 <= {{buff_V_q0[39:32]}};
        pixel_71_reg_1175 <= {{buff_V_q0[47:40]}};
        pixel_72_reg_1180 <= {{buff_V_q0[55:48]}};
        pixel_73_reg_1185 <= {{buff_V_q0[63:56]}};
        pixel_74_reg_1190 <= {{buff_V_q0[71:64]}};
        pixel_75_reg_1195 <= {{buff_V_q0[79:72]}};
        pixel_76_reg_1200 <= {{buff_V_q0[87:80]}};
        pixel_77_reg_1205 <= {{buff_V_q0[95:88]}};
        pixel_78_reg_1210 <= {{buff_V_q0[103:96]}};
        pixel_79_reg_1215 <= {{buff_V_q0[111:104]}};
        pixel_80_reg_1220 <= {{buff_V_q0[119:112]}};
        pixel_81_reg_1225 <= {{buff_V_q0[127:120]}};
        pixel_82_reg_1230 <= {{buff_V_q0[135:128]}};
        pixel_83_reg_1235 <= {{buff_V_q0[143:136]}};
        pixel_84_reg_1240 <= {{buff_V_q0[151:144]}};
        pixel_85_reg_1245 <= {{buff_V_q0[159:152]}};
        pixel_86_reg_1250 <= {{buff_V_q0[167:160]}};
        pixel_87_reg_1255 <= {{buff_V_q0[175:168]}};
        pixel_88_reg_1260 <= {{buff_V_q0[183:176]}};
        pixel_89_reg_1265 <= {{buff_V_q0[191:184]}};
        pixel_90_reg_1270 <= {{buff_V_q0[199:192]}};
        pixel_91_reg_1275 <= {{buff_V_q0[207:200]}};
        pixel_92_reg_1280 <= {{buff_V_q0[215:208]}};
        pixel_93_reg_1285 <= {{buff_V_q0[223:216]}};
        pixel_94_reg_1290 <= {{buff_V_q0[231:224]}};
        pixel_95_reg_1295 <= {{buff_V_q0[239:232]}};
        pixel_96_reg_1300 <= {{buff_V_q0[247:240]}};
        pixel_97_reg_1305 <= {{buff_V_q0[255:248]}};
    end
end

always @ (*) begin
    if (((icmp_ln45_fu_472_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage31_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_2 = 12'd0;
    end else begin
        ap_sig_allocacmp_x_2 = x_fu_232;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buff_V_ce0 = 1'b1;
    end else begin
        buff_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage30) & (or_ln52_29_reg_1143 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage29) & (or_ln52_28_reg_1139 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage28) & (or_ln52_27_reg_1135 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage27) & (or_ln52_26_reg_1131 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage26) & (or_ln52_25_reg_1127 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_24_reg_1123 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_23_reg_1119 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_22_reg_1115 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_21_reg_1111 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_20_reg_1107 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_19_reg_1103 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_18_reg_1099 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_17_reg_1095 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_16_reg_1091 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_15_reg_1087 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_14_reg_1083 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_13_reg_1079 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_12_reg_1075 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_11_reg_1071 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_10_reg_1067 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_9_reg_1063 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_8_reg_1059 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_7_reg_1055 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_6_reg_1051 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_5_reg_1047 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_4_reg_1043 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln52_3_reg_1039 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln52_2_reg_1035 == 1'd1)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln52_1_reg_1031 == 1'd1)) | ((icmp_ln45_reg_1018 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln52_reg_1027 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0) & (or_ln52_31_reg_1151 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_predicate_op246_write_state32 == 1'b1) & (1'b0 == ap_block_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31)))) begin
        src_pixels_blk_n = src_pixels_full_n;
    end else begin
        src_pixels_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (or_ln52_31_reg_1151 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src_pixels_din = pixel_97_reg_1305;
    end else if (((ap_predicate_op246_write_state32 == 1'b1) & (1'b0 == ap_block_pp0_stage31_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        src_pixels_din = pixel_96_reg_1300;
    end else if (((1'b0 == ap_block_pp0_stage30_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_predicate_op244_write_state31 == 1'b1))) begin
        src_pixels_din = pixel_95_reg_1295;
    end else if (((1'b0 == ap_block_pp0_stage29_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_predicate_op242_write_state30 == 1'b1))) begin
        src_pixels_din = pixel_94_reg_1290;
    end else if (((1'b0 == ap_block_pp0_stage28_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_predicate_op240_write_state29 == 1'b1))) begin
        src_pixels_din = pixel_93_reg_1285;
    end else if (((1'b0 == ap_block_pp0_stage27_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_predicate_op238_write_state28 == 1'b1))) begin
        src_pixels_din = pixel_92_reg_1280;
    end else if (((1'b0 == ap_block_pp0_stage26_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_predicate_op236_write_state27 == 1'b1))) begin
        src_pixels_din = pixel_91_reg_1275;
    end else if (((1'b0 == ap_block_pp0_stage25_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_predicate_op234_write_state26 == 1'b1))) begin
        src_pixels_din = pixel_90_reg_1270;
    end else if (((1'b0 == ap_block_pp0_stage24_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_predicate_op232_write_state25 == 1'b1))) begin
        src_pixels_din = pixel_89_reg_1265;
    end else if (((ap_predicate_op230_write_state24 == 1'b1) & (1'b0 == ap_block_pp0_stage23_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        src_pixels_din = pixel_88_reg_1260;
    end else if (((ap_predicate_op228_write_state23 == 1'b1) & (1'b0 == ap_block_pp0_stage22_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        src_pixels_din = pixel_87_reg_1255;
    end else if (((ap_predicate_op226_write_state22 == 1'b1) & (1'b0 == ap_block_pp0_stage21_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        src_pixels_din = pixel_86_reg_1250;
    end else if (((ap_predicate_op224_write_state21 == 1'b1) & (1'b0 == ap_block_pp0_stage20_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        src_pixels_din = pixel_85_reg_1245;
    end else if (((ap_predicate_op222_write_state20 == 1'b1) & (1'b0 == ap_block_pp0_stage19_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        src_pixels_din = pixel_84_reg_1240;
    end else if (((ap_predicate_op220_write_state19 == 1'b1) & (1'b0 == ap_block_pp0_stage18_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        src_pixels_din = pixel_83_reg_1235;
    end else if (((ap_predicate_op218_write_state18 == 1'b1) & (1'b0 == ap_block_pp0_stage17_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        src_pixels_din = pixel_82_reg_1230;
    end else if (((ap_predicate_op216_write_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage16_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        src_pixels_din = pixel_81_reg_1225;
    end else if (((ap_predicate_op214_write_state16 == 1'b1) & (1'b0 == ap_block_pp0_stage15_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        src_pixels_din = pixel_80_reg_1220;
    end else if (((ap_predicate_op212_write_state15 == 1'b1) & (1'b0 == ap_block_pp0_stage14_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        src_pixels_din = pixel_79_reg_1215;
    end else if (((ap_predicate_op210_write_state14 == 1'b1) & (1'b0 == ap_block_pp0_stage13_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        src_pixels_din = pixel_78_reg_1210;
    end else if (((ap_predicate_op208_write_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage12_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        src_pixels_din = pixel_77_reg_1205;
    end else if (((ap_predicate_op206_write_state12 == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        src_pixels_din = pixel_76_reg_1200;
    end else if (((ap_predicate_op204_write_state11 == 1'b1) & (1'b0 == ap_block_pp0_stage10_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        src_pixels_din = pixel_75_reg_1195;
    end else if (((ap_predicate_op202_write_state10 == 1'b1) & (1'b0 == ap_block_pp0_stage9_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        src_pixels_din = pixel_74_reg_1190;
    end else if (((ap_predicate_op200_write_state9 == 1'b1) & (1'b0 == ap_block_pp0_stage8_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        src_pixels_din = pixel_73_reg_1185;
    end else if (((ap_predicate_op198_write_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        src_pixels_din = pixel_72_reg_1180;
    end else if (((ap_predicate_op196_write_state7 == 1'b1) & (1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        src_pixels_din = pixel_71_reg_1175;
    end else if (((ap_predicate_op194_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        src_pixels_din = pixel_70_reg_1170;
    end else if (((ap_predicate_op192_write_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage4_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        src_pixels_din = pixel_69_reg_1165;
    end else if (((ap_predicate_op190_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        src_pixels_din = pixel_68_reg_1160;
    end else if (((ap_predicate_op188_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        src_pixels_din = pixel_67_reg_1155;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_predicate_op155_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        src_pixels_din = pixel_fu_696_p1;
    end else begin
        src_pixels_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op230_write_state24 == 1'b1) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((ap_predicate_op228_write_state23 == 1'b1) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((ap_predicate_op226_write_state22 == 1'b1) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((ap_predicate_op224_write_state21 == 1'b1) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((ap_predicate_op222_write_state20 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((ap_predicate_op220_write_state19 == 1'b1) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((ap_predicate_op218_write_state18 == 1'b1) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((ap_predicate_op216_write_state17 == 1'b1) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((ap_predicate_op214_write_state16 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((ap_predicate_op212_write_state15 == 1'b1) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((ap_predicate_op210_write_state14 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((ap_predicate_op208_write_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((ap_predicate_op206_write_state12 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((ap_predicate_op204_write_state11 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_predicate_op202_write_state10 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_predicate_op200_write_state9 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_predicate_op198_write_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_predicate_op196_write_state7 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_predicate_op194_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_predicate_op192_write_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_predicate_op190_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_predicate_op188_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op155_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_ln52_31_reg_1151 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage30_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_predicate_op244_write_state31 == 1'b1)) | ((1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_predicate_op242_write_state30 == 1'b1)) | ((1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_predicate_op240_write_state29 == 1'b1)) | ((1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_predicate_op238_write_state28 == 1'b1)) | ((1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_predicate_op236_write_state27 == 1'b1)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_predicate_op234_write_state26 == 1'b1)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_predicate_op232_write_state25 == 1'b1)) | ((ap_predicate_op246_write_state32 == 1'b1) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31)))) begin
        src_pixels_write = 1'b1;
    end else begin
        src_pixels_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln45_fu_478_p2 = (ap_sig_allocacmp_x_2 + 12'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((or_ln52_31_reg_1151 == 1'd1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((or_ln52_31_reg_1151 == 1'd1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((or_ln52_31_reg_1151 == 1'd1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_01001 = ((ap_predicate_op204_write_state11 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_predicate_op204_write_state11 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_predicate_op204_write_state11 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = ((ap_predicate_op206_write_state12 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_predicate_op206_write_state12 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_predicate_op206_write_state12 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_01001 = ((ap_predicate_op208_write_state13 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_predicate_op208_write_state13 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_predicate_op208_write_state13 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_01001 = ((ap_predicate_op210_write_state14 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_predicate_op210_write_state14 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_predicate_op210_write_state14 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_01001 = ((ap_predicate_op212_write_state15 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_predicate_op212_write_state15 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_predicate_op212_write_state15 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_01001 = ((ap_predicate_op214_write_state16 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_predicate_op214_write_state16 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_predicate_op214_write_state16 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_01001 = ((ap_predicate_op216_write_state17 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_predicate_op216_write_state17 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_predicate_op216_write_state17 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_01001 = ((ap_predicate_op218_write_state18 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_predicate_op218_write_state18 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_predicate_op218_write_state18 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_01001 = ((ap_predicate_op220_write_state19 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((ap_predicate_op220_write_state19 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((ap_predicate_op220_write_state19 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_01001 = ((ap_predicate_op222_write_state20 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((ap_predicate_op222_write_state20 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((ap_predicate_op222_write_state20 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((src_pixels_full_n == 1'b0) & (ap_predicate_op155_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((src_pixels_full_n == 1'b0) & (ap_predicate_op155_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((src_pixels_full_n == 1'b0) & (ap_predicate_op155_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_01001 = ((ap_predicate_op224_write_state21 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((ap_predicate_op224_write_state21 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((ap_predicate_op224_write_state21 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_01001 = ((ap_predicate_op226_write_state22 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((ap_predicate_op226_write_state22 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((ap_predicate_op226_write_state22 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_01001 = ((ap_predicate_op228_write_state23 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((ap_predicate_op228_write_state23 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((ap_predicate_op228_write_state23 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_01001 = ((ap_predicate_op230_write_state24 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((ap_predicate_op230_write_state24 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((ap_predicate_op230_write_state24 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_01001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op232_write_state25 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op232_write_state25 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op232_write_state25 == 1'b1));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_01001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op234_write_state26 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op234_write_state26 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op234_write_state26 == 1'b1));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_01001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op236_write_state27 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op236_write_state27 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op236_write_state27 == 1'b1));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_01001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op238_write_state28 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op238_write_state28 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op238_write_state28 == 1'b1));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_01001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op240_write_state29 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op240_write_state29 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op240_write_state29 == 1'b1));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage29_01001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op242_write_state30 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage29_11001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op242_write_state30 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage29_subdone = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op242_write_state30 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_predicate_op188_write_state3 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_predicate_op188_write_state3 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_predicate_op188_write_state3 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage30_01001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op244_write_state31 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage30_11001 = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op244_write_state31 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage30_subdone = ((src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op244_write_state31 == 1'b1));
end

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage31_01001 = ((ap_predicate_op246_write_state32 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage31_11001 = ((ap_predicate_op246_write_state32 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage31_subdone = ((ap_predicate_op246_write_state32 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((ap_predicate_op190_write_state4 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_predicate_op190_write_state4 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_predicate_op190_write_state4 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((ap_predicate_op192_write_state5 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_predicate_op192_write_state5 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_predicate_op192_write_state5 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((ap_predicate_op194_write_state6 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_predicate_op194_write_state6 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_predicate_op194_write_state6 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((ap_predicate_op196_write_state7 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_predicate_op196_write_state7 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_predicate_op196_write_state7 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((ap_predicate_op198_write_state8 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_predicate_op198_write_state8 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_predicate_op198_write_state8 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = ((ap_predicate_op200_write_state9 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_predicate_op200_write_state9 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_predicate_op200_write_state9 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((ap_predicate_op202_write_state10 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_predicate_op202_write_state10 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_predicate_op202_write_state10 == 1'b1) & (src_pixels_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((ap_predicate_op202_write_state10 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((ap_predicate_op204_write_state11 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((ap_predicate_op206_write_state12 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((ap_predicate_op208_write_state13 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((ap_predicate_op210_write_state14 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((ap_predicate_op212_write_state15 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((ap_predicate_op214_write_state16 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = ((ap_predicate_op216_write_state17 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0 = ((ap_predicate_op218_write_state18 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage18_iter0 = ((ap_predicate_op220_write_state19 == 1'b1) & (src_pixels_full_n == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage19_iter0 = ((ap_predicate_op222_write_state20 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage20_iter0 = ((ap_predicate_op224_write_state21 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage21_iter0 = ((ap_predicate_op226_write_state22 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage22_iter0 = ((ap_predicate_op228_write_state23 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage23_iter0 = ((ap_predicate_op230_write_state24 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage24_iter0 = ((src_pixels_full_n == 1'b0) & (ap_predicate_op232_write_state25 == 1'b1));
end

always @ (*) begin
    ap_block_state26_pp0_stage25_iter0 = ((src_pixels_full_n == 1'b0) & (ap_predicate_op234_write_state26 == 1'b1));
end

always @ (*) begin
    ap_block_state27_pp0_stage26_iter0 = ((src_pixels_full_n == 1'b0) & (ap_predicate_op236_write_state27 == 1'b1));
end

always @ (*) begin
    ap_block_state28_pp0_stage27_iter0 = ((src_pixels_full_n == 1'b0) & (ap_predicate_op238_write_state28 == 1'b1));
end

always @ (*) begin
    ap_block_state29_pp0_stage28_iter0 = ((src_pixels_full_n == 1'b0) & (ap_predicate_op240_write_state29 == 1'b1));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((src_pixels_full_n == 1'b0) & (ap_predicate_op155_write_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state30_pp0_stage29_iter0 = ((src_pixels_full_n == 1'b0) & (ap_predicate_op242_write_state30 == 1'b1));
end

always @ (*) begin
    ap_block_state31_pp0_stage30_iter0 = ((src_pixels_full_n == 1'b0) & (ap_predicate_op244_write_state31 == 1'b1));
end

always @ (*) begin
    ap_block_state32_pp0_stage31_iter0 = ((ap_predicate_op246_write_state32 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state33_pp0_stage0_iter1 = ((or_ln52_31_reg_1151 == 1'd1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((ap_predicate_op188_write_state3 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((ap_predicate_op190_write_state4 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((ap_predicate_op192_write_state5 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((ap_predicate_op194_write_state6 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((ap_predicate_op196_write_state7 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((ap_predicate_op198_write_state8 == 1'b1) & (src_pixels_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((ap_predicate_op200_write_state9 == 1'b1) & (src_pixels_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = src_pixels_blk_n;

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op155_write_state2 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_reg_1027 == 1'd1));
end

always @ (*) begin
    ap_predicate_op188_write_state3 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_1_reg_1031 == 1'd1));
end

always @ (*) begin
    ap_predicate_op190_write_state4 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_2_reg_1035 == 1'd1));
end

always @ (*) begin
    ap_predicate_op192_write_state5 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_3_reg_1039 == 1'd1));
end

always @ (*) begin
    ap_predicate_op194_write_state6 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_4_reg_1043 == 1'd1));
end

always @ (*) begin
    ap_predicate_op196_write_state7 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_5_reg_1047 == 1'd1));
end

always @ (*) begin
    ap_predicate_op198_write_state8 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_6_reg_1051 == 1'd1));
end

always @ (*) begin
    ap_predicate_op200_write_state9 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_7_reg_1055 == 1'd1));
end

always @ (*) begin
    ap_predicate_op202_write_state10 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_8_reg_1059 == 1'd1));
end

always @ (*) begin
    ap_predicate_op204_write_state11 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_9_reg_1063 == 1'd1));
end

always @ (*) begin
    ap_predicate_op206_write_state12 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_10_reg_1067 == 1'd1));
end

always @ (*) begin
    ap_predicate_op208_write_state13 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_11_reg_1071 == 1'd1));
end

always @ (*) begin
    ap_predicate_op210_write_state14 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_12_reg_1075 == 1'd1));
end

always @ (*) begin
    ap_predicate_op212_write_state15 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_13_reg_1079 == 1'd1));
end

always @ (*) begin
    ap_predicate_op214_write_state16 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_14_reg_1083 == 1'd1));
end

always @ (*) begin
    ap_predicate_op216_write_state17 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_15_reg_1087 == 1'd1));
end

always @ (*) begin
    ap_predicate_op218_write_state18 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_16_reg_1091 == 1'd1));
end

always @ (*) begin
    ap_predicate_op220_write_state19 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_17_reg_1095 == 1'd1));
end

always @ (*) begin
    ap_predicate_op222_write_state20 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_18_reg_1099 == 1'd1));
end

always @ (*) begin
    ap_predicate_op224_write_state21 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_19_reg_1103 == 1'd1));
end

always @ (*) begin
    ap_predicate_op226_write_state22 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_20_reg_1107 == 1'd1));
end

always @ (*) begin
    ap_predicate_op228_write_state23 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_21_reg_1111 == 1'd1));
end

always @ (*) begin
    ap_predicate_op230_write_state24 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_22_reg_1115 == 1'd1));
end

always @ (*) begin
    ap_predicate_op232_write_state25 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_23_reg_1119 == 1'd1));
end

always @ (*) begin
    ap_predicate_op234_write_state26 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_24_reg_1123 == 1'd1));
end

always @ (*) begin
    ap_predicate_op236_write_state27 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_25_reg_1127 == 1'd1));
end

always @ (*) begin
    ap_predicate_op238_write_state28 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_26_reg_1131 == 1'd1));
end

always @ (*) begin
    ap_predicate_op240_write_state29 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_27_reg_1135 == 1'd1));
end

always @ (*) begin
    ap_predicate_op242_write_state30 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_28_reg_1139 == 1'd1));
end

always @ (*) begin
    ap_predicate_op244_write_state31 = ((icmp_ln45_reg_1018 == 1'd0) & (or_ln52_29_reg_1143 == 1'd1));
end

always @ (*) begin
    ap_predicate_op246_write_state32 = ((or_ln52_30_reg_1147 == 1'd1) & (icmp_ln45_reg_1018 == 1'd0));
end

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign buff_V_address0 = zext_ln45_fu_484_p1;

assign cmp32_i_fu_493_p2 = (($signed(zext_ln45_1_fu_489_p1) < $signed(sext_ln33_cast_fu_460_p1)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_472_p2 = ((ap_sig_allocacmp_x_2 == loopWidth) ? 1'b1 : 1'b0);

assign or_ln52_10_fu_559_p2 = (cmp34_10_i | cmp32_i_fu_493_p2);

assign or_ln52_11_fu_565_p2 = (cmp34_11_i | cmp32_i_fu_493_p2);

assign or_ln52_12_fu_571_p2 = (cmp34_12_i | cmp32_i_fu_493_p2);

assign or_ln52_13_fu_577_p2 = (cmp34_13_i | cmp32_i_fu_493_p2);

assign or_ln52_14_fu_583_p2 = (cmp34_14_i | cmp32_i_fu_493_p2);

assign or_ln52_15_fu_589_p2 = (cmp34_15_i | cmp32_i_fu_493_p2);

assign or_ln52_16_fu_595_p2 = (cmp34_16_i | cmp32_i_fu_493_p2);

assign or_ln52_17_fu_601_p2 = (cmp34_17_i | cmp32_i_fu_493_p2);

assign or_ln52_18_fu_607_p2 = (cmp34_18_i | cmp32_i_fu_493_p2);

assign or_ln52_19_fu_613_p2 = (cmp34_19_i | cmp32_i_fu_493_p2);

assign or_ln52_1_fu_505_p2 = (cmp34_1_i | cmp32_i_fu_493_p2);

assign or_ln52_20_fu_619_p2 = (cmp34_20_i | cmp32_i_fu_493_p2);

assign or_ln52_21_fu_625_p2 = (cmp34_21_i | cmp32_i_fu_493_p2);

assign or_ln52_22_fu_631_p2 = (cmp34_22_i | cmp32_i_fu_493_p2);

assign or_ln52_23_fu_637_p2 = (cmp34_23_i | cmp32_i_fu_493_p2);

assign or_ln52_24_fu_643_p2 = (cmp34_24_i | cmp32_i_fu_493_p2);

assign or_ln52_25_fu_649_p2 = (cmp34_25_i | cmp32_i_fu_493_p2);

assign or_ln52_26_fu_655_p2 = (cmp34_26_i | cmp32_i_fu_493_p2);

assign or_ln52_27_fu_661_p2 = (cmp34_27_i | cmp32_i_fu_493_p2);

assign or_ln52_28_fu_667_p2 = (cmp34_28_i | cmp32_i_fu_493_p2);

assign or_ln52_29_fu_673_p2 = (cmp34_29_i | cmp32_i_fu_493_p2);

assign or_ln52_2_fu_511_p2 = (cmp34_2_i | cmp32_i_fu_493_p2);

assign or_ln52_30_fu_679_p2 = (cmp34_30_i | cmp32_i_fu_493_p2);

assign or_ln52_31_fu_685_p2 = (icmp_ln28 | cmp32_i_fu_493_p2);

assign or_ln52_3_fu_517_p2 = (cmp34_3_i | cmp32_i_fu_493_p2);

assign or_ln52_4_fu_523_p2 = (cmp34_4_i | cmp32_i_fu_493_p2);

assign or_ln52_5_fu_529_p2 = (cmp34_5_i | cmp32_i_fu_493_p2);

assign or_ln52_6_fu_535_p2 = (cmp34_6_i | cmp32_i_fu_493_p2);

assign or_ln52_7_fu_541_p2 = (cmp34_7_i | cmp32_i_fu_493_p2);

assign or_ln52_8_fu_547_p2 = (cmp34_8_i | cmp32_i_fu_493_p2);

assign or_ln52_9_fu_553_p2 = (cmp34_9_i | cmp32_i_fu_493_p2);

assign or_ln52_fu_499_p2 = (cmp34_i | cmp32_i_fu_493_p2);

assign pixel_fu_696_p1 = buff_V_q0[7:0];

assign sext_ln33_cast_fu_460_p1 = $signed(sext_ln33);

assign zext_ln45_1_fu_489_p1 = ap_sig_allocacmp_x_2;

assign zext_ln45_fu_484_p1 = ap_sig_allocacmp_x_2;

endmodule //Filter2DKernel_AXIBursts2PixelStream_Pipeline_bytes2pixels
